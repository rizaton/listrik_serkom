1724687090
f307d35ba477bbb000a896e1920eeee6-phpdoc%3Ade048cf30e70335e8739885ed5e89693-0eebe71252e771f91f1c9789539638e2
s:326316:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjg6IlRleHQucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MTp7czoyMToiXEZha2VyXFByb3ZpZGVyXHJvX01EIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MjE6IlxGYWtlclxQcm92aWRlclxyb19NRCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjU6InJvX01EIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6MjY6IlxGYWtlclxQcm92aWRlclxyb19NRFxUZXh0IjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTU6e3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBpbXBsZW1lbnRzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AY29uc3RhbnRzIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcHJvcGVydGllcyI7YToxOntzOjM3OiJcRmFrZXJcUHJvdmlkZXJccm9fTURcVGV4dDo6JGJhc2VUZXh0IjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5IjoxMjp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjk6InByb3RlY3RlZCI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyOTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjEyMDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM3OiJcRmFrZXJcUHJvdmlkZXJccm9fTURcVGV4dDo6JGJhc2VUZXh0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6ODoiYmFzZVRleHQiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjI6IkZyb20gcm8ud2lraXNvdXJjZS5vcmciO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MzI3OiJBY2VzdCB0ZXh0IGVzdGUgZGlzcG9uaWJpbCBzdWIgbGljZW7Im2EgQ3JlYXRpdmUgQ29tbW9ucyBjdSBhdHJpYnVpcmUKyJlpIGRpc3RyaWJ1aXJlIMOubiBjb25kacibaWkgaWRlbnRpY2U7IHBvdCBleGlzdGEgyJlpIGNsYXV6ZSBzdXBsaW1lbnRhcmUuClZlZGXIm2kgZGV0YWxpaSBsYSBUZXJtZW5paSBkZSB1dGlsaXphcmUuCgoKVGl0bGU6IFBvdmVzdGVhIGx1aSBIYXJhcC1BbGIKCkF1dGhvcjogSW9uIENyZWFuZ8SDCgpQb3N0aW5nIERhdGU6IEZlYnJ1YXJ5IDYsIDIwMDUKW0xhc3QgdXBkYXRlZDogRGVjZW1iZXIgMTMsIDIwMTZdCgpMYW5ndWFnZTogUm9tYW5pYW4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTozOntpOjA7Tzo0MjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcU2VlIjozOntzOjc6IgAqAG5hbWUiO3M6Mzoic2VlIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7TjtzOjk6IgAqAHJlZmVycyI7Tzo1MjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmVmZXJlbmNlXFVybCI6MTp7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJlZmVyZW5jZVxVcmwAdXJpIjtzOjUwOiJodHRwczovL3dpa2ltZWRpYWZvdW5kYXRpb24ub3JnL3dpa2kvVGVybXNfb2ZfVXNlLyI7fX1pOjE7Tzo0MjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcU2VlIjozOntzOjc6IgAqAG5hbWUiO3M6Mzoic2VlIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7TjtzOjk6IgAqAHJlZmVycyI7Tzo1MjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmVmZXJlbmNlXFVybCI6MTp7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJlZmVyZW5jZVxVcmwAdXJpIjtzOjUzOiJodHRwczovL3JvLndpa2lzb3VyY2Uub3JnL3dpa2kvUG92ZXN0ZWFfbHVpX0hhcmFwLUFsYiI7fX1pOjI7Tzo0MzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVmFyXyI6NDp7czo3OiIAKgBuYW1lIjtzOjM6InZhciI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czoxNToiACoAdmFyaWFibGVOYW1lIjtzOjA6IiI7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjIwOiJGYWtlclxQcm92aWRlclxyb19NRCI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRlZmF1bHQiO3M6MTA3NjMxOiI8PDwnRU9UJwpBbXUgY2ljxIMgZXJhIG9kYXTEgyDDrm50ci1vIMibYXLEgyB1biBjcmFpLCBjYXJlIGF2ZWEgdHJlaSBmZWNpb3JpLgrImGkgY3JhaXVsIGFjZWxhIG1haSBhdmVhIHVuIGZyYXRlIG1haSBtYXJlLCBjYXJlIGVyYSDDrm1wxINyYXQKw65udHItbyBhbHTEgyDIm2FyxIMsIG1haSBkZXDEg3J0YXTEgy4gyJhpIMOubXDEg3JhdHVsLCBmcmF0ZWxlIGNyYWl1bHVpLApzZSBudW1lYSBWZXJkZS3Drm1wxINyYXQ7IMiZaSDDrm1wxINyYXR1bCBWZXJkZSBudSBhdmVhIGZlY2lvcmksIGNpCm51bWFpIGZldGUuIE11bMibaSBhbmkgdHJlY3VyxIMgbGEgbWlqbG9jIGRlIGPDom5kIGFjZciZdGkgZnJhyJtpIG1haQphdnVyxIMgcHJpbGVqIGEgc2Ugw65udMOibG5pIGFtw6JuZG9pLiBJYXLEgyB2ZXJpaSwgYWRpY8SDIGZlY2lvcmlpCmNyYWl1bHVpIMiZaSBmZXRlbGUgw65tcMSDcmF0dWx1aSwgbnUgc2UgdsSDenVzZSBuaWNpb2RhdMSDIGRlIGPDom5kCmVyYXUgZWkuIMiYaSBhyJlhIHZlbmkgw65tcHJlanVyYXJlYSBkZSBuaWNpIMOubXDEg3JhdHVsIFZlcmRlIG51CmN1bm/ImXRlYSBuZXBvyJtpaSBzxINpLCBuaWNpIGNyYWl1bCBuZXBvYXRlbGUgc2FsZTogcGVudHJ1IGPEgyDIm2FyYQrDrm4gY2FyZSDDrm1wxINyxIPIm2VhIGZyYXRlbGUgY2VsIG1haSBtYXJlIGVyYSB0b2NtYWkgbGEgbyBtYXJnaW5lIGEKcMSDbcOibnR1bHVpLCDImWkgY3LEg2lhIGlzdHVpbGFsdCBsYSBvIGFsdMSDIG1hcmdpbmUuIMiYaSBhcG9pLCBwZQp2cmVtaWxlIGFjZWxlYSwgbWFpIHRvYXRlIMibxINyaWxlIGVyYXUgYsOibnR1aXRlIGRlIHLEg3pib2FpZQpncm96YXZlLCBkcnVtdXJpbGUgcGUgYXBlIMiZaSBwZSB1c2NhdCBlcmF1IHB1yJtpbiBjdW5vc2N1dGUgyJlpCmZvYXJ0ZSDDrm5jdXJjYXRlIMiZaSBkZSBhY2VlYSBudSBzZSBwdXRlYSBjxINsxIN0b3JpIGHImWEgZGUgdciZb3IgyJlpCmbEg3LEgyBwcmltZWpkaWkgY2Egw65uIHppdWEgZGUgYXN0xIN6aS4gyJhpIGNpbmUgYXB1Y2EgYSBzZSBkdWNlIHBlCmF0dW5jaSDDrm50ci1vIHBhcnRlIGEgbHVtaWkgYWRlc2VvcmkgZHVzIHLEg23Dom5lYSBww6JuxIMgbGEgbW9hcnRlLgoKRGFyIGlhIHPEgyBudSBuZSBkZXDEg3J0xINtIGN1IHZvcmJhIMiZaSBzxIMgw65uY2VwIGEgZGVwxINuYSBmaXJ1bApwb3ZlyJl0aWkuCgpBbXUgY2ljxIMgw65tcMSDcmF0dWwgYWNlbGEsIGFwcm9hcGUgZGUgYsSDdHLDom5lyJtlLCBjxIN6w6JuZCBsYQp6xINjYXJlLCBhIHNjcmlzIGPEg3RyZSBmcsSDyJtpbmUtc8SDdSBjcmFpdWx1aSwgc8SDLWkgdHJpbWl0xIMgZ3JhYm5pYwpwZSBjZWwgbWFpIHZyZWRuaWMgZGludHJlIG5lcG/Im2ksIGNhIHPEgy1sIGxhc2Ugw65tcMSDcmF0IMOubiBsb2N1bApzxIN1IGR1cMSDIG1vYXJ0ZWEgc2EuIENyYWl1bCwgcHJpbWluZCBjYXJ0ZWEsIMOubmRhdMSDIGNoZW3Egwp0dXN0cmVpIGZlY2lvcmlpIMOubmFpbnRlYSBzYSDImWkgbGUgemlzZToKCuKAlCBJYWNhIGNlLW1pIHNjcmllIGZyYXRlLW1ldSDImWkgbW/ImXVsIHZvc3RydS4gQ2FyZSBkaW50cmUgdm9pIHNlCnNpbXRlIGRlc3RvaW5pYyBhIMOubXDEg3LEg8ibaSBwZXN0ZSBvIMibYXLEgyBhyJlhIGRlIG1hcmUgyJlpIGJvZ2F0xIMsCmNhIGFjZWVhLCBhcmUgdm9pZSBkaW4gcGFydGVhIG1lYSBzxIMgc2UgZHVjxIMsIGNhIHPEgyDDrm1wbGluZWFzY8SDCnZvaW7Im2EgY2VhIG1haSBkZSBwZSB1cm3EgyBhIG1vyJl1bHVpIHZvc3RydS4KCkF0dW5jaSBmZWNpb3J1bCBjZWwgbWFpIG1hcmUgaWEgw65uZHLEg3puZWFsxIMgyJlpIHppY2UgOgoK4oCUIFRhdMSDLCBldSBjcmVkIGPEgyBtaWUgbWkgc2UgY3V2aW5lIGFjZWFzdMSDIGNpbnN0ZSwgcGVudHJ1IGPEgwpzdW50IGNlbCBtYWkgbWFyZSBkaW50cmUgZnJhyJtpOyBkZSBhY2VlYSB0ZSByb2cgc8SDLW1pIGRhaSBiYW5pCmRlIGNoZWx0dWlhbMSDLCBzdHJhaWUgZGUgcHJpbWVuZWFsxIMsIGFybWUgyJlpIGNhbCBkZSBjxINsxINyaWUsIGNhCnPEgyDImWkgcG9ybmVzYywgZsSDcsSDIHrEg2JhdsSDLgoK4oCUIEJpbmUsIGRyYWd1bCB0YXRlaSwgZGFjxIMgdGUgYml6dWllyJl0aSBjxIMtaSBwdXRlYSByxIN6YmF0ZSBww6JuxIMKYWNvbG8gyJlpIGNyZXppIGPEgyBlyJl0aSDDrm4gc3RhcmUgYSBjw6JybXVpIMiZaSBwZSBhbMibaWksIGFsZWdlLcibaQp1biBjYWwgZGluIGhlcmdoZWxpZSwgY2FyZS1pIHZyZWEgdHUsIGlhLcibaSBiYW5pIGPDonQgyJtpLW9yCnRyZWJ1aSwgaGFpbmUgY2FyZSDIm2ktb3IgcGzEg2NlYSwgYXJtZSBjYXJlLWkgY3JlZGUgY8SDLcibaSB2aW4gbGEKc29jb3RlYWzEgyDImWkgbWVyZ2kgY3UgYmluZSwgZsSDdHVsIG1ldS4KCkF0dW5jaSBmZWNpb3J1bCBjcmFpdWx1aSDDrsiZaSBpYSBjZWxlIHRyZWJ1aXRvYXJlLCBzxINydXTEgyBtw6JuYQp0xIN0w6JuZS1zxIN1LCBwcmltaW5kIGNhcnRlIGRlIGxhIGTDom5zdWwgY8SDdHJlIMOubXDEg3JhdHVsLCB6aWNlCnLEg21hcyBidW4gZnJhyJtpbG9yIHPEg2kgyJlpIGFwb2kgw65uY2FsZWPEgyDImWkgcG9ybmXImXRlIGN1IGJ1Y3VyaWUKc3ByZSDDrm1wxINyxIPIm2llLgoKQ3JhaXVsIMOubnPEgywgdnLDom5kIHPEgy1sIGlzcGl0ZWFzY8SDLCB0YWNlIG1vbGN1bSDImWksIHBlIMOubnNlcmF0ZSwKc2Ugw65tYnJhY8SDIHBlIGFzY3VucyDDrm50ci1vIHBpZWxlIGRlIHVycywgYXBvaSDDrm5jYWxlY8SDIHBlIGNhbCwKaWVzZSDDrm5haW50ZWEgZmVjaW9ydS1zxIN1IHBlIGFsdMSDIGNhbGUgyJlpIHNlIGJhZ8SDIHN1YiB1biBwb2QuIMiYaQpjw6JuZCBzxIMgdHJlYWPEgyBmaXUtc8SDdSBwZSBhY29sbywgbnVtYWkgaWFjYSBsYSBjYXDEg3R1bCBwb2R1bHVpCsOubCDImWkgw65udMOibXBpbsSDIHVuIHVycyBtb3JuxINpbmQuIEF0dW5jaSBjYWx1bCBmaXVsdWkgZGUgY3JhaQrDrm5jZXBlIGEgc8SDcmkgw65uIGRvdcSDIHBpY2lvYXJlLCBmb3LEg2luZCwgyJlpIGPDonQgcGUgY2Ugc8SDCml6YmVhc2PEgyBwZSBzdMSDcMOibnUtc8SDdS4gyJhpIGZpdWwgY3JhaXVsdWksIG5lbWFpcHV0w6JuZCBzdHJ1bmkKY2FsdWwgyJlpIG5lw65uZHLEg3puaW5kIGEgbWFpIG1lcmdlIMOubmFpbnRlLCBzZSDDrm50b2FybsSDIHJ1yJlpbmF0CsOubmFwb2kgbGEgdGF0dS1zxIN1LiBQw6JuxIMgc8SDIGFqdW5nxIMgZWwsIGNyYWl1bCBwZSBkZSBhbHTEgyBwYXJ0ZQrImWkgYWp1bnNlc2UgYWNhc8SDLCBkxINkdXNlIGRydW11bCBjYWx1bHVpLCDDrm5kb3Npc2UgcGllbGVhIGNlYSBkZQp1cnMgyJlpIGHImXRlcHRhIGFjdW0gc8SDIHZpbsSDIGZlY2lvcnUtc8SDdS4gyJhpIG51bWFpIGlhY2Egw65sIMiZaQp2ZWRlIHZlbmluZCByZXBlZGUsIGRhciBudSBhyJlhIGR1cMSDIGN1bSBzZSBkdXNlc2UuCgrigJQgRGEnIGNlLWFpIHVpdGF0LCBkcmFndWwgdGF0ZWksIGRlIHRlLWFpIMOubnRvcnMgw65uYXBvaT8gemlzZQpjcmFpdWwgY3UgbWlyYXJlLiBBaXN0YSBudS1pIHNlbW4gYnVuLCBkdXDEgyBjw6J0IMiZdGl1IGV1LgoK4oCUIERlIHVpdGF0LCBuLWFtIHVpdGF0IG5pbWljYSwgdGF0xIMsIGRhciBpYSwgcHJpbiBkcmVwdHVsIHVudWkKcG9kLCBtaS1hIGllyJlpdCDDrm5haW50ZSB1biB1cnMgZ3JvemF2LCBjYXJlIG0tYSB2w6Jyw6J0IMOubiB0b8ibaQpzcMSDcmllyJtpaS4gyJhpIGN1IG1hcmUgY2Ugc2PEg3DDom5kIGRpbiBsYWJlbGUgbHVpLCBhbSBnxINzaXQgY3UKY2FsZSBzxIMgbcSDIMOubnRvcmMgbGEgZC10YSBhY2FzxIMgZGVjw6J0IHPEgyBmaXUgcHJhZGEgZmlhcmVsb3IKc8SDbGJhdGljZS4gyJhpIGRlLWFjdW0gw65uYWludGUsIGR1Y8SDLXNlLCBkaW4gcGFydGVhIG1lYSwgY2luZQrImXRpZSwgY8SDIG1pZSB1bnVpYSBudS1taSB0cmVidWllIG5pY2kgw65tcMSDcsSDyJtpZSwgbmljaSBuaW1pY2E7CmRvYXIgbi1hbSBhIHRyxINpIGPDonQgbHVtZWEsIGNhIHPEgyBtb8iZdGVuZXNjIHDEg23Dom50dWwuCgrigJQgRGVzcHJlIGFjZWFzdGEgYmluZSBhaSBjaGl0aXQtbywgZHJhZ3VsIHRhdGVpLiBTZSB2ZWRlIGx1Y3J1CmPEgyBuaWNpIHR1IG51IGXImXRpIGRlIMOubXDEg3JhdCwgbmljaSDDrm1wxINyxIPIm2lhIHBlbnRydSB0aW5lOyDImWkKZGVjw6J0IHPEgyDDrm5jdXJjaSBudW1haSBhyJlhIGx1bWVhLCBtYWkgYmluZSBzxIMgyJllemkgZGVwYXJ0ZSwgY3VtCnppY2ksIGPEg2NpLCBtaWxhIERvbW51bHVpOiAiTGFjIGRlLWFyIGZpLCBicm9hyJl0ZSBzdW50IGRlc3R1bGUiLgpOdW1haSBhyJkgdnJlYSBzxIMgyJl0aXUsIGN1bSByxINtw6JuZSBjdSBtb8iZdS10xIN1LiBByJlhLWkgY8SDIG5lLWFtCsOubmN1cmNhdCDDrm4gc2zEg2LEg2NpdW5lPwoK4oCUIFRhdMSDLCB6aXNlIGF0dW5jaSBmZWNpb3J1bCBjZWwgbWlqbG9jaXUsIHPEgyBtxIMgZHVjIGV1LCBkYWPEgwp2cmVpLgoK4oCUIEFpIHRvYXTEgyB2b2lhIGRlIGxhIG1pbmUsIGbEg3R1bCBtZXUsIGRhciBtYXJlIGx1Y3J1IHPEgyBmaWUgZGUKbnUgyJtpIHMtb3IgdMSDaWEgyJlpIMibaWUgY8SDcsSDcmlsZS4gTWFpIMiZdGlpIHDEg2NhdHVsLCBwb2F0ZSBzxIMtyJtpCmlhc8SDIMOubmFpbnRlIHZyZXVuIGllcHVyZSwgY2V2YS4uLiDImWkgcG9ww6JjISBtLW9pIHRyZXppIGN1IHRpbmUKYWNhc8SDLCBjYSDImWkgY3UgZnJhdGUtdMSDdSwgyJktYXBvaSBhdHVuY2kgcnXImWluZWEgdGEgbi1hIGZpCnByb2FzdMSDLiBEYXIgZMSDLCBjZWFyY8SDIMiZaSB0dSwgc8SDIHZlemkgY3VtIMibaS1hIHNsdWppIG5vcm9jdWwuClZvcmJhIGNlZWE6ICJGaWVjYXJlIHBlbnRydSBzaW5lLCBjcm9pdG9yIGRlIHDDomluZSIuIERlLWkKaXpidXRpLCBiaW5lLWRlLWJpbmUsIGlhcsSDIGRlIG51LCBhdSBtYWkgcMSDyJtpdCDImWkgYWzIm2kgdm9pbmljaQpjYSB0aW5lLi4uCgpBdHVuY2kgZmVjaW9ydWwgY2VsIG1pamxvY2l1LCBwcmVnxIN0aW5kdS3ImWkgY2VsZSB0cmVidWl0b2FyZSDImWkKcHJpbWluZCDImWkgZWwgY2FydGUgZGluIG3Dom5hIHRhdMSDLXPEg3UgY8SDdHJlIMOubXDEg3JhdHVsLCDDrsiZaSBpYQp6aXVhIGJ1bsSDIGRlIGxhIGZyYcibaSwgyJlpIGEgZG91YSB6aSBwb3JuZciZdGUgyJlpIGVsLiDImGkgbWVyZ2UsIMiZaQptZXJnZSwgcMOibsSDIHNlIMOubm5vcHRlYXrEgyBiaW5lLiDImGkgY8OibmQgcHJpbiBkcmVwdHVsIHBvZHVsdWksCm51bWFpIGlhY2EgyJlpIHVyc3VsOiBtb3IhIG1vciEgbW9yISBDYWx1bCBmaXVsdWkgZGUgY3JhaSDDrm5jZXBlCmF0dW5jaSBhIGZvcsSDaSwgYSBzxINyaSDDrm4gZG91xIMgcGljaW9hcmUgyJlpIGEgZGEgw65uYXBvaS4gyJhpIGZpdWwKY3JhaXVsdWksIHbEg3rDom5kIGPEgyBudS1pIGx1Y3J1IGRlIMiZYWfEgywgc2UgbGFzxIMgyJlpIGVsIGRlCsOubXDEg3LEg8ibaWUgyJlpLCBjdSBydciZaW5lYSBsdWksIHNlIMOubnRvYXJjZSDDrm5hcG9pIGxhIHRhdMSDLXPEg3UKYWNhc8SDLiBDcmFpdWwsIGN1bSDDrmwgdmVkZSwgemljZToKCuKAlCBFaSwgZHJhZ3VsIHRhdGVpLCBhyJlhLWkgY8SDIHMtYSDDrm1wbGluaXQgdm9yYmEgY2VlYTogIkFwxINyxIMtbcSDCmRlIGfEg2luaSwgY8SDIGRlIGPDomluaSBudSBtxIMgdGVtIi4KCuKAlCBDZSBmZWwgZGUgdm9yYsSDLWkgYXN0YSwgdGF0xIM/ISB6aXNlIGZpdS1zxIN1IHJ1yJlpbmF0OyBsYSBkLXRhCnVyyJlpaSBzZSBjaGVhbcSDIGfEg2luaT8gQmEsIGlhIGFjdW0gY3JlZCBldSBmcsSDyJtpbmUtbWV1LCBjxIMgYciZYQp1cnMgb8iZdGlyZWEgw65udHJlYWfEgyBlc3RlIMOubiBzdGFyZSBzxIMgbyB6ZHJ1bWljZS4uLiDDjm5jxIMgbcSDIG1pcgpjdW0gYW0gc2PEg3BhdCBjdSB2aWHIm8SDOyBsZWhhbWl0ZSDImWkgZGUgw65tcMSDcsSDyJtpZSDImWkgZGUgdG90LCBjxIMKZG9hciwgc2xhdsSDIERvbW51bHVpLCBhbSBjZSBtw6JuY2EgbGEgY2FzYSBkLXRhbGUuCgrigJQgQ2UgbcOibmNhIHbEg2QgZXUgYmluZSBjxIMgYWksIGRlc3ByZSBhc3RhIG51IGUgdm9yYsSDLCBmxIN0dWwgbWV1LAp6aXNlIGNyYWl1bCBwb3NvbW9yw6J0LCBkYXIgaWEgc3B1bmXIm2ktbWk6IHJ1yJlpbmVhIHVuZGUgbyBwdW5lyJtpPwpEaW4gdHJlaSBmZWNpb3JpIGPDosibaSBhcmUgdGF0YSwgbmljaSB1bnVsIHPEgyBudSBmaWUgYnVuIGRlCm5pbWljYT8hCgpBcG9pLCBkcmVwdCBzxIMgdsSDIHNwdW4sIGPEgyBhdHVuY2kgZGVnZWFiYSBtYWkgc3RyaWNhyJtpIG3Dom5jYXJlYSwKZHJhZ2lpIG1laS4uLiBTxIMgdW1ibGHIm2kgbnVtYWkgYciZYSwgZnJ1bnphIGZyxINzaW5lbHVsdWksIHRvYXTEgwp2aWHIm2Egdm9hc3RyxIMgyJlpIHPEgyB2xIMgbMSDdWRhyJtpIGPEgyBzdW50ZcibaSBmZWNpb3JpIGRlIGNyYWksIGFzdGEKbnUgbWlyb2FzZSBhIG5hcyBkZSBvbS4uLiBDdW0gdsSDZCBldSwgZnJhdGUtbWV1IHNlIHBvYXRlIGN1bGNhCnBlIG8gdXJlY2hlIGRpbiBwYXJ0ZWEgdm9hc3RyxIM7IGxhIHNmw6JudHVsIEHImXRlYXB0xIMgcy1hIMOubXBsaW5pCmRvcmluyJthIGx1aS4gSGFsYWwgZGUgbmVwb8ibaSBjZSBhcmUhIFZvcmJhIGNlZWE6CgpMYSBwbMSDY2ludGUsIMOubmFpbnRlCsiYaSBsYSByxIN6Ym9pLCDDrm5hcG9pLgpGaXVsIGNyYWl1bHVpIGNlbCBtYWkgbWljLCBmxINjw6JuZHUtc2UgYXR1bmNpIHJvyJkgY3VtIMOuaSBnb3RjYSwKaWVzZSBhZmFyxIMgw65uIGdyxINkaW7EgyDImWkgw65uY2VwZSBhIHBsw6JuZ2Ugw65uIGluaW1hIHNhLCBsb3ZpdApmaWluZCDDrm4gYWTDom5jdWwgc3VmbGV0dWx1aSBkZSBhcMSDc8SDdG9hcmVsZSBjdXZpbnRlIGFsZQpwxINyaW50ZWx1aSBzxIN1LiDImGkgY3VtIHN0YSBlbCBwZSBnw6JuZHVyaSDImWkgbnUgc2UgZHVtZXJlYSBjZSBzxIMKZmFjxIMgcGVudHJ1IGEgc2PEg3BhIGRlIHJ1yJlpbmUsIG51bWFpIGlhY2Egc2UgdHJlemXImXRlIGRpbmFpbnRlYQpsdWkgY3UgbyBiYWLEgyBnw6JyYm92aXTEgyBkZSBixIN0csOibmXIm2UsIGNhcmUgdW1ibGEgZHVwxIMgbWlsb3N0ZW5pZS4KCuKAlCBEYScgY2Ugc3RhaSBhyJlhIHBlIGfDom5kdXJpLCBsdW1pbmF0ZSBjcsSDaciZb3I/IHppc2UgYmFiYTsKYWx1bmfEgyBtw6JobmlyZWEgZGluIGluaW1hIHRhLCBjxINjaSBub3JvY3VsIMOuyJtpIHLDomRlIGRpbiB0b2F0ZQpwxINyyJtpbGUgyJlpIG51IGFpIGRlIGNlIGZpIHN1cMSDcmF0LiBJYSwgbWFpIGJpbmUgbWlsdWllyJl0ZSBiYWJhCmN1IGNldmEuCgrigJQgSWEgbGFzxIMtbcSDLW5jb2xvLCBtxIN0dciZxIMsIG51IG3EgyBzdXDEg3JhLCB6aXNlIGZpdWwgY3JhaXVsdWk7CmFjdW0gYW0gYWx0ZWxlIGxhIGNhcHVsIG1ldS4KCuKAlCBGZWNpb3IgZGUgY3JhaSwgdmVkZWEtdGUtYciZIMOubXDEg3JhdCEgU3B1bmUgYmFiZWkgY2UgdGUKY2hpbnVpZciZdGU7IGPEgywgZGUgdW5kZSDImXRpaSwgcG9hdGUgc8SDLcibaSBhanV0ZSDImWkgZWEgY2V2YS4KCuKAlCBNxIN0dciZxIMsIMiZdGlpIGNlPyBVbmEtaSB1bmEgyJlpIGRvdcSDLXMgbWFpIG11bHRlOyBsYXPEgy1txIMtbgpwYWNlLCBjxIMgbnUtbWkgdsSDZCBsdW1lYSDDrm5haW50ZWEgb2NoaWxvciBkZSBuZWNhei4KCuKAlCBMdW1pbmF0ZSBjcsSDaciZb3IsIHPEgyBudSBixINudWllyJl0aSwgZGFyIG51IHRlIGl1yJtpIGHImWEgZGUgdGFyZSwKY8SDIG51IMiZdGlpIGRlIHVuZGUtyJtpIHBvYXRlIHZlbmkgYWp1dG9yLgoK4oCUIENlIHZvcmJlyJl0aSDDrm4gZG9kaWksIG3Eg3R1yJnEgz8gVG9jbWFpIGRlIGxhIHVuYSBjYSBkLXRhIMibaS1haQpnxINzaXQgc8SDIGHImXRlcHQgZXUgYWp1dG9yPwoK4oCUIFBvYXRlIMibaS1pIGRlyJlhbsibIGRlIHVuYSBjYSBhY2Vhc3RhPyB6aXNlIGJhYmEuIEhlaSwgbHVtaW5hdGUKY3LEg2nImW9yISBDZWwtZGUtc3VzIHZhcnPEgyBkYXJ1bCBzxIN1IHBlc3RlIGNlaSBuZXB1dGluY2lvyJlpOyBzZQp2ZWRlIGPEgyBhyJlhIHBsYWNlIHNmaW7Im2llaS1zYWxlLiBOdSBjxIN1dGEgY8SDIG3EgyB2ZXppIGfDonJib3bEgyDImWkKc3RyZW3Im3Vyb2FzxIMsIGRhciwgcHJpbiBwdXRlcmVhIGNlLW1pIGVzdGUgZGF0xIMsIMiZdGl1IGRpbmFpbnRlCmNlZWEgY2UgYXUgZGUgZ8OibmQgc8SDIGl6dm9kZWFzY8SDIHB1dGVybmljaWkgcMSDbcOibnR1bHVpIMiZaQphZGVzZW9yaSByw6JkIGN1IGhvaG90IGRlIG5lcHJpY2VwZXJlYSDImWkgc2zEg2JpY2l1bmVhIGxvci4gQciZYS1pCmPEgyBudS3Im2kgdmluZSBhIGNyZWRlLCBkYXIgc8SDIHRlIGZlcmVhc2PEgyBEdW1uZXpldSBkZSBpc3BpdMSDIQpDxINjaSBtdWx0ZSBhdSBtYWkgdsSDenV0IG9jaGlpIG1laSBkZS1hdMOidGEgYW1hciBkZSB2ZWFjdXJpIGPDonRlCnBvcnQgcGUgdW1lcmlpIGFjZciZdGlhLiBPZiEgY3LEg2nImW9ydWxlISBjcmVkZS1txIMsIGPEgyBzxIMgYWliaSB0dQpwdXRlcmVhIG1lYSwgYWkgdsOibnR1cmEgyJvEg3JpbGUgyJlpIG3Eg3JpbGUsIHDEg23Dom50dWwgbC1haSBkYSBkZS1hCmR1cmEsIGx1bWVhIGFjZWFzdGEgYWkgcHVydGEtbywgdWl0ZSBhyJlhLCBwZSBkZWdldGUsIMiZaSB0b2F0ZSBhcgpmaSBkdXDEgyBnw6JuZHVsIHTEg3UuIERhciB1aXRlIGNlIHZvcmJlyJl0ZSBnw6JyYm92YSDImWkKbmVwdXRpbmNpb2FzYSEgSWFydMSDLW3EgywgRG9hbW5lLCBjxIMgbnUgyJl0aXUgY2UgbWktYSBpZciZaXQgZGluCmd1csSDISBMdW1pbmF0ZSBjcsSDaciZb3IsIG1pbHVpZciZdGUgYmFiYSBjdSBjZXZhIQoKRml1bCBjcmFpdWx1aSwgZmVybWVjYXQgZGUgdm9yYmVsZSBiYWJlaSwgc2NvYXRlIGF0dW5jaSB1biBiYW4KyJlpIHppY2U6CgrigJQgyJppbmUsIG3Eg3R1yJnEgywgZGUgbGEgbWluZSBwdcibaW4gyJlpIGRlIGxhIER1bW5lemV1IG11bHQuCgrigJQgRGUgdW5kZSBkYWksIG1pbG9zdGl2dWwgRHVtbmV6ZXUgc8SDLcibaSBkZWEsIHppc2UgYmFiYSwgyJlpIG11bHQKc8SDIHRlIMOubnppbGVhc2PEgywgbHVtaW5hdGUgY3LEg2nImW9yLCBjxIMgbWFyZSBub3JvY2lyZSB0ZQphyJl0ZWFwdMSDLiBQdcibaW4gbWFpIGVzdGUsIMiZaSBhaSBzxIMgYWp1bmdpIMOubXDEg3JhdCwgY2FyZSBuLWEgbWFpCnN0YXQgYWx0dWwgcGUgZmHIm2EgcMSDbcOibnR1bHVpIGHImWEgZGUgaXViaXQsIGRlIHNsxIN2aXQgyJlpIGRlCnB1dGVybmljLiBBY3VtLCBsdW1pbmF0ZSBjcsSDaciZb3IsIGNhIHPEgyB2ZXppIGPDonQgcG9hdGUgc8SDLcibaQphanV0ZSBtaWxvc3RlbmlhLCBzdGFpIGxpbmnImXRpdCwgdWl0xIMtdGUgZHJlcHQgw65uIG9jaGlpIG1laSDImWkKYXNjdWx0xIMgY3UgbHVhcmUtYW1pbnRlIGNlIMibaS1vaSBzcHVuZTogZHUtdGUgbGEgdGF0xIMtdMSDdSDImWkKY2VyZSBzxIMtyJtpIGRlYSBjYWx1bCwgYXJtZWxlIMiZaSBoYWluZWxlIGN1IGNhcmUgYSBmb3N0IGVsIG1pcmUsCsiZaSBhdHVuY2kgYWkgc8SDIHRlIHBvyJtpIGR1Y2UgdW5kZSBuLWF1IHB1dHV0IG1lcmdlIGZyYcibaWkgdMSDaTsKcGVudHJ1IGPEgyDIm2llIGEgZm9zdCBzY3JpcyBkZSBzdXMgc8SDLcibaSBmaWUgZGF0xIMgYWNlYXN0xIMgY2luc3RlLgpUYXR1LXTEg3Ugcy1hIMOubXBvdHJpdmkgyJlpIG4tYSB2cmVhIHPEgyB0ZSBsYXNlLCBkYXIgdHUgc3TEg3J1aWXImXRlCnBlIGzDom5nxIMgZMOibnN1bCBjdSBydWfEg21pbnRlLCBjxIMgYWkgc8SDLWwgw65uZHVwbGVjaS4gSGFpbmVsZQpkZXNwcmUgY2FyZSDIm2ktYW0gdm9yYml0IHN1bnQgdmVjaGkgyJlpIHBvbm9zaXRlLCDImWkgYXJtZWxlCnJ1Z2luaXRlLCBpYXLEgyBjYWx1bCBhaSBzxIMtbCBwb8ibaSBhbGVnZSBwdW7Dom5kIMOubiBtaWpsb2N1bApoZXJnaGVsaWVpIG8gdGF2w6AgcGxpbsSDIGN1IGrEg3JhdGljLCDImWkgY2FyZSBkaW50cmUgY2FpIGEgdmVuaSBsYQpqxINyYXRpYyBzxIMgbcSDbsOibmNlLCBhY2VsYSBhcmUgc8SDIHRlIGR1Y8SDIGxhIMOubXDEg3LEg8ibaWUgyJlpIGFyZSBzxIMKdGUgc2NhcGUgZGluIG11bHRlIHByaW1lamRpaS4gyJppbmUgbWludGUgY2UtyJtpIHNwdW4gZXUsIGPEgyBwb2F0ZQpzxIMgbmUgbWFpIMOubnTDomxuaW0gbGEgdnJ1biBjYXDEg3QgZGUgbHVtZTogY8SDY2kgZGVhbCBjdSBkZWFsIHNlCmFqdW5nZSwgZGFyIMOubmPEgyBvbSBjdSBvbSEKCsiYaSBwZSBjw6JuZCB2b3JiZWEgYmFiYSBhY2VzdGUsIG8gdmVkZSDDrm52xINsdWl0xIMgw65udHItdW4gaG9ib3QKYWxiLCByaWRpY8OibmR1LXNlIMOubiB2xIN6ZHVoLCBhcG9pIMOubsSDbMibw6JuZHUtc2UgdG90IG1haSBzdXMsIMiZaQpkdXDEgyBhY2VlYSBuLW8gbWFpIHrEg3JpIGRlZmVsLiBBdHVuY2kgbyDDrm5maW9yYXJlIGN1cHJpbmRlIHBlCmZpdWwgY3JhaXVsdWksIHLEg23Dom7Dom5kIHVpbWl0IGRlIHNwYWltxIMgyJlpIG1pcmFyZSwgZGFyIHBlIHVybcSDLAp2ZW5pbmR1LWkgaW5pbWEgbGEgbG9jIMiZaSBwbGluIGRlIMOubmNyZWRlcmUgw65uIHNpbmUgY8SDIHZhIGl6YnV0aQpsYSBjZWVhIGNlIGfDom5kZWEsIHNlIMOubmbEg8ibaciZYXrEgyDDrm5haW50ZWEgdGF0xIMtc8SDdSwgemljw6JuZDoKCuKAlCBExIMtbWkgdm9pZSBjYSBzxIMgbcSDIGR1YyDImWkgZXUgcGUgdXJtYSBmcmHIm2lsb3IgbWVpLCBudSBkZQphbHRhLCBkYXIgY2Egc8SDLW1pIMOubmNlcmMgbm9yb2N1bC4gyJhpIG9yaSBvaSBwdXRlYSBpemJ1dGksIG9yaQpudSwgZGFyIMOuyJtpIGbEg2fEg2R1aWVzYyBkaW5haW50ZSBjxIMsIG9kYXTEgyBwb3JuaXQgZGluIGNhc2EKZC10YWxlLCDDrm5hcG9pIG51IG0tb2kgbWFpIMOubnRvYXJjZSwgc8SDIMiZdGl1IGJpbmUgY8SDIG0tb2kKw65udMOibG5pIMiZaSBjdSBtb2FydGVhIMOubiBjYWxlLgoK4oCUIEx1Y3J1IG5lZ8OibmRpdCwgZHJhZ3VsIHRhdGVpLCBzxIMgYXVkIGHImWEgdm9yYmUgdG9jbWFpIGRpbiBndXJhCnRhLCB6aXNlIGNyYWl1bC4gRnJhyJtpaSB0xINpIGF1IGRvdmVkaXQgY8SDIG51IGF1IGluaW3EgwrDrm50ci3Drm7ImWlpLCDImWkgZGluIHBhcnRlYSBsb3IgbWktYW0gbHVhdCB0b2F0xIMgbsSDZGVqZGVhLiBEb2FyIHR1CnPEgyBmaWkgbWFpIHZpdGVheiwgZGFyIHBhcmPEgyB0b3QgbnUtbWkgdmluZSBhIGNyZWRlLiDDjm5zxIMsIGRhY8SDCnZyZWkgyJlpIHZyZWkgbnVtYWlkZWPDonQgc8SDIHRlIGR1Y2ksIGV1IG51IHRlIG9wcmVzYywgZGFyIG1pLWkgbnUKY3VtdmEgc8SDIHRlIMOubnTDomxuZciZdGkgY3Ugc2PDonJiYSDDrm4gZHJ1bSDImWkgc8SDIGRhaSDImWkgdHUgY2luc3RlYQpwZSBydciZaW5lLCBjLWFwb2kgYXR1bmNpIGN1cmF0IMOuyJtpIHNwdW4gY8SDIG51IG1haSBhaSBjZSBjxIN1dGEgbGEKY2FzYSBtZWEuCgrigJQgQXBvaSBkxIMsIHRhdMSDLCBvbXVsIGUgZGF0b3Igc8SDIHNlIMOubmNlcmNlLiBBbSBzxIMgcG9ybmVzYyDImWkgZXUKw65udHItdW4gbm9yb2MgyJlpIGN1bSBhIGRhIER1bW5lemV1ISBOdW1haSwgdGUgcm9nLCBkxIMtbWkgY2FsdWwsCmFybWVsZSDImWkgaGFpbmVsZSBjdSBjYXJlIGFpIGZvc3QgZC10YSBtaXJlLCBjYSBzxIMgbcSDIHBvdCBkdWNlLgoKQ3JhaXVsLCBhdXppbmQgYWNlYXN0YSwgcGFyY8SDIG51IGktYSBwcmVhIHZlbml0IGxhIHNvY290ZWFsxIMgyJlpLArDrm5jcmXIm2luZCBkaW4gc3Byw6JuY2VuZSwgYSB6aXM6CgrigJQgSGVpLCBoZWkhIGRyYWd1bCB0YXRlaSwgY3Ugdm9yYmEgYWNlYXN0YSBtaS1haSBhZHVzIGFtaW50ZSBkZQpjw6JudGVjdWwgY2VsYToKClZvaW5pYyB0w6JuxINyLCBjYWwgYsSDdHLDom4sCkdyZXUgc2UtbmfEg2R1aWUgbGEgZHJ1bSEKRC1hcG9pIGNhbHVsIG1ldSBkZSBwZSBhdHVuY2kgY2luZSBtYWkgyJl0aWUgdW5kZSBpLW9yIGZpCnB1dHJlemluZCBjaW9sYW5lbGUhIEPEgyBkb2FyIG51IGVyYSBzxIMgdHLEg2lhc2PEgyB1biB2ZWFjIGRlIG9tIQpDaW5lIMibaS1hIHbDonLDonQgw65uIGNhcCDImWkgdW5hIGNhIGFjZWFzdGEsIGFjZWxhIMOubmPEgy1pIHVudWwuLi4KT3JpIHZvcmJhIGNlZWE6IFBlc2VtbmUgdW1ibGkgZHVwxIMgY2FpIG1vcsibaSBzxIMgbGUgaWVpCnBvdGNvYXZlbGUuCgrigJQgVGF0xIMsIGF0w6J0YSBjZXIgyJlpIGV1IGRlIGxhIGQtdGEuIEFjdW0sIG9yaSBjLWEgZmkgdHLEg2luZApjYWx1bCwgb3JpIGPEgyBuLWEgZmkgdHLEg2luZCwgYWNlYXN0YSBtxIMgcHJpdmXImXRlIHBlIG1pbmU7IG51bWFpCnZyZWF1IHPEgyDImXRpdSBkYWPEgyBtaS1sIGRhaSBvcmkgYmEuCgrigJQgRGluIHBhcnRlYSBtZWEsIGRhdCBzxIMtyJtpIGZpZSwgZHJhZ3VsIHRhdGVpLCBkYXIgbWktaSBkZS1hCm1pcmFyZWEgZGUgdW5kZSBhaSBzxIMtbCBpZWksIGRhY8SDIG4tYXJlIGZpaW7Im8SDIHBlIGx1bWUuCgrigJQgRGVzcHJlIGFjZWFzdGEgbnUgbcSDIHBsw6JuZyBldSwgdGF0xIMsIGJpbmUgY8SDIG1pIGwtYWkgZGF0OyBkZQp1bmRlLWEgZmksIGRlIHVuZGUgbi1hIGZpLCBkYWPEgyBsLW9pIGfEg3NpLCBhbCBtZXUgc8SDIGZpZS4KCsiYaSBhdHVuY2ksIG9kYXTEgyBzZSBzdWllIMOubiBwb2QgyJlpIGNvYm9hcsSDIGRlLWFjb2xvIHVuIGPEg3DEg3N0cnUsCnVuIGZyw6J1LCB1biBiaWNpIMiZaSBvIMiZYSwgdG9hdGUgY29sYsSDaXRlLCBzZmFyb2dpdGUgyJlpIHZlY2hpIGNhCnDEg23Dom50dWwuIEFwb2kgbWFpIHNjb2F0ZSBkaW50ci11biBnaGVyZ2hpcml1IG5pyJl0ZSBzdHJhaWUKZm9hcnRlIHZlY2hpLCB1biBhcmMsIG5pyJl0ZSBzxINnZcibaSwgdW4gcGFsb8iZIMiZaSB1biBidXpkdWdhbiwKdG9hdGUgcGxpbmUgZGUgcnVnaW7EgywgyJlpIHNlIGFwdWPEgyBkZSBsZSBncmlqZciZdGUgYmluZSDImWkgbGUKcHVuZSBkZW9wYXJ0ZS4gUGUgdXJtxIMgdW1wbGUgbyB0YXZhIGN1IGrEg3JhdGljLCBzZSBkdWNlIGN1IGTDom5zYQpsYSBoZXJnaGVsaWUgyJlpIG8gcHVuZSBqb3Mgw65udHJlIGNhaS4gyJhpIGF0dW5jaSwgbnVtYWkgaWFjYSBjZQppZXNlIGRpbiBtaWpsb2N1bCBoZXJnaGVsaWVpIG8gcsSDcGNpdWfEgyBkZSBjYWwsIGdyZWLEg25vcywKZHVwdXJvcyDImWkgc2xhYiwgZGUtaSBudW3Eg3JhaSBjb2FzdGVsZTsgyJlpIHZlbmluZCBkZS1hIGRyZXB0dWwKbGEgdGF2YSwgYXB1Y8SDIG8gZ3VyxIMgZGUgasSDcmF0aWMuIEZpdWwgY3JhaXVsdWkgw65pIMiZaSB0cmFnZQphdHVuY2kgY3UgZnLDonVsIMOubiBjYXAsIHppY8OibmQ6CgrigJQgR2hpam9hZ8SDIHVyw6JjaW9hc8SDIGNlIGXImXRpISBkaW4gdG/Im2kgY2FpaSwgdG9jbWFpIHR1IHRlLWFpCmfEg3NpdCBzxIMgbcSDbsOibmNpIGrEg3JhdGljPyBEZSB0ZS1hIMOubXBpbmdlIHDEg2NhdHVsIHPEgyBtYWkgdmlpIG8KZGF0xIMsIHZhaSBkZSBzdGVhdWEgdGEgYXJlIHPEgyBmaWUhCgpBcG9pIMOubmNlcGUgYSBwdXJ0YSBjYWlpIMOubmNvbG8gyJlpIMOubmNvYWNlLCDImWkgbnVtYWkgaWFjYQpzbMSDYsSDdHVyYSBjZWEgZGUgY2FsIGlhciBzZSByZXBlZGUgyJlpIGFwdWPEgyBvIGd1csSDIGRlIGrEg3JhdGljLgpGaXVsIGNyYWl1bHVpIMOuaSBtYWkgdHJhZ2UgyJlpIGF0dW5jaSB1biBmcsOidSDDrm4gY2FwLCBjw6J0IGNlCnBvYXRlLCDImWkgYXBvaSBpYXIgw65uY2VwZSBhIHB1cnRhIGNhaWkgZGUgY29sbyBww6JuxIMgY29sbywgc8SDCnZhZMSDLCBudSBjdW12YSBhIHZlbmkgYWx0IGNhbCBzxIMgbcSDbsOibmNlIGrEg3JhdGljLiDImGkgbnVtYWkgaWFjYSwKyJlpIGEgdHJlaWEgb2FyxIMsIHRvdCBnbG9hYmEgY2VhIGRlIGNhbCB2aW5lIMiZaSDDrm5jZXBlIGEgbcOibmNhIGxhCmrEg3JhdGljLCBkZSBuLWEgbWFpIHLEg21hcy4gQXR1bmNpIGZpdWwgY3JhaXVsdWksIG3Dom5pb3MsIMOuaSBtYWkKdHJhZ2UgdW4gZnLDonUsIGlhciBjw6J0IGNlIHBvYXRlLCBhcG9pIMOubCBwcmluZGUgw65uIGPEg3DEg3N0cnUgyJlpLApwdW7Dom5kdS1pIGZyw6J1bCDDrm4gY2FwLCB6aWNlIMOubiBnw6JuZHVsIHPEg3U6ICJTxIMtbCBpYXUsIG9yaSBzxIMtaQpkYXUgZHJ1bXVsPyBNxIMgdGVtIGPEgyBtLW9pIGZhY2UgZGUgcsOicy4gRGVjw6J0IGN1IGHImWEgY2FsLCBtYWkKYmluZSBwZWRlc3RydSIuCgrImGkgY3VtIHN0YSBlbCDDrm4gY3VtcGVuZSwgc8SDLWwgaWEsIHPEgyBudS1sIGlhLCBjYWx1bCBzZSDImWkKc2N1dHVyxIMgZGUgdHJlaSBvcmksIMiZaSDDrm5kYXTEgyByxINtw6JuZSBjdSBwxINydWwgbGlucy1wcmVsaW5zIMiZaQp0w6JuxINyIGNhIHVuIHRyZXRpbiwgZGUgbnUgZXJhIGFsdCBtw6Juem9jIG1haSBmcnVtb3Mgw65uIHRvYXTEgwpoZXJnaGVsaWEuIMiYaSBhcG9pLCB1aXTDom5kdS1zZSDIm2ludMSDIMOubiBvY2hpaSBmaXVsdWkgZGUgY3JhaSwKemljZToKCuKAlCBTdWkgcGUgbWluZSwgc3TEg3DDom5lLCDImWkgyJtpbmUtdGUgYmluZSEgRml1bCBjcmFpdWx1aSwKcHVuw6JuZHUtaSB6YWJhbGEgw65uIGd1csSDLCDDrm5jYWxlY8SDLCDImWkgYXR1bmNpIGNhbHVsIG9kYXTEgyB6Ym9hcsSDCmN1IGTDom5zdWwgcMOibsSDIGxhIG5vdXJpIMiZaSBhcG9pIHNlIGxhc8SDIMOubiBqb3MgY2EgbyBzxINnZWF0xIMuCkR1cMSDIGFjZWVhIG1haSB6Ym9hcsSDIMOubmPEgyBvIGRhdMSDIHDDom7EgyBsYSBsdW7EgyDImWkgaWFyIHNlIGxhc8SDIMOubgpqb3MgbWFpIGl1dGUgZGVjw6J0IGZ1bGdlcnVsLiDImGkgdW5kZSBudSBtYWkgemJvYXLEgyDImWkgYSB0cmVpYQpvYXLEgyBww6JuxIMgbGEgc29hcmUgyJlpLCBjw6JuZCBzZSBsYXPEgyBqb3MsIMOubnRyZWFixIM6CgrigJQgRWksIHN0xINww6JuZSwgY3VtIMibaSBzZSBwYXJlPyBHw6JuZGl0LWFpIHZyb2RhdMSDIGPEgyBhaSBzxIMKYWp1bmdpOiBzb2FyZWxlIGN1IHBpY2lvYXJlbGUsIGx1bmEgY3UgbcOibmEgyJlpIHByaW4gbm91cmkgc8SDCmNhdcibaSBjdW51bmE/CgrigJQgQ3VtIHPEgyBtaSBzZSBwYXLEgywgZHJhZ3VsIG1ldSB0b3ZhcsSDyJk/IElhLCBtLWFpIGLEg2dhdCDDrm4gdG9hdGUKZ3JvemlsZSBtb3LIm2lpLCBjxINjaSwgY3VwcmlucyBkZSBhbWXIm2VhbMSDLCBudSBtYWkgyJl0aWFtIHVuZGUgbcSDCmfEg3Nlc2MgyJlpIGPDonQgcGUgY2UgZXJhaSBzxIMgbcSDIHByxINwxINkZciZdGkuCgrigJQgSWEsIGHImWEgYW0gYW1lyJtpdCDImWkgZXUsIHN0xINww6JuZSwgY8OibmQgbWktYWkgZGF0IGN1IGZyw6J1bCDDrm4KY2FwLCBzxIMgbcSDIHByxINwxINkZciZdGksIMiZaSBjdSBhc3RhIGFtIHZydXQgc8SDLW1pIHLEg3N0b3JjIGNlbGUKdHJlaSBsb3ZpdHVyaS4gVm9yYmEgY2VlYTogdW5hIHBlbnRydSBhbHRhLiBBY3VtIGNyZWQgY8SDIG3EgwpjdW5vyJl0aSDImWkgZGUgdXLDonQgyJlpIGRlIGZydW1vcywgyJlpIGRlIGLEg3Ryw6JuIMiZaSBkZSB0w6JuxINyLCDImWkgZGUKc2xhYiDImWkgZGUgcHV0ZXJuaWM7IGRlLWFjZWVhIG3EgyBmYWMgaWFyIGN1bSBtLWFpIHbEg3p1dCDDrm4KaGVyZ2hlbGllLCDImWkgZGUtYWN1bSDDrm5haW50ZSBzdW50IGdhdGEgc8SDIHRlIMOubnRvdsSDcsSDyJllc2MKb3JpdW5kZSBtaS1pIHBvcnVuY2ksIHN0xINww6JuZS4gTnVtYWkgc8SDLW1pIHNwdWkgZGluYWludGUgY3VtIHPEgwp0ZSBkdWM6IGNhIHbDom50dWwgb3JpIGNhIGfDom5kdWw/CgrigJQgRGUgbWktaSBkdWNlIGNhIGfDom5kdWwsIHR1IG1pLWkgcHLEg3DEg2RpLCBpYXIgZGUgbWktaSBkdWNlIGNhCnbDom50dWwsIHR1IG1pLWkgZm9sb3NpLCBjxINsdcibdWwgbWV1LCB6aXNlIGZpdWwgY3JhaXVsdWkuCgrigJQgQmluZSwgc3TEg3DDom5lLiBBY3VtIHN1aSBwZSBtaW5lIGbEg3LEgyBncmlqxIMgyJlpIGhhaSBzxIMgdGUgZHVjCnVuZGUgdnJlaS4KCkZpdWwgY3JhaXVsdWksIMOubmPEg2xlY8OibmQsIMOubCBuZXRlemXImXRlIHBlIGNvYW3EgyDImWkgemljZTog4oCUIEhhaSwKY8SDbHXIm3VsIG1ldSEgQXR1bmNpIGNhbHVsIHpib2FyxIMgbGluIGNhIHbDom50dWwsIMiZaSBjw6JuZCB2w6JudHVsIGEKYWJ1cml0LCBpYWNhIMiZaSBlaSBsYSBjcmFpIMOubiBvZ3JhZMSDIGF1IHNvc2l0LgoK4oCUIEJ1biBzb3NpdCBsYSBub2ksIHZvaW5pY2UhIHppc2UgY3JhaXVsLCBjYW0gY3UganVtxIN0YXRlIGRlCmd1csSDLiBEYXIgYWlzdGEgY2FsIMibaSBsLWFpIGFsZXM/Li4uCgrigJQgQXBvaSBkxIMsIHRhdMSDLCBjdW0gYSBkYXQgdMOicmd1bCDImWkgbm9yb2N1bDsgYW0gZGUgdHJlY3V0IHByaW4KbXVsdGUgbG9jdXJpIMiZaSBudSB2cmVhdSBzxIMgbcSDIGlhIG9hbWVuaWkgbGEgb2NoaS4gTS1vaSBkdWNlIMiZaQpldSBjw6J0IGPEg2xhcmUsIGPDonQgcGUgam9zLCBjdW0gb2kgcHV0ZWEuCgrImGkgemljw6JuZCBhY2VzdGUsIHB1bmUgdGFybmnIm2EgcGUgY2FsLCBhbmluxIMgYXJtZWxlIGxhIG9ibMOibmMsCsOuyJlpIGlhIG1lcmluZGUgyJlpIGJhbmkgZGUgYWp1bnMsIHNjaGltYnVyaSDDrm4gZGVzYWdpIMiZaSBvIHBsb3NjxIMKcGxpbsSDIGN1IGFwxIMuIEFwb2kgc8SDcnV0xIMgbcOibmEgdGF0xIMtc8SDdSwgcHJpbWluZCBjYXJ0ZSBkZSBsYQpkw6Juc3VsIGPEg3RyZSDDrm1wxINyYXR1bCwgemljZSByxINtYXMgYnVuIGZyYcibaWxvciBzxINpIMiZaSBhIHRyZWlhCnppIGPEg3RyZSBzZWFyxIMgcG9ybmXImXRlIMiZaSBlbCwgbWVyZ8OibmQgZGluIHBhc3VsIGNhbHVsdWkuIMiYaQptZXJnZSBlbCwgyJlpIG1lcmdlLCBww6JuxIMgc2Ugw65ubm9wdGVhesSDIGJpbmUuIMiYaSwgcHJpbiBkcmVwdHVsCnBvZHVsdWksIG51bWFpIGlhY2Egw65pIGllc2UgyJlpIGx1aSB1cnN1bCDDrm5haW50ZSwgbW9ybsSDaW5kCsOubmZyaWNvyJlhdC4gQ2FsdWwgYXR1bmNpIGTEgyBuxIN2YWzEgyBhc3VwcmEgdXJzdWx1aSwgyJlpIGZpdWwKY3JhaXVsdWksIHJpZGljw6JuZCBidXpkdWdhbnVsIHPEgyBkZWEsIG51bWFpIGlhY2EgY2UgYXVkZSBnbGFzIGRlCm9tIHppY8OibmQ6CgrigJQgRHJhZ3VsIHRhdGVpLCBudSBkYSwgY8SDIGV1IHN1bnQuIEF0dW5jaSBmaXVsIGNyYWl1bHVpCmRlc2NhbGVjxIMsIMiZaSB0YXTEgy1zxIN1LCBjdXByaW56w6JuZHUtbCDDrm4gYnJhyJtlLCDDrmwgc8SDcnV0xIMgyJlpLWkKemljZToKCuKAlCBGxIN0dWwgbWV1LCBidW4gdG92YXLEg8iZIMibaS1haSBhbGVzOyBkZSB0ZS1hIMOubnbEg8ibYXQgY2luZXZhLApiaW5lIMibaS1hIHByaWl0LCBpYXLEgyBkZS1haSBmxINjdXQtbyBkaW4gY2FwdWwgdMSDdSwgYnVuIGNhcCBhaQphdnV0LiBNZXJnaSBkZS1hY3VtIHRvdCDDrm5haW50ZSwgY8SDIHR1IGXImXRpIHZyZWRuaWMgZGUgw65tcMSDcmF0LgpOdW1haSDIm2luZSBtaW50ZSBzZmF0dWwgY2UtyJtpIGRhdTogw65uIGPEg2zEg3RvcmlhIHRhIGFpIHPEgyBhaQp0cmVidWluyJvEgyDImWkgZGUgcsSDaSwgyJlpIGRlIGJ1bmksIGRhciBzxIMgdGUgZmVyZciZdGkgZGUgb211bCByb8iZLAppYXLEgyBtYWkgYWxlcyBkZSBjZWwgc3DDom4sIGPDonQgw65pIHB1dGVhOyBzxIMgbi1haSBkZS1hIGZhY2UgY3UKZMOibsiZaWksIGPEg2NpIHN1bnQgZm9hcnRlIMiZdWd1YmXIm2kuIMiYaSwgbGEgdG9hdMSDIMOubnTDom1wbGFyZWEsCmNhbHVsLCB0b3ZhcsSDyJl1bCB0xIN1LCB0ZS1hIG1haSBzZsSDdHVpIMiZaSBlbCBjZSBhaSBzxIMgZmFjaSwgY8SDIGRlCm11bHRlIHByaW1lamRpaSBtLWEgc2PEg3BhdCDImWkgcGUgbWluZSDDrm4gdGluZXJlyJtpbGUgbWVsZSEgTmEtyJtpCmFjdW0gyJlpIHBpZWxlYSBhc3RhIGRlIHVycywgY8SDIMibaS1hIHByaW5kZSBiaW5lIHZyZW9kYXTEgy4KCkFwb2ksIGRlem1pZXJkw6JuZCBjYWx1bCwgw65pIG1haSBzxINydXTEgyBkZSBjw6J0ZXZhIG9yaSBwZSBhbcOibmRvaQrImWkgbGUgemljZToKCuKAlCBNZXJnZcibaSDDrm4gcGFjZSwgZHJhZ2lpIG1laS4gRGUtYWN1bSDDrm5haW50ZSwgRHVtbmV6ZXUgyJl0aWUKY8OibmQgbmUtb20gbWFpIHZlZGVhIS4uLgoKRml1bCBjcmFpdWx1aSBhdHVuY2kgw65uY2FsZWPEgywgyJlpIGNhbHVsLCBzY3V0dXLDom5kdS1zZSwgbWFpCmFyYXTEgy1zZSBvIGRhdMSDIHTDom7Eg3IsIGN1bSDDrmkgcGzEg2NlYSBjcmFpdWx1aSwgYXBvaSBmYWNlIG8Kc8SDcml0dXLEgyDDrm5hcG9pIMiZaSB1bmEgw65uYWludGUgyJlpIHNlIGNhbSBtYWkgZHVjIGxhIMOubXDEg3LEg8ibaWUsCkR1bW5lemV1IHPEgyBuZSDIm2llLCBjxIMgY3V2w6JudHVsIGRpbiBwb3Zlc3RlLCDDrm5haW50ZSBtdWx0IG1haQplc3RlLiDImGkgbWVyZyBlaSBvIHppLCBtZXJnIGRvdcSDLCDImWkgbWVyZyBwYXRydXplY2kgyJlpIG5vdcSDLApww6JuxIMgY2UgZGUgbGEgbyB2cmVtZSBsZSBpbnRyxIMgY2FsZWEgw65uIGNvZHJ1IMiZaSBhdHVuY2kgbnVtYWkKaWFjYSBjZSBsZSBpZXNlIMOubmFpbnRlIHVuIG9tIHNww6JuIMiZaSB6aWNlIGN1IMOubmRyxIN6bmVhbMSDIGZpdWx1aQpkZSBjcmFpOgoK4oCUIEJ1biDDrm50w6JsbmnImXVsLCB2b2luaWNlISBOdSBhaSB0cmVidWluyJvEgyBkZSBzbHVnxIMgbGEgZHJ1bT8KUHJpbiBsb2N1cmlsZSBpZXN0ZWEgZSBjYW0gZ3JldSBkZSBjxINsxIN0b3JpdCBzaW5ndXI7IG51IGN1bXZhCnPEgy3Im2kgaWFzxIMgdnJvIGRpaGFuaWUgY2V2YSDDrm5haW50ZSDImWkgc8SDLcibaSBzY3VydGV6ZSBjxINyxINyaWxlLgpFdSBjdW5vc2MgYmluZSBwZS1haWNpLCDImWkgcG9hdGUgbWFpIMOubmNvbG8gc8SDIGFpIG5ldm9pZSBkZSB1bnVsCmNhIG1pbmUuCgrigJQgUG9hdGUgc8SDIGFtLCBwb2F0ZSBzxIMgbi1hbSwgemlzZSBmaXVsIGNyYWl1bHVpLCB1aXTDom5kdS1zZQrIm2ludMSDIMOubiBvY2hpaSBTcMOibnVsdWksIGRhciBhY3VtIGRlb2RhdMSDIG3EgyBsYXMgw65uIHZvaWEKw65udMOibXBsxINyaWksIMiZaSBhcG9pLCBkw6JuZCBwaW50ZW5pIGNhbHVsdWksIHBvcm5lyJl0ZS4KCk1haSBtZXJnZSBlbCDDrm5haW50ZSBwcmluIGNvZHJ1IGPDonQgbWVyZ2UsIMiZaSwgbGEgbyBzdHLDom10b2FyZSwKbnVtYWkgaWFjYSBjZSBTcMOibnVsIGlhciDDrmkgaWVzZSDDrm5haW50ZSwgcHJlZsSDY3V0IMOubiBhbHRlCnN0cmFpZSwgyJlpIHppY2UgY3UgZ2xhcyBzdWLIm2lyYXRpYyDImWkgbmVjdW5vc2N1dDoKCuKAlCBCdW7EgyBjYWxlYSwgZHJ1bWXIm3VsZSEg4oCUIEJ1bsSDIHPEgy3Im2kgZmllIGluaW1hLCBjdW0gyJtpLWkKY8SDdXTEg3R1cmEsIHppc2UgZml1bCBjcmFpdWx1aS4g4oCUIEPDonQgZGVzcHJlIGluaW1hIG1lYSwgcy1vIGRlYQpEdW1uZXpldSBvcmljdWksIHppc2UgU3DDom51bCBvZnTDom5kLi4uIE51bWFpIGNlIGZvbG9zPyBPbXVsIGJ1bgpuLWFyZSBub3JvYzsgYXN0YS1pIMiZdGl1dMSDOyByb2d1LXRlLCBzxIMgbnUtyJtpIGZpZSBjdSBzdXDEg3JhcmUsCmRydW1lyJt1bGUsIGRhciBmaWluZGPEgyBhIHZlbml0IHZvcmJhIGRlLWHImWEsIMOuyJtpIHNwdW4sIGNhIGxhIHVuCmZyYXRlLCBjxIMgZGluIGNydWRhIGNvcGlsxINyaWUgc2x1amVzYyBwcmluIHN0csSDaW5pLCDImWkgw65uY2FsdGVhCm51IG1pLWFyIGZpIGNpdWTEgywgY8OibmQgbi1hyJkgdnJhIHPEgyBtxIMgZGF1IGxhIHRyZWFixIMsIGPEg2NpIGN1Cm11bmNhIG0tYW0gdHJleml0LiBEYXIgYciZYSwgbXVuY2VzYywgbXVuY2VzYywgyJlpIG51IHMtYWxlZ2UKbmltaWNhIGRlIG1pbmU7IHBlbnRydSBjxIMgdG90IGRlIHN0xINww6JuaSBjYWxpY2kgbWktYW0gYXZ1dApwYXJ0ZS4gyJhpIHZvcmJhIGNlZWE6IExhIGNhbGljIHNsdWplyJl0aSwgY2FsaWMgcsSDbcOiaS4gQ8OibmQgYciZIGRhCm9kYXTEgyBwZXN0ZSB1biBzdMSDcMOibiBjdW0gZ8OibmRlc2MgZXUsIG4tYciZIMiZdGkgY2Ugc8SDIGZhYyBzxIMgbnUtbApzbWludGVzYy4gTnUgY3VtdmEgYWkgdHJlYnVpbsibxIMgZGUgc2x1Z8SDLCB2b2luaWNlPyBDdW0gdGUgdsSDZCwKc2FtZW5pIGEgYXZlYSBzZXUgbGEgcsSDcnVuY2hpLiBEZSBjZSB0ZSBzY3VtcGXImXRpIHBlbnRydSBuaW1pY2EKdG9hdMSDIMiZaSBudS3Im2kgaWVpIG8gc2x1Z8SDIHZyZWRuaWPEgywgY2Egc8SDLcibaSBmaWUgbcOibsSDIGRlIGFqdXRvcgpsYSBkcnVtPyBMb2N1cmlsZSBhaWVzdGVhIHN1bnQgyJl1Z3ViZcibZTsgZGUgdW5kZSDImXRpaSBjdW0gdmluZQrDrm50w6JtcGxhcmVhLCDImWksIERvYW1uZSBmZXJlyJl0ZSwgc8SDIG51LcibaSBjYWTEgyBncmV1IHNpbmd1ci4KCuKAlCBBY3VtIGRlb2RhdMSDIMOubmPEgyB0b3QgbnUsIHppc2UgZml1bCBjcmFpdWx1aSBjdSBtw6JuYSBwZQpidXpkdWdhbjsgbS1vaSBtYWkgc2x1amkgyJlpIGV1IHNpbmd1ciwgY3VtIG9pIHB1dGVhLCDImWkgZMOibmQgaWFyCnBpbnRlbmkgY2FsdWx1aSwgcG9ybmXImXRlIG1haSByZXBlZGUuCgrImGkgbWVyZ8OibmQgZWwgdG90IMOubmFpbnRlIHByaW4gY29kcmkgw65udHVuZWNvyJlpLCBkZSBsYSB1biBsb2Mgc2UKw65uY2hpZGUgY2FsZWEgyJlpIMOubmNlcCBhIGkgc2Ugw65uY3VyY2EgY8SDcsSDcmlsZSwgw65uY8OidCBudSBzZSBtYWkKcHJpY2VwZSBmaXVsIGNyYWl1bHVpIGFjdW0gw65uY290cm8gc8SDIGFwdWNlIMiZaSBwZSB1bmRlIHPEgyBtZWFyZ8SDLgoK4oCUIFB0aXUsIGRyYWNlISBpYWNhIMOubiBjZSDDrm5jdXJjxIN0dXLEgyBhbSBpbnRyYXQhIEFzdGEtaSBtYWkgcsSDdQpkZWPDonQgcG9mdGltIGxhIG1hc8SDLCB6aXNlIGVsLiBOaWNpIHR1IHNhdCwgbmljaSB0dSB0w6JyZywgbmljaQp0dSBuaW1pY2EuIERlIGNlIG1lcmdpIMOubmFpbnRlLCBudW1haSBwZXN0ZSBwdXN0aWV0xIPIm2kgZGFpOwpwYXJjxIMgYSBwaWVyaXQgc8SDbcOibsibYSBvbWVuZWFzY8SDIGRlIHBlIGZhyJthIHDEg23Dom50dWx1aS4gw45taSBwYXJlCnLEg3UgY8SDIG4tYW0gbHVhdCBtxINjYXIgc3DDom51bCBjZWwgZGUtYWwgZG9pbGVhIGN1IG1pbmUuIERhY8SDIHMtYQphcnVuY2F0IMOubiBwYXJ0ZWEgbcOibmUtc2EsIGNlLWkgdmlub3ZhdCBlbD8gVGF0YSBhyJlhIGEgemlzLCDDrm5zxIMKbGEgbWFyZSBuZXZvaWUgY2UtaSBkZSBmxINjdXQ/IHZvcmJhIGNlZWE6IFLEg3UtaSBjdSByxIN1LCBkYXIgZQptYWkgcsSDdSBmxINyJyBkZSByxIN1LiDImGkgdG90IGhvcmjEg2luZCBlbCBjw6JuZCBwZSBvIGPEg3JhcmUsIGPDom5kCnBlIHVuIGRydW0gcMSDcsSDc2l0LCBudW1haSBpYWNhIGNlIGlhciDDrmkgaWVzZSBTcMOibnVsIMOubmFpbnRlLArDrm1icsSDY2F0IGFsdGZlbCDImWkgY8SDbGFyZSBwZSB1biBjYWwgZnJ1bW9zLCDImWksIHByZWbEg2PDom5kdS3ImWkKZ2xhc3VsLCDDrm5jZXBlIGEgY8SDaW5hIHBlIGZpdWwgY3JhaXVsdWksIHppY8OibmQ6CgrigJQgU8SDcm1hbmUgb211bGUsIHLEg3UgZHJ1bSBhaSBhcHVjYXQhIFNlIHZlZGUgY8SDIGXImXRpIHN0csSDaW4gyJlpCm51IGN1bm/ImXRpIGxvY3VyaWxlIHBlIGFpY2kuIEFpIGF2dXQgbWFyZSBub3JvYyBkZSBtaW5lLCBkZSBuLWFpCmFwdWNhdCBhIGNvYm9yw64gcHJpcG9ydWwgaXN0YSwgY8SDIGVyYWkgcHLEg3DEg2RpdC4gSWEsIGNvbG8KZGV2YWxlLCDDrm4gw65uZnVuZMSDdHVyYSBjZWVhLCB1biB0YXVyIGdyb3phdiBsYSBtdWzIm2kgYmV6bWV0aWNpCmxlLWEgY3VybWF0IHppbGVsZS4gyJhpIGV1LCBtYWkgZGV1bsSDemksIGPDonQgbcSDIHZlemkgZGUgdm9pbmljLApkZS1hYmlhIGFtIHNjxINwYXQgZGUgZMOibnN1bCwgY2EgcHJpbiB1cmVjaGlsZSBhY3VsdWkuCsOObnRvYXJjZS10ZSDDrm5hcG9pLCBvcmksIGRhY8SDIGFpIGRlIGR1cyDDrm5haW50ZSwgaWEtyJtpIHVuIGFqdXRvcgpwZSBjaW5ldmEuIENoaWFyIMiZaSBldSBtLWHImSB0b2NtaSBsYSBkLXRhLCBkYWPEgyDIm2ktYSBmaSBjdQpwbMSDY2VyZS4KCuKAlCBByJlhIGFyIHRyZWJ1aSBzxIMgdXJtZXosIG9tIGJ1biwgemlzZSBmaXVsIGNyYWl1bHVpLCBkYXIgyJtpLW9pCnNwdW5lIGRyZXB0OiB0YXRhIG1pLWEgZGF0IMOubiBncmlqxIMsIGPDom5kIGFtIHBvcm5pdCBkZS1hY2FzxIMsIGNhCnPEgyBtxIMgZmVyZXNjIGRlIG9tdWwgcm/ImSwgaWFyxIMgbWFpIGFsZXMgZGUgY2VsIHNww6JuLCBjw6J0IG9pCnB1dGVhOyBzxIMgbi1hbSBkZSBhIGZhY2UgY3UgZMOibsiZaWkgbmljaSDDrm4gY2xpbiwgbmljaSDDrm4gbcOubmVjxIM7CsiZaSBkYWPEgyBuLWFpIGZpIHNww6JuLCBidWN1cm9zIHRlLWHImSB0b2NtaS4KCuKAlCBIZWksIGhlaSEgY8SDbMSDdG9ydWxlLiBEYWPEgyDIm2ktaSB2b3JiYSBkZS1hyJlhLCBhaSBzxIMtyJtpIHJ1cGkKY2lvY2hpbmVsZSB1bWJsw6JuZCDImWkgdG90IG4tYWkgc8SDIGfEg3NlyJl0aSBzbHVnxIMgY3VtIGNhdcibaSBkLXRhLApjxIMgcGUtYWljaSBzdW50IG51bWFpIG9hbWVuaSBzcMOibmkuIMiYLWFwb2ksIGPDom5kIGVzdGUgbGEKYWRpY8SDbGVhLCB0ZS1hyJkgw65udHJlYmE6IGNhJyBjZSBmZWwgZGUgesSDdGljbmVhbMSDIGFpIHB1dGVhIHPEgwrDrm50w6JtcGluaSBkaW4gcHJpY2luYSBhc3RhPyBQZXNlbW5lIG4tYWkgYXV6aXQgdm9yYmEgY2VlYTogY8SDIGRlCnDEg3IgyJlpIGRlIGNvYXRlLWdvYWxlIG51IHNlIHBsw6JuZ2UgbmltZW5lLiDImGkgY8OibmQgbnUgc3VudCBvY2hpCm5lZ3JpLCBzxINydcibaSDImWkgYWxiYciZdHJpISBByJlhIMiZaSBkLXRhOiBtdWzIm3VtZciZdGUgbHVpIER1bW5lemV1CmPEgyBtLWFpIGfEg3NpdCDImWkgdG9jbWXImXRlLW3Egy4gyJhpIGRhY8SDLWkgYXB1Y2Egb2RhdMSDIGEgdGUKZGVwcmluZGUgY3UgbWluZSwgyJl0aXUgYmluZSBjxIMgbi1hbSBzxIMgcG90IHNjxINwYSB1yJlvciBkZSBkLXRhLApjxINjaSBhyJlhIHN1bnQgZXUgw65uIGZlbHVsIG1ldSwgyJl0aXUgdW5hIMiZaSBidW7Egzogc8SDLW1pIHNsdWplc2MKc3TEg3DDom51bCBjdSBkcmVwdGF0ZS4gSGFpLCBudSBtYWkgc3RhIGxhIMOubmRvaWFsxIMsIGPEgyBtxIMgdGVtIHPEgwpudSBuZS1hcHVjZSBub2FwdGVhIHBlIGFpY2kuIMiYaSBjw6JuZCBhaSBhdmVhIMOubmNhbHRlYSB1biBjYWwKYnVuLCBjYWxlYS12YWxlYSwgZGFyIGN1IHNtw6JyyJtvZ3VsIGlzdGEgw67Im2kgZHVjIHZlcmdpbGUuCgrigJQgQXBvaSBkxIMsIFNww6JudWxlLCBudSDImXRpdSBjdW0gc8SDIGZhYywgemlzZSBmaXVsIGNyYWl1bHVpLiBEaW4KY29waWzEg3JpYSBtZWEgc3VudCBkZXByaW5zIGEgYXNjdWx0YSBkZSB0YXTEgyDImWksIHRvY21pbmR1LXRlIHBlCnRpbmUsIHBhcmPEgy1taSB2aW5lIG51IMiZdGl1IGN1bS4gRGFyLCBmaWluZGPEgyBtaS1hdSBtYWkgaWXImWl0CnDDom7EgyBhY3VtIMOubmFpbnRlIMOubmPEgyBkb2kgc3DDom5pLCDImWkgY3UgdGluZSBhbCB0cmVpbGVhLCBhcG9pCm1haS1taSB2aW5lIGEgY3JlZGUgY8SDIGFzdGEtaSDIm2FyYSBzcMOibmlsb3IgyJlpIG4tYW0gw65uY290cm87Cm1vcnQtY29wdCwgdHJlYnVpZSBzxIMgdGUgaWF1IGN1IG1pbmUsIGRhY8SDIHppY2kgY8SDIMiZdGlpIGJpbmUKbG9jdXJpbGUgcGUgYWljaS4KCsiYaSwgZGluIGRvdcSDIHZvcmJlLCBmaXVsIGNyYWl1bHVpIMOubCB0b2NtZciZdGUgyJlpIGR1cMSDIGFjZWVhCnBvcm5lc2Mgw65tcHJldW7EgyBzxIMgaWFzxIMgbGEgZHJ1bSwgcGUgdW5kZSBhcmF0xIMgU3DDom51bC4gyJhpCm1lcmfDom5kIGVpIG8gYnVjYXTEgyBidW7EgywgU3DDom51bCBzZSBwcmVmYWNlIGPEgy1pIGUgc2V0ZSDImWkgY2VyZQpwbG9zY2EgY3UgYXDEgyBkZSBsYSBzdMSDcMOibnUtc8SDdS4gRml1bCBjcmFpdWx1aSBpLW8gZMSDLCDImWkKU3DDom51bCwgY3VtIG8gcHVuZSBsYSBndXLEgywgcGUgbG9jIG8gyJlpIGlhLCBvyJvEg3LDom5kdS1zZSwgyJlpCnZhcnPEgyB0b2F0xIMgYXBhIGRpbnRyLcOubnNhLiBGaXVsIGNyYWl1bHVpIHppY2UgYXR1bmNpIHN1cMSDcmF0OgoK4oCUIERhciBiaW5lLCBTcMOibnVsZSwgZGUgY2UgdGUgYXB1Y2k/IE51IHZlemkgY8SDIHBlIGFpY2kgZSBtYXJlCmxpcHPEgyBkZSBhcMSDPyDImGkgcGUgYXLImWnIm2EgYXN0YSBvIHPEgyBuZSB1c2PEg20gZGUgc2V0ZS4KCuKAlCBTxIMgYXZlbSBpZXJ0YXJlLCBzdMSDcMOibmUhIEFwYSBlcmEgYsOiaGxpdMSDIMiZaSBuZS1hbSBmaSBwdXR1dApib2xuxIN2aS4gQ8OidCBkZXNwcmUgYXBhIGJ1bsSDLCBudSB2xIMgw65uZ3JpamnIm2k7IGFjdciZIGF2ZW0gc8SDIGTEg20KcGVzdGUgbyBmw6JudMOibsSDIGN1IGFwxIMgZHVsY2UgyJlpIHJlY2UgY2EgZ2hlYcibYS4gQWNvbG8gdm9tIHBvcG9zaQpwdcibaW4sIG9pIGNsxIN0xINyaSBwbG9zY2EgYmluZSDImS1vaSB1bXBsZS1vIGN1IGFwxIMgcHJvYXNwxIN0xIMsIGNhCnPEgyBhdmVtIGxhIGRydW0sIGPEg2NpIG1haSDDrm5jb2xvIG51IHByZWEgc3VudCBmw6JudMOibmksIMiZaSwgZGluCnBhcnRlYSBhcGVpLCBtaSBzZSBwYXJlIGPEgyBpLW9tIGR1Y2UgZG9ydWwuIMiYaSBjw6JybmluZCBwZSBvCmPEg3JhcmUsIG1haSBtZXJnIGVpIG9sZWFjxIMgw65uYWludGUsIHDDom7EgyBjZSBhanVuZyDDrm50ci1vIHBvaWFuxIMKyJlpIG51bWFpIGlhY2EgY2UgZGF1IGRlIG8gZsOibnTDom7EgyBjdSBnaGl6ZGVsZSBkZSBzdGVqYXIgyJlpIGN1IHVuCmNhcGFjIGRlc2NoaXMgw65uIGzEg3R1cmkuIEbDom50w6JuYSBlcmEgYWTDom5jxIMgyJlpIG51IGF2ZWEgbmljaQpyb2F0xIMsIG5pY2kgY3VtcMOibsSDLCBjaSBudW1haSBvIHNjYXLEgyBkZSBjb2JvcsOidCBww6JuxIMgbGEgYXDEgy4KCuKAlCBFaSwgZWkhIFNww6JudWxlLCBhY3VtIHPEgyB0ZSB2xINkIGPDonQgZciZdGkgZGUgdnJlZG5pYywgemlzZSBmaXVsCmNyYWl1bHVpLiBTcMOibnVsIGF0dW5jaSB6w6JtYmXImXRlIHB1yJtpbiDImWksIGNvYm9yw6JuZHUtc2Ugw65uCmbDom50w6JuxIMsIHVtcGxlIMOubnTDomkgcGxvc2NhIMiZaSBvIHB1bmUgbGEgyJlvbGQuIEFwb2ksIG1haSBzdMOibmQKYWNvbG8gw65uIGZ1bmQgcGUgc2NhcsSDLCBhcHJvYXBlIGRlIGZhyJthIGFwZWksIHppY2U6CgrigJQgRWksIGRhJyBjZSByxINjb2FyZS1pIGFpY2khICJDaGltYSByxIN1bHVpIHBlIG1hbHVsIHDDonLEg3VsdWkhIgrDjm1pIHZpbmUgc8SDIG51IG1haSBpZXMgYWZhcsSDLiBEdW1uZXpldSBzxIMgdciZdXJlemUgcMSDY2F0ZWxlIGNlbHVpCmN1IGbDom50w6JuYSwgY8SDIGJ1biBsdWNydSBhIG1haSBmxINjdXQuIFBlIGFyyJlpyJtlbGUgaWVzdGUsIG8KcsSDY29yZWFsxIMgY2EgYXN0YSBtdWx0IHBsxIN0ZciZdGUhCgpNYWkgyJllZGUgZWwgYWNvbG8gcHXIm2luIMiZaSBhcG9pIGllc2UgYWZhcsSDLCB6aWPDom5kOiDigJQgRG9hbW5lLApzdMSDcMOibmUsIG51IMiZdGlpIGPDonQgbcSDIHNpbcibZXNjIGRlIHXImW9yOyBwYXJjxIMgw65taSB2aW5lIHPEgyB6Ym9yLApudSBhbHTEg2NldmEhIElhIHbDonLEgy10ZSDImWkgZC10YSBvbGVhY8SDLCBzxIMgdmV6aSBjdW0gYWkgc8SDIHRlCnLEg2NvcmXImXRpOyBhyJlhIGFyZSBzxIMtyJtpIHZpbsSDIGRlIMOubmRlbcOibsSDIGR1cMSDIGFzdGEsIGRlIGFyZSBzxIMKyJtpIHNlIHBhcsSDIGPEgyBlyJl0aSB1yJlvciBjdW0gw65pIHBhbmEuLi4KCkZpdWwgY3JhaXVsdWksIGJvYm9jIMOubiBmZWx1bCBzxIN1IGxhIHRyZWJpIGRlIGFpZXN0ZSwgc2UKcG90cml2ZciZdGUgU3DDom51bHVpIMiZaSBzZSBiYWfEgyDDrm4gZsOibnTDom7EgywgZsSDcsSDIHPEgy1pIHRyxINzbmVhc2PEgwpwcmluIG1pbnRlIGNlIGkgc2UgcG9hdGUgw65udMOibXBsYS4gyJhpIGN1bSBzdGEgyJlpIGVsIGFjb2xvIGRlIHNlCnLEg2NvcmVhLCBTcMOibnVsIGZhY2UgdHJhbmMhIGNhcGFjdWwgcGUgZ3VyYSBmw6JudMOibmlpLCBhcG9pIHNlCnN1aWUgZGVhc3VwcmEgbHVpIMiZaSB6aWNlIGN1IGdsYXMgcsSDdXTEg2Npb3M6CgrigJQgQWxlbGVpISBmZWNpb3IgZGUgb20gdmljbGVhbiBjZSB0ZSBnxINzZciZdGk7IHRvY21haSBkZSBjZWVhIGNlCnRlLWFpIHDEg3ppdCBuLWFpIHNjxINwYXQuIEVpLCBjxIMgYmluZSBtaSB0ZS1hbSBjxINwdHXImWl0ISBBY3VtCnPEgy1taSBzcHVpIHR1IGNpbmUgZciZdGksIGRlIHVuZGUgdmlpIMiZaSDDrm5jb3RybyB0ZSBkdWNpLCBjxIMsIGRlCm51LCBhY29sbyDDrsibaSBwdXRyZXplc2MgY2lvbGFuZWxlIQoKRml1bCBjcmFpdWx1aSBjZSBlcmEgc8SDIGZhY8SDPyDDjmkgc3B1bmUgY3UgZGUtYW3Eg251bnR1bCwgY8SDY2ksCmTEgywgY2FyZSBvbSBudSDIm2luZSBsYSB2aWHIm8SDIMOubmFpbnRlIGRlIHRvYXRlPwoK4oCUIEJpbmUsIGF0w6J0YSBhbSB2cnV0IHPEgyBhZmx1IGRpbiBndXJhIHRhLCBwdWkgZGUgdmlwZXLEgyBjZQptaS1haSBmb3N0LCB6aWNlIGF0dW5jaSBTcMOibnVsOiBudW1haSBjYXTEgyBzxIMgZmllIGHImWEsIGPEgywgZGUKdGUtb2kgcHJpbmRlIGN1IG9jYSBtaWPEgywgZ3JldSBhcmUgc8SDLcibaSBjYWTEgy4gQ2hpYXIgYWN1bSBhyJkKcHV0ZWEgc8SDIHRlIG9tb3IsIMOubiB2b2lhIGNlYSBidW7EgywgZGFyIG1pLWkgbWlsxIMgZGUgdGluZXJlyJtpbGUKdGFsZS4uLiBEYWPEgyB2cmVpIHPEgyBtYWkgdmV6aSBzb2FyZWxlIGN1IG9jaGlpIMiZaSBzxIMgbWFpIGNhbGNpCnBlIGlhcmLEgyB2ZXJkZSwgYXR1bmNpIGp1csSDLW1pLXRlIHBlIGFzY3XIm2nImXVsIHBhbG/ImXVsdWkgdMSDdSBjxIMKbWktaSBkYSBhc2N1bHRhcmUgyJlpIHN1cHVuZXJlIMOubnRydSB0b2F0ZSwgY2hpYXIgyJlpLW4gZm9jIGRlCsibaS1hyJkgemljZSBzxIMgdGUgYXJ1bmNpLiDImGksIGRlIGF6aSDDrm5haW50ZSwgZXUgbyBzxIMgZml1IMOubgpsb2N1bCB0xIN1IG5lcG90dWwgw65tcMSDcmF0dWx1aSwgZGVzcHJlIGNhcmUgbWktYWkgdm9yYml0LCBpYXLEgyB0dQrigJQgc2x1Z2EgbWVhOyDImWkgYXTDonRhIHZyZW1lIHPEgyBhaSBhIG3EgyBzbHVqaSwgcMOibsSDIGPDom5kIMOuaSBtdXJpCsiZaSBpYXIgw65pIMOubnZpYS4gyJhpIG9yaXVuZGUgdmVpIG1lcmdlIGN1IG1pbmUsIG51IGNhcmUgY3VtdmEgc8SDCmJsZciZdGXImXRpIGRpbiBndXLEgyBjxIN0cmUgY2luZXZhIGRlc3ByZSBjZWVhIGNlIGEgdXJtYXQgw65udHJlCm5vaSwgY8SDIHRlLWFtIMiZdGVycyBkZSBwZSBmYcibYSBwxINtw6JudHVsdWkuIMOOyJtpIHBsYWNlIGHImWEgc8SDIG1haQp0csSDaWXImXRpLCBiaW5lLWRlLWJpbmU7IGlhcsSDIGRlIG51LCBzcHVuZS1taSB2ZXJkZSDDrm4gb2NoaSwgY2EKc8SDIMiZdGl1IGNlIGxlYWMgdHJlYnVpZSBzxIMtyJtpIGZhYy4uLgoKRml1bCBjcmFpdWx1aSwgdsSDesOibmR1LXNlIHByaW5zIMOubiBjbGXImXRlIMiZaSBmxINyxIMgbmljaSBvIHB1dGVyZSwKw65pIGp1csSDIGNyZWRpbsibxIMgyJlpIHN1cHVuZXJlIMOubnRydSB0b2F0ZSwgbMSDc8OibmR1LXNlIMOubiDImXRpcmVhCmx1aSBEdW1uZXpldSwgY3VtIGEgdnJlYSBlbCBzxIMgZmFjxIMuIEF0dW5jaSBTcMOibnVsIHB1bmUgbcOibmEgcGUKY2FydGVhLCBwZSBiYW5paSDImWkgcGUgYXJtZWxlIGZpdWx1aSBkZSBjcmFpIMiZaSBsZSBpYSBsYSBzaW5lOwphcG9pIMOubCBzY29hdGUgZGluIGbDom50w6JuxIMgyJlpLWkgZMSDIHBhbG/ImXVsIHPEgy1sIHPEg3J1dGUsIGNhIHNlbW4KZGUgcGVjZXRsdWlyZSBhIGp1csSDbcOibnR1bHVpLCB6aWPDom5kOgoK4oCUIERlLWFjdW0gw65uYWludGUgc8SDIMiZdGlpIGPEgyB0ZSBjaGVhbcSDIEhhcmFwLUFsYjsgYWlzdGEgyJtpLWkKbnVtZWxlLCDImWkgYWx0dWwgbnUuCgpEdXDEgyBhY2Vhc3RhIMOubmNhbGVjxIMsIGZpZWNhcmUgcGUgY2FsdWwgc8SDdSwgyJlpIHBvcm5lc2MsIFNww6JudWwKw65uYWludGUsIGNhIHN0xINww6JuLCBIYXJhcC1BbGIgw65uIHVybcSDLCBjYSBzbHVnxIMsIG1lcmfDom5kIHNwcmUKw65tcMSDcsSDyJtpZSwgRHVtbmV6ZXUgc8SDIG5lIMibaWUsIGPEgyBjdXbDom50dWwgZGluIHBvdmVzdGUsIMOubmFpbnRlCm11bHQgbWFpIGVzdGUuCgrImGkgbWVyZyBlaSwgyJlpIG1lcmcsIGNhbGUgbHVuZ8SDIHPEgyBsZS1hanVuZ8SDLCB0cmVjw6JuZCBwZXN0ZSBub3XEgwptxINyaSwgcGVzdGUgbm91xIMgyJvEg3JpIMiZaSBwZXN0ZSBub3XEgyBhcGUgbWFyaSwgyJlpIMOubnRyLW8gdMOicnppZQp2cmVtZSBhanVuZyBsYSDDrm1wxINyxIPIm2llLgoKyJhpIGN1bSBhanVuZywgU3DDom51bCBzZSDDrm5mxIPIm2nImWF6xIMgw65uYWludGVhIMOubXDEg3JhdHVsdWkgY3UgY2FydGUKZGluIHBhcnRlYSBjcmFpdWx1aS4gyJhpIMOubXDEg3JhdHVsIFZlcmRlLCBjaXRpbmQgY2FydGVhLCBhcmRlIGRlCmJ1Y3VyaWUgY8SDIGktYSB2ZW5pdCBuZXBvdHVsLCDImWkgcGUgZGF0xIMgw65sIMiZaSBmYWNlIGN1bm9zY3V0CmN1csibaWkgyJlpIGZldGVsb3Igc2FsZSwgY2FyZSDDrmwgcHJpbWVzYyBjdSB0b2F0xIMgY2luc3RlYQpjdXZlbml0xIMgdW51aSBmaXUgZGUgY3JhaSDImWkgbW/ImXRlbml0b3IgYWwgw65tcMSDcmF0dWx1aS4KCkF0dW5jaSBTcMOibnVsLCB2xIN6w6JuZCBjxIMgaSBzLWF1IHByaW5zIG1pbmNpdW5pbGUgZGUgYmluZSwgY2hlYW3EgwpsYSBzaW5lIHBlIEhhcmFwLUFsYiDImWktaSB6aWNlIGN1IGFzcHJpbWU6CgrigJQgVHUgc8SDIMiZZXppIGxhIGdyYWpkIG5lZGV6bGlwaXQgyJlpIHPEgyDDrm5ncmlqZciZdGkgZGUgY2FsdWwgbWV1CmNhIGRlIG9jaGlpIGRpbiBjYXAsIGPEgyBkZS1vaSB2ZW5pIHBlLWFjb2xvIMiZaSBuLW9pIGfEg3NpIHRyZWJpbGUKZsSDY3V0ZSBkdXDEgyBwbGFjLCB2YWkgZGUgcGllbGVhIHRhIGFyZSBzxIMgZmllLiBEYXIgcMOibsSDIGF0dW5jaSwKbmEtyJtpIG8gcGFsbcSDLCBjYSBzxIMgyJtpaSBtaW50ZSBjZSDIm2ktYW0gc3B1cy4gQmFnYXQtYWkgw65uIGNhcAp2b3JiZWxlIG1lbGU/CgrigJQgRGEsIHN0xINww6JuZSwgemlzZSBIYXJhcC1BbGIsIGzEg3PDom5kIG9jaGlpIMOubiBqb3MuIMiYaSwgaWXImWluZCwKcG9ybmXImXRlIGxhIGdyYWpkLiBDdSBhc3RhIGEgdm9pdCBTcMOibnVsIHPEgy3ImWkgYXJhdGUgYXJhbWEgyJlpIHPEgwpmYWPEgyBwZSBIYXJhcEFsYiBjYSBzxIMtaSBpYSDImWkgbWFpIG11bHQgZnJpY2EuCgpGZXRlbGUgw65tcMSDcmF0dWx1aSDDrm50w6JtcGzDom5kdS1zZSBkZSBmYcibxIMgY8OibmQgYSBsb3ZpdCBTcMOibnVsIHBlCkhhcmFwLUFsYiwgbGkgcy1hIGbEg2N1dCBtaWzEgyBkZSBkw6Juc3VsIMiZaSBhdSB6aXMgU3DDom51bHVpIGN1CmJpbmnImW9ydWw6CgrigJQgVmVyZSwgbnUgZmFjaSBiaW5lIGNlZWEgY2UgZmFjaS4gRGFjxIMgZXN0ZSBjxIMgYSBsxINzYXQgRHVtbmV6ZXUKc8SDIGZpbSBtYXJpIHBlc3RlIGFsyJtpaSwgYXIgdHJlYnVpIHPEgyBhdmVtIG1pbMSDIGRlIGTDom7ImWlpLCBjxIMgyJlpCmVpLCBzxINybWFuaWksIHN1bnQgb2FtZW5pIQoK4oCUIEhlaSwgZHJhZ2VsZSBtZWxlIHZlcmUsIHppY2UgU3DDom51bCBjdSB2aWNsZW5pYSBsdWkKb2JpY2ludWl0xIM7IGQtdm9hc3RyxIMgw65uY8SDIG51IMiZdGnIm2kgY2UtaSBwZSBsdW1lLiBEYWPEgwpkb2JpdG9hY2VsZSBuLWFyIGZpIGZvc3Qgw65uZnLDom5hdGUsIGRlIGRlbXVsdCBhciBmaSBzZsOiyJlpYXQgcGUKb20uIMiYaSB0cmVidWllIHPEgyDImXRpyJtpIGPEgyDImWkgw65udHJlIG9hbWVuaSBjZWEgbWFpIG1hcmUgcGFydGUKc3VudCBkb2JpdG9hY2UsIGNhcmUgdHJlYnVpZXNjIMibaW51yJtpIGRpbiBmcsOidSwgZGFjxIMgyJtpLWkgdm9pYQpzxIMgZmFjaSB0cmVhYsSDIGN1IGTDom7ImWlpLgoKRWksIGFwb2kuLi4gemkgY8SDIG51LWkgbHVtZWEgZGUtYXBvaSEgU8SDIHRlIGZlcmVhc2PEgyBEdW1uZXpldQpjw6JuZCBwcmluZGUgbcSDbcSDbGlnYSBjb2FqxIMuIFZvcmJhIGNlZWE6CgpExIMtbWksIERvYW1uZSwgY2Ugbi1hbSBhdnV0LApTxIMgbcSDIG1pZXIgY2UgbS1hIGfEg3NpdC4KRmV0ZWxlIGF0dW5jaSBhdSBsdWF0IGFsdMSDIHZvcmLEgywgZGFyIGRpbiBpbmltYSBsb3IgbnUgcy1hIMiZdGVycwpwdXJ0YXJlYSBuZWN1dmlpbmNpb2FzxIMgYSBTcMOibnVsdWksIGN1IHRvYXRlIMOubmRyZXB0xINyaWxlIMiZaQrDrm5ydWRpcmVhIGx1aSwgcGVudHJ1IGPEgyBidW7Eg3RhdGVhIG51IGFyZSBkZS1hIGZhY2UgY3UgcsSDdXRhdGVhLgpWb3JiYSBjZWVhOgoKVmnIm2EtZGUtdmllLCB0b3Qgw65uIHZpZSwKSWFyxIMgdmnIm2EtZGUtYm96LCB0b3QgcsSDZ296LgrImGkgZGluIGNlYXN1bCBhY2VsYSBhdSDDrm5jZXB1dCBhIHZvcmJpIGVsZSDDrm5kZSBlbGUsIGPEgyBTcMOibnVsCmRlZmVsIG51IHNhbcSDbsSDIMOubiBwYXJ0ZWEgbG9yLCBuaWNpIGxhIGNoaXAsIG5pY2kgbGEgYnVuxIN0YXRlOwrImWkgY8SDIEhhcmFwLUFsYiwgc2x1Z2EgbHVpLCBhcmUgbyDDrm5mxIPIm2nImWFyZSBtdWx0IG1haSBwbMSDY3V0xIMgyJlpCnNlYW3Eg27EgyBhIGZpIG11bHQgbWFpIG9tZW5vcy4gUGVzZW1uZSBpbmltYSBsZSBzcHVuZWEgY8SDIFNww6JudWwKbnUgbGUgZXN0ZSB2xINyLCDImWkgZGUgYWNlZWEgbnUtbCBwdXRlYXUgbWlzdHVpLiBByJlhIMOubCB1csOic2UgZWxlCmRlIHRhcmUgYWN1bSwgY8SDLCBkYWPEgyBhciBmaSBmb3N0IMOubiBiYW5paSBsb3IsIHMtYXIgZmkgbGVwxINkYXQKZGUgU3DDom4gY2EgZGUgVWNpZ8SDLWwtY3J1Y2VhLiBEYXIgbnUgYXZlYXUgY2Ugc2UgZmFjZSBkZQrDrm1wxINyYXR1bCwgY2Egc8SDIG51LWkgYWR1Y8SDIHN1cMSDcmFyZS4KCkFtdSwgw65udHItdW5hIGRpbiB6aWxlLCBjdW0gyJllZGVhIFNww6JudWwgbGEgb3NwxIPImyDDrm1wcmV1bsSDIGN1Cm1vyJl1LXPEg3UsIGN1IHZlcmVsZSBzYWxlIMiZaSBjdSBhbMibaWksIGPDosibaSBzZSDDrm50w6JtcGxhc2UsIGxpCnMtYXUgYWR1cyBtYWkgbGEgdXJtxIMgw65uIG1hc8SDIMiZaSBuaciZdGUgc8SDbMSDyJtpIGZvYXJ0ZSBtaW51bmF0ZS4KQXR1bmNpIMOubXDEg3JhdHVsIHppY2UgU3DDom51bHVpIDoKCuKAlCBOZXBvYXRlLCBtYWkgbcOibmNhdC1haSBzxINsxIPIm2kgZGUgYWNlc3RlIGRlIGPDom5kIGXImXRpPyDigJQgQmEgbnUsCm1vyJl1bGUsIHppY2UgU3DDom51bDsgdG9jbWFpIGVyYW0gc8SDIHbEgyDDrm50cmViIGRlIHVuZGUgbGUgYXZlyJtpLApjxIMgdGFyZS1zIGJ1bmUhLi4uIE8gaGFyYWJhIMOubnRyZWFnxIMgYciZIGZpIMOubiBzdGFyZSBzxIMgbcSDbsOibmMsCsiZaSBwYXJjxIMgdG90IG51IG0tYciZIHPEg3R1cmEuCgrigJQgVGUgY3JlZGUgbW/ImXVsLCBuZXBvYXRlLCBkYXIgY8OibmQgYWkgyJl0aSBjdSBjZSBncmV1dGF0ZSBzZQpjYXDEg3TEgyEgcGVudHJ1IGPEgyBudW1haSDDrm4gR3LEg2RpbmEgVXJzdWx1aSwgZGFjxIMtaSBmaSBhdXppdCBkZQpkw6Juc2EsIHNlIGFmbMSDIHPEg2zEg8ibaSBkZSBhY2VzdGUsIMiZaSBtYWkgcmFyIG9tIGNhcmUgc8SDIHBvYXTEgyBsdWEKZGludHItw65uc2VsZSDImWkgc8SDIHNjYXBlIGN1IHZpYcibxIMuIMOObnRyZSB0b8ibaSBvYW1lbmlpIGRpbgrDrm1wxINyxIPIm2lhIG1lYSwgbnVtYWkgdW4gcMSDZHVyYXIgc2UgYml6dWllyJl0ZSBsYSB0cmVhYmEgYXN0YS4gyJhpCmFjZWxhLCBlbCDImXRpZSBjZSBmYWNlLCBjZSBkcmVnZSwgZGUtbWkgYWR1Y2UgZGluIGPDom5kIMOubiBjw6JuZAphyJlhLCBjw6J0ZSBwdcibaW5lLCBkZSBwb2Z0xIMuCgpTcMOibnVsLCB2b2luZCBzxIMgcGlhcmTEgyBhY3VtIHBlIEhhcmFwLUFsYiBjdSBvcmljZSBwcmXImywgemlzZQrDrm1wxINyYXR1bHVpOgoK4oCUIERvYW1uZSwgbW/ImXVsZSwgZGUgbnUgbWktYSBhZHVjZSBzbHVnYSBtZWEgc8SDbMSDyJtpIGRlIGFjZXN0ZSDImWkKZGluIHBpYXRyYSBzZWFjxIMsIG1hcmUgbHVjcnUgc8SDIGZpZSEKCuKAlCBDZSB2b3JiZciZdGksIG5lcG9hdGUhIHppc2Ugw65tcMSDcmF0dWw7IHVudWwgY2EgZMOibnN1bCwgyJlpIMOubmPEgwpuZWN1bm9zY8SDdG9yIGRlIGxvY3VyaWxlIGFjZXN0ZWEsIGN1bSBjcmV6aSBjxIMgYXIgcHV0ZWEgZmFjZQphY2Vhc3TEgyBzbHVqYsSDPyBEb2FyIGRlIMibaS1pIGdyZXUgZGUgdmlhyJthIGx1aS4KCuKAlCBJYSBsYXMnLCBtb8iZdWxlLCBudS1pIGR1Y2UgZ3JpamE7IHB1biByxINtxIPImWFnIGPEgyBhcmUgc8SDLW1pCmFkdWPEgyBzxINsxIPIm2kgw65udG9jbWFpIGNhIGFjZXN0ZSwgyJlpIMOubmPEgyBtdWx0ZSwgY8SDIMiZdGl1IGV1IGNlCnBvYXRlIGVsLgoKyJgtb2RhdMSDIGNoZWFtxIMgU3DDom51bCBwZSBIYXJhcC1BbGIgyJlpLWkgemljZSByxINzdGl0OiDigJQgQWN1bQpkZWdyYWLEgyBzxIMgdGUgZHVjaSBjdW0gw65pIMiZdGkgdHUgyJlpIHPEgy1taSBhZHVjaSBzxINsxIPIm2kgZGUgYWNlc3RlCmRpbiBHcsSDZGluYSBVcnN1bHVpLiBIYWksIGllyJlpIHJlcGVkZSDImWkgcG9ybmXImXRlLCBjxIMgbnUtaSB2cmVtZQpkZSBwaWVyZHV0LiBEYXIgbnUgY3VtdmEgc8SDIGZhY2kgZGUgYWx0ZmVsLCBjxIMgbmljaSDDrm4gYm9ydGEKyJlvYXJlY3VsdWkgbnUgZciZdGkgc2PEg3BhdCBkZSBtaW5lIQoKSGFyYXAtQWxiIGllc2UgbcOiaG5pdCwgc2UgZHVjZSDDrm4gZ3JhamQgyJlpIMOubmNlcGUgYS3ImWkgbmV0ZXppCmNhbHVsIHBlIGNvYW3Egywgemljw6JuZDoKCuKAlCBFaSwgY8SDbHXIm3VsIG1ldSwgY8OibmQgYWkgyJl0aSB0dSDDrm4gY2UgbmVjYXogYW0gaW50cmF0ISBTZsOibnQKc8SDIGZpZSByb3N0dWwgdMSDdMOibmUtbWV1LCBjxIMgYmluZSBtLWEgw65udsSDyJthdCEgQciZYS1pIGPEgywgZGFjxIMKbi1hbSDIm2ludXQgc2VhbcSDIGRlIHZvcmJlbGUgbHVpLCBhbSBhanVucyBzbHVnxIMgbGEgZMOicmxvYWfEgyDImWkKYWN1bSwgdnLDom5kLW5ldnLDom5kLCB0cmVidWllIHMtYXNjdWx0LCBjxIMgbWktaSBjYXB1bCDDrm4KcHJpbWVqZGllPwoK4oCUIFN0xINww6JuZSwgemlzZSBhdHVuY2kgY2FsdWw7IGRlLWFjdW0gw65uYWludGUsIG9yaSBjdSBjYXB1bCBkZQpwaWF0csSDLCBvcmkgY3UgcGlhdHJhIGRlIGNhcCwgdG90IGF0w6J0YS1pOiBmaWkgb2RhdMSDIGLEg3JiYXQgyJlpCm51LcibaSBmYWNlIHZvaWUgcmVhLiDDjm5jYWxlY8SDIHBlIG1pbmUgyJlpIGhhaSEgyJh0aXUgZXUgdW5kZSB0ZS1vaQpkdWNlLCDImWkgbWFyZS1pIER1bW5lemV1LCBuZS1hIHNjxINwYSBlbCDImWkgZGluIGFjZWFzdGEhCgpIYXJhcC1BbGIsIG1haSBwcmluesOibmQgb2xlYWPEgyBsYSBpbmltxIMsIMOubmNhbGVjxIMgyJlpIHNlIGxhc8SDIMOubgp2b2lhIGNhbHVsdWksIHVuZGUgdnJlYSBlbCBzxIMtbCBkdWPEgy4KCkF0dW5jaSBjYWx1bCBwb3JuZciZdGUgbGEgcGFzLCBww6JuxIMgY2UgaWVzZSBtYWkgw65uY29sbywgY2Egc8SDCm51LWkgdmFkxIMgbmltZW5lLiBBcG9pIMOuyJlpIGFyYXTEgyBwdXRlcmlsZSBzYWxlLCB6aWPDom5kOgoK4oCUIFN0xINww6JuZSwgyJtpbmUtdGUgYmluZSBwZSBtaW5lLCBjxIMgYW0gc8SDIHpib3IgbGluIGNhIHbDom50dWwsIHPEgwpjdXRyZWllcsSDbSBwxINtw6JudHVsLiBNYXJlLWkgRHVtbmV6ZXUgyJlpIG1lyJl0ZXJ1LWkgZHJhY3VsLgpIZWxiZXQhIHZvbSBwdXRlYSB2ZW5pIGRlIGhhYyDImWkgU3DDom51bHVpIGNlbHVpYSwgbnUtaSBlIHZyZW1lYQp0cmVjdXTEgy4KCsiYaSBvZGF0xIMgemJvYXLEgyBjYWx1bCBjdSBIYXJhcC1BbGIgcMOibsSDIGxhIG5vdXJpOyBhcG9pIG8gaWEgZGUtYQpjdXJtZXppyJl1bCBwxINtw6JudHVsdWk6IHBlIGRlYXN1cHJhIGNvZHJpbG9yLCBwZXN0ZSB2w6JyZnVsCm11bsibaWxvciwgcGVzdGUgYXBhIG3Eg3JpbG9yIMiZaSBkdXDEgyBhY2VlYSBzZSBsYXPEgyDDrm5jZXQtIMOubmNldArDrm50ci11biBvc3Ryb3YgbcOibmRydSBkaW4gbWlqbG9jdWwgdW5laSBtxINyaSwgbMOibmfEgyBvIGPEg3N1yJvEgwpzaW5ndXJhdGljxIMsIHBlIGNhcmUgZXJhIGNyZXNjdXQgbmnImXRlIG11yJljaGkgcGxldG9zIGRlIG8gcG9kaW7EgwpkZSBncm9zLCBtb2FsZSBjYSBtxIN0YXNhIMiZaSB2ZXJkZSBjYSBidXJhdGljdWwuCgpBdHVuY2kgSGFyYXAtQWxiIGRlc2NhbGVjxIMsIMiZaSBzcHJlIG1haSBtYXJlIG1pcmFyZWEgbHVpLCBudW1haQppYWNhIMOubCDDrm50w6JtcGluxIMgw65uIHByYWd1bCB1yJlpaSBjZXLImWV0b2FyZWEgY8SDcmVpYSDDrmkgZMSDZHVzZSBlbAp1biBiYW4gZGUgcG9tYW7Egywgw65uYWludGUgZGUgcG9ybmlyZWEgbHVpIGRlIGFjYXPEgy4KCuKAlCBFaSwgSGFyYXAtQWxiLCBhyJlhLWkgY8SDIGFpIHZlbml0IGxhIHZvcmJlbGUgbWVsZSwgY8SDIGRlYWwgY3UKZGVhbCBzZSBhanVuZ2UsIGRhciDDrm5jxIMgb20gY3Ugb20/IEFmbMSDIGFjdW0gY8SDIGV1IHN1bnQgU2bDom50YQpEdW1pbmljxIMgyJlpIMiZdGl1IGNlIG5ldm9pZSB0ZS1hIGFkdXMgcGUgbGEgbWluZS4gU3DDom51bCB2cmVhCnPEgy3Im2kgcsSDcHVuxIMgY2FwdWwgY3Ugb3JpY2UgY2hpcCDImWkgZGUtYWNlZWEgdGUtYSB0cmltaXMgc8SDLWkKYWR1Y2kgc8SDbMSDyJtpIGRpbiBHcsSDZGluYSBVcnN1bHVpLCBkYXIgaS1vciBkYSBlbGUgb2RhdMSDIHBlCm5hcy4uLiBSxINtw6JpIGFpY2kgw65uIGFzdMSDLW5vYXB0ZSwgY2Egc8SDIHbEg2QgY2UtaSBkZSBmxINjdXQuCgpIYXJhcC1BbGIgcsSDbcOibmUgYnVjdXJvcywgbXVsyJt1bWluZCBTZmludGVpIER1bWluaWNpIHBlbnRydSBidW5hCmfEg3pkdWlyZSDImWkgw65uZ3JpamlyZWEgY2UgYXJlIGRlIGVsLgoK4oCUIEZpaSDDrm5jcmVkaW7Im2F0IGPEgyBudSBldSwgY2kgcHV0ZXJlYSBtaWxvc3RlbmllaSDImWkgaW5pbWEgdGEKY2VhIGJ1bsSDIHRlIGFqdXTEgywgSGFyYXAtQWxiLCB6aWNlIFNmw6JudGEgRHVtaW5pY8SDIGllyJlpbmQgyJlpCmzEg3PDom5kdS1sIMOubiBwYWNlIHPEgyBzZSBsaW5pyJl0ZWFzY8SDLgoKyJhpIGN1bSBpZXNlIFNmw6JudGEgRHVtaW5pY8SDIGFmYXLEgywgb2RhdMSDIMiZaSBwb3JuZciZdGUgZGVzY3VsyJvEgwpwcmluIHJvdcSDLCBkZSBjdWxlZ2UgbyBwb2FsxIMgZGUgc29tbm9yb2FzxIMsIHBlIGNhcmUgbyBmaWVyYmUgbGEKdW4gbG9jIGN1IG8gdmFkcsSDIGRlIGxhcHRlIGR1bGNlIMiZaSBjdSB1bmEgZGUgbWllcmUgyJlpIGFwb2kgaWEKbXVyc2EgYWNlZWEgyJlpIGl1dGUgc2UgZHVjZSBkZSBvIHRvYXJuxIMgw65uIGbDom50w6JuYSBkaW4gR3LEg2RpbmEKVXJzdWx1aSwgY2FyZSBmw6JudMOibsSDIGVyYSBwbGluxIMgY3UgYXDEgyBww6JuxIMgbGEgZ3VyxIMuIMiYaSBtYWkKc3TDom5kIFNmw6JudGEgRHVtaW5pY8SDIG9sZWFjxIMgw65uIHByZWFqbWEgZsOibnTDom5paSwgbnVtYWkgaWFjYSBjZQp2ZWRlIGPEgyB2aW5lIHVyc3VsIGN1IG8gZmFsY8SDIMOubiBjZXIgyJlpIGN1IHVuYSDDrm4gcMSDbcOibnQsCm1vcm7Eg2luZCDDrm5mcmljb8iZYXQuIMiYaSBjdW0gYWp1bmdlIGxhIGbDom50w6JuxIMsIGN1bSDDrm5jZXBlIGEgYmVhCmxhY29tIGxhIGFwxIMgyJlpIGEtyJlpIGxpbmdlIGJ1emVsZSBkZSBkdWxjZWHIm2EgyJlpIGJ1bsSDdGF0ZWEgZWkuCsiYaSBtYWkgc3TEgyBkaW4gYsSDdXQsIMiZaSBpYXIgw65uY2VwZSBhIG1vcm7Eg2k7IMiZaSBpYXIgbWFpIGJlYSBjw6J0ZQp1biByxINzdGltcCwgyJlpIGlhciBtb3JuxINpZciZdGUsIHDDom7EgyBjZSwgZGUgbGEgbyB2cmVtZSwgw65uY2VwIGEtaQpzbMSDYmkgcHV0ZXJpbGUgyJlpLCBjdXByaW5zIGRlIGFtZcibZWFsxIMsIHBlIGxvYyBjYWRlIGpvcyDImWkKYWRvYXJtZSBtb3J0LCBkZSBwdXRlYWkgc8SDIHRhaSBsZW1uZSBwZSBkw6Juc3VsLgoKQXR1bmNpIFNmw6JudGEgRHVtaW5pY8SDLCB2xIN6w6JuZHUtbCBhyJlhLCDDrm50ci1vIGNsaXDEgyBzZSBkdWNlIMiZaSwKZGXImXRlcHTDom5kIHBlIEhhcmFwLUFsYiBjaGlhciDDrm4gbWllenVsIG5vcMibaWksIMOuaSB6aWNlOgoK4oCUIMOObWJyYWPEgy10ZSBpdXRlIMOubiBwaWVsZWEgY2VhIGRlIHVycywgY2FyZSBvIGFpIGRlIGxhIHRhdMSDLQp0xIN1LCBhcHVjxIMgcGUgaWNpIHRvdCDDrm5haW50ZSwgyJlpIGN1bSDDrmkgYWp1bmdlIMOubiByxINzY3J1Y2lsZQpkcnVtdWx1aSwgYWkgc8SDIGRhaSBkZSBHcsSDZGluYSBVcnN1bHVpLiBBdHVuY2kgc2FpIHJlcGVkZQrDrm5sxIN1bnRydSBkZS3Im2kgaWEgc8SDbMSDyJtpIMOubnRyLWFsZXMsIMiZaSBjw6J0ZS1pIHZyZWEgZGUgbXVsdGUsCmPEg2NpIHBlIHVycyBsLWFtIHB1cyBldSBsYSBjYWxlLiBEYXIsIGxhIHRvYXTEgyDDrm50w6JtcGxhcmVhLCBkZS1pCnZlZGVhIMiZaS1pIHZlZGVhIGPEgyBzLWEgdHJleml0IMiZaSBuxIN2xINsZciZdGUgbGEgdGluZSwgenbDonJsZS1pCnBpZWxlYSBjZWEgZGUgdXJzIMiZaSBhcG9pIGZ1Z2kgw65uY29hY2Ugc3ByZSBtaW5lIGPDonQgw65pIHB1dGVhLgoKSGFyYXAtQWxiIGZhY2UgY3VtIMOuaSB6aWNlIFNmw6JudGEgRHVtaW5pY8SDLiDImGkgY3VtIGFqdW5nZSDDrm4KZ3LEg2RpbsSDLCBvZGF0xIMgw65uY2VwZSBhIHNtdWxnZSBsYSBzxINsxIPIm2kgw65udHItYWxlcyDImWkgbGVhZ8SDIG8Kc2FyY2luxIMgbWFyZSwgbWFyZSwgY8OidCBwZSBjZSBzxIMgbi1vIHBvYXTEgyByaWRpY2Egw65uIHNwaW5hcmUuIMiYaQpjw6JuZCBzxIMgaWFzxIMgY3UgZMOibnNhIGRpbiBncsSDZGluxIMsIGlhY2EgdXJzdWwgc2UgdHJlemXImXRlLCDImWkKZHVwxIMgZMOibnN1bCwgR2F2cmlsZSEgSGFyYXAtQWxiLCBkYWPEgyB2ZWRlIHJlYXVhLCBpLWFydW5jxIMKcGllbGVhIGNlYSBkZSB1cnMsIMiZaSBhcG9pIGZ1Z2UgY8OidCBjZSBwb2F0ZSBjdSBzYXJjaW5hIMOubgpzcGF0ZSwgdG90IMOubmFpbnRlIGxhIFNmw6JudGEgRHVtaW5pY8SDLCBzY8SDcMOibmQgY3Ugb2JyYXogY3VyYXQuCgpEdXDEgyBhY2Vhc3RhLCBIYXJhcC1BbGIsIG11bMibdW1pbmQgU2ZpbnRlaSBEdW1pbmljaSBwZW50cnUKYmluZWxlIGNlIGktYSBmxINjdXQsIMOuaSBzxINydXTEgyBtw6JuYSwgYXBvaSDDrsiZaSBpYSBzxINsxIPIm2lsZSDImWksCsOubmPEg2xlY8OibmQsIHBvcm5lyJl0ZSBzcHJlIMOubXDEg3LEg8ibaWUsIER1bW5lemV1IHPEgyBuZSDIm2llLCBjxIMKY3V2w6JudHVsIGRpbiBwb3Zlc3RlLCDDrm5haW50ZSBtdWx0IG1haSBlc3RlLgoKyJhpIG1lcmfDom5kIHRvdCBjdW0gcy1hIGR1cywgZGUgbGEgbyB2cmVtZSBhanVuZ2UgbGEgw65tcMSDcsSDyJtpZSDImWkKZMSDIHPEg2zEg8ibaWxlIMOubiBtw6JuYSBTcMOibnVsdWkuCgrDjm1wxINyYXR1bCDImWkgZmV0ZWxlIHNhbGUsIHbEg3rDom5kIGFjZWFzdGEsIGxlLWEgZm9zdCBkZS1hCm1pcmFyZWEuIEF0dW5jaSBTcMOibnVsIHppY2Ugw65uZ8OibWZhdDoKCuKAlCBFaSwgbW/ImXVsZSwgY2UgbWFpIHppY2k/IOKAlCBDZSBzxIMgemljLCBuZXBvYXRlPyBJYSwgY8OibmQgYciZIGF2w6kKZXUgbyBzbHVnxIMgY2EgYWNlYXN0YSwgbnUgaS1hyJkgdHJlY2UgcGUgZGluYWludGUuCgrigJQgRC1hcG9pIGRlIGNlIG1pIGwtYSBkYXQgdGF0YSBkZS1hY2FzxIM/IG51bWFpIGRlIHZyZWRuaWNpYSBsdWksCnppc2UgU3DDom51bDsgY8SDY2kgYWx0ZmVsIG51LWwgbWFpIGx1YW0gZHVwxIMgbWluZSwgY2Egc8SDLW1pCsOubmN1cmNlIHppbGVsZS4KCkxhIHZybyBjw6J0ZXZhIHppbGUgZHVwxIMgYWNlYXN0YSwgw65tcMSDcmF0dWwgYXJhdMSDIFNww6JudWx1aSBuaciZdGUKcGlldHJlIHNjdW1wZSwgemljw6JuZDoKCuKAlCBOZXBvYXRlLCBtYWkgdsSDenV0LWFpIHBpZXRyZSBuZXN0ZW1hdGUgYciZYSBkZSBtYXJpIMiZaSBmcnVtb2FzZQpjYSBhY2VzdGVhIGRlIGPDom5kIGXImXRpPwoK4oCUIEFtIHbEg3p1dCBldSwgbW/ImXVsZSwgZmVsdXJpdGUgcGlldHJlIHNjdW1wZSwgZGFyIGNhIGFjZXN0ZSwKZHJlcHQgc8SDLcibaSBzcHVuLCBuLWFtIHbEg3p1dC4gT2FyZSBwZSB1bmRlIHNlIHBvdCBnxINzaSBhyJlhCnBpZXRyZT8KCuKAlCBQZSB1bmRlIHPEgyBzZSBnxINzZWFzY8SDLCBuZXBvYXRlISBJYSwgw65uIFDEg2R1cmVhIENlcmJ1bHVpLiDImGkKY2VyYnVsIGFjZWxhIGVzdGUgYsSDdHV0IHRvdCBjdSBwaWV0cmUgc2N1bXBlLCBtdWx0IG1haSBtYXJpIMiZaQptYWkgZnJ1bW9hc2UgZGVjw6J0IGFjZXN0ZS4gTWFpIMOubnTDomksIGNpY8SDIGFyZSB1bmEgw65uIGZydW50ZSwgZGUKc3RyxINsdWNlyJl0ZSBjYSBzb2FyZWxlLiBEYXIgbnUgc2UgcG9hdGUgYXByb3BpYSBuaW1lbmUgZGUgY2VyYiwKY8SDY2kgZXN0ZSBzb2xvbW9uaXQgyJlpIG5pY2kgdW4gZmVsIGRlIGFybcSDIG51LWwgcHJpbmRlOyDDrm5zxIMgZWwsCnBlIGNhcmUgbC1hIHrEg3JpLCBudSBtYWkgc2NhcMSDIGN1IHZpYcibxIMuIERlLWFjZWVhIGZ1Z2UgbHVtZWEgZGUKZMOibnN1bCBkZS3ImWkgc2NvYXRlIG9jaGlpOyDImWkgbnUgbnVtYWkgYXTDonRhLCBkYXIgY2hpYXIgY8OibmQgc2UKdWl0xIMgbGEgY2luZXZhLCBmaWUgb20gc2F1IG9yaWNlIGRpaGFuaWUgYSBmaSwgcGUgbG9jIHLEg23Dom5lCm1vYXJ0xIMuIMiYaSBjaWPEgyBvIG11bMibaW1lIGRlIG9hbWVuaSDImWkgZGUgc8SDbGLEg3TEg2NpdW5pIHphYyBmxINyxIMKc3VmbGFyZSDDrm4gcMSDZHVyZWEgbHVpIG51bWFpIGRpbiBhc3TEgyBwcmljaW7Egzogc2UgdmVkZSBjxIMgZXN0ZQpzb2xvbW9uaXQsIMOubnRvcnMgZGUgbGEgyJvDosibxIMsIHNhdSBkcmFjdWwgbWFpIMiZdGllIGNlIGFyZSBkZS1pCmHImWEgZGUgcHJpbWVqZGlvcy4gRGFyIGN1IHRvYXRlIGFjZXN0ZSwgdHJlYnVpZSBzxIMgyJl0aWksCm5lcG9hdGUsIGPEgyB1bmlpIG9hbWVuaSDDrnMgbWFpIGFsIGRyYWN1bHVpIGRlY8OidCBkcmFjdWw7IG51IHNlCmFzdMOibXDEg3LEgyBuaWNpIMOubiBydXB0dWwgY2FwdWx1aTsgbcSDY2FyIGPEgyBhdSBwxIPIm2l0IG11bHRlLCB0b3QKY2VhcmPEgyBwcmluIHDEg2R1cmVhIGx1aSwgc8SDIHZhZMSDLCBudSBsLW9yIHB1dGVhIGfEg2J1aSBjdW12YT8gyJhpCmNhcmUgZGludHJlIGVpIGFyZSDDrm5kcsSDem5lYWxhIG1hcmUgyJlpIG5vcm9jIMiZaSBtYWkgbWFyZSwKdW1ibMOibmQgcGUgYWNvbG8sIGfEg3NlyJl0ZSBkaW4gw65udMOibXBsYXJlIGPDonRlIG8gcGlhdHLEgyBkZQphY2VzdGUsIHBpY2F0xIMgZGUgcGUgY2VyYiwgY8OibmQgc2Ugc2N1dHVyxIMgZWwgbGEgyJlhcHRlIGFuaSBvCmRhdMSDLCDImWkgYXBvaSBhY2VsdWlhIG9tIG51LWkgdHJlYnVpZSBhbHTEgyBuZWd1c3RvcmllIG1haSBidW7Egy4KQWR1Y2UgcGlhdHJhIGxhIG1pbmUgyJlpIGktbyBwbMSDdGVzYyBjw6J0IG51IGZhY2U7IGJhIMOubmPEgyBzdW50CmJ1Y3Vyb3MgY8SDIG8gcG90IGPEg3DEg3RhLiDImGkgYWZsxIMsIG5lcG9hdGUsIGPEgyBhc2VtZW5lIHBpZXRyZSBmYWMKcG9kb2FiYSDDrm1wxINyxIPIm2llaSBtZWxlLCBudSBzZSBnxINzZXNjIGFsdGVsZSBtYWkgbWFyaSDImWkgbWFpCmZydW1vYXNlIGRlY8OidCBhY2VzdGUgbGEgbmljaSBvIMOubXDEg3LEg8ibaWUsIMiZaSBkZS1hY2VlYSBzLWEgZHVzCnZlc3RlYSBkZXNwcmUgZWxlIMOubiB0b2F0xIMgbHVtZWEuIE11bMibaSDDrm1wxINyYcibaSDImWkgY3JhaSDDrm5hZGlucwp2aW4gc8SDIGxlIHZhZMSDLCDImWkgbGktaSBkZS1hIG1pcmFyZWEgZGUgdW5kZSBsZSBhbS4KCuKAlCBEb2FtbmUsIG1vyJl1bGUhIHppc2UgYXR1bmNpIFNww6JudWw7IHPEgyBudSB0ZSBzdXBlcmksIGRhciBudQrImXRpdSBjZSBmZWwgZGUgb2FtZW5pIGZyaWNvyJlpIGF2ZcibaSBwZSBhaWNpLiBFdSBwdW4gcsSDbcSDyJlhZyBwZQpjZSB2cmVpIGPEgyBzbHVnYSBtZWEgYXJlIHPEgy1taSBhZHVjxIMgcGllbGVhIGNlcmJ1bHVpIGFjZWx1aWEsIGN1CmNhcCBjdSB0b3QsIGHImWEgw65tcG9kb2JpdCBjdW0gZXN0ZS4KCsiYLW9kYXTEgyBjaGVhbcSDIFNww6JudWwgcGUgSGFyYXAtQWxiIMiZaS1pIHppY2U6IOKAlCBEdS10ZSDDrm4gUMSDZHVyZWEKQ2VyYnVsdWksIGN1bSDDrmkgyJl0aSB0dSwgyJlpIG3Eg2NhciBmxIMgcGUgZHJhY3VsIMOubiBwYXRydSwgc2F1Cm9yaWNlLWkgZmFjZSwgZGFyIG51bWFpZGVjw6J0IHPEgy1taSBhZHVjaSBwaWVsZWEgY2VyYnVsdWksIGN1IGNhcApjdSB0b3QsIGHImWEgYsSDdHV0ZSBjdSBwaWV0cmUgc2N1bXBlLCBjdW0gc2UgZ8SDc2VzYy4gyJhpIGRvYXIgdGUtYQrDrm1waW5nZSBwxINjYXR1bCBzxIMgY2xpbnRlyJl0aSB2cmVvIHBpYXRyxIMgZGluIGxvY3VsIHPEg3UsIGlhcsSDIG1haQphbGVzIGFjZWEgbWFyZSBkaW4gZnJ1bnRlYSBjZXJidWx1aSwgYy1hcG9pIGF0w6J0YSDIm2ktaSBsZWFjdWwhCkhhaSwgcG9ybmXImXRlIGl1dGUsIGPEgyBudS1pIHZyZW1lIGRlIHBpZXJkdXQhCgpIYXJhcC1BbGIgdmVkZSBlbCBiaW5lIHVuZGUgbWVyZ2UgdHJlYWJhLCBjxIMgZG9hciBudSBlcmEgZGluCmJ1dHVjaTsgZGFyIG5lYXbDom5kIMOubmNvdHJvLCBpZXNlIG3DomhuaXQsIHNlIGR1Y2UgaWFyIMOubiBncmFqZApsYSBjYWwgyJlpLCBuZXRlemluZHUtbCBwZSBjb2FtxIMsIMOuaSB6aWNlOgoK4oCUIERyYWd1bCBtZXUgY8SDbHXImywgbGEgZ3JlYSBiZWxlYSBtLWEgdsOicsOidCBpYXIgU3DDom51bCEuLi4gRGUtb2kKbWFpIHNjxINwYSDImWkgZGluIGFzdGEgY3UgdmlhyJvEgywgYXBvaSB0b3QgbWFpIGFtIHppbGUgZGUgdHLEg2l0LgpEYXIgbnUgyJl0aXUsIHrEg3UsIGxhIGPDonQgbWktYSBzdGEgbm9yb2N1bCEKCuKAlCBOdS1pIG5pbWljYSwgc3TEg3DDom5lLCB6aXNlIGNhbHVsLiBDYXB1bCBkZS1hciBmaSBzxINuxIN0b3MsIGPEgwpiZWxlbGVsZSBjdXJnIGfDonJsxIMuIFBvYXRlIGFpIHByaW1pdCBwb3J1bmPEgyBzxIMganVwZciZdGkgcGlhdHJhCm1vcmlpIMiZaSBzxIMgZHVjaSBwaWVsZWEgbGEgw65tcMSDcsSDyJtpZS4uLgoK4oCUIEJhIG51LCBjxINsdcibdWwgbWV1OyBhbHRhIMiZaSBtYWkgw65uZnJpY2/ImWF0xIMsIHppc2UgSGFyYXAtIEFsYi4KCuKAlCBWb3JixIMgc8SDIGZpZSwgc3TEg3DDom5lLCBjxIMgdG9jbWVhbGEtaSBnYXRhLCB6aXNlIGNhbHVsLiBOdSB0ZQp0ZW1lLCDImXRpdSBldSBuxIN6ZHLEg3bEg25paSBkZSBhbGUgU3DDom51bHVpOyDImWkgc8SDIGZpIHZydXQsIGRlCmRlbXVsdCBpLWHImSBmaSBmxINjdXQgcGUgb2JyYXosIGRhciBsYXPEgy1sIHPEgy3ImWkgbWFpIGpvYWNlIGNhbHVsLgpDZSBnw6JuZGXImXRpPyDImGkgdW5paSBjYSBhY2XImXRpYSBzdW50IHRyZWJ1aXRvcmkgcGUgbHVtZQpjw6J0ZW9kYXTEgywgcGVudHJ1IGPEgyBmYWMgcGUgb2FtZW5pIHPEgyBwcmluZMSDIGxhIG1pbnRlLi4uIFppIMiZaQpkLXRhIGPEgyBhaSBhdnV0IHPEgyB0cmFnaSB1biBwxINjYXQgc3RyxINtb8iZZXNjLiBWb3JiYSBjZWVhOgoiUMSDcmluyJtpaSBtxINuw6JuY8SDIGFndXJpZMSDLCDImWkgZmlpbG9yIGxpIHNlIHN0cmVwZXplc2MgZGluyJtpaSIuCkhhaSwgbnUgbWFpIHN0YSBsYSBnw6JuZHVyaTsgw65uY2FsZWPEgyBwZSBtaW5lIMiZaSBwdW5lLcibaSBuxINkZWpkZWEKw65uIER1bW5lemV1LCBjxIMgbWFyZS1pIHB1dGVyZWEgTHVpOyBudSBuZS1hIGzEg3NhIGVsIHPEgyBzdWZlcmltCsOubmRlbHVuZy4gQ3VtIHZyZWkuICJDZS1pIGUgc2NyaXMgb211bHVpIMOubiBmcnVudGUtaSBlIHB1cy4iCkRvYXInIG1hcmUtaSBDZWwtZGUtc3VzISBTLW9yIHNmw6JyyJlpIGVsZSDImWkgYWNlc3RlIGRlIGxhIG8KdnJlbWUuLi4KCkhhcmFwLUFsYiBhdHVuY2kgw65uY2FsZWPEgywgyJlpIGNhbHVsIHBvcm5lyJl0ZSBsYSBwYXMsIHDDom7EgyBjZQppZXNlIG1haSDDrm5jb2xvIGRlcGFydGUsIGNhIHPEgyBudS1pIGlhIGx1bWVhIGxhIG9jaGkuIMiYaSBhcG9pLArDrm5jb3Jkw6JuZHUtc2UgyJlpIHNjdXR1csOibmR1LXNlIG8gZGF0xIMgdm9pbmljZciZdGUsIGlhcsSDLciZaSBhcmF0xIMKcHV0ZXJpbGUsIHppY8OibmQ6CgrigJQgyJppbmUtdGUgemRyYXbEg24sIHN0xINww6JuZSwgY8SDIGlhciBhbSBzxIMgemJvcjoKCsOObiDDrm5hbHR1bCBjZXJ1bHVpLApWxIN6ZHVodWwgcMSDbcOibnR1bHVpOwpQZSBkZWFzdXByYSBjb2RyaWxvciwKUGVzdGUgdsOicmZ1bCBtdW7Im2lsb3IsClByaW4gY2VhyJthIG3Eg2d1cmlsb3IsClNwcmUgbm9pYW51bCBtxINyaWxvciwKTGEgY3LEg2lhc2EgesOibmVsb3IsCk1pbnVuZWEgbWludW5pbG9yLApEaW4gb3N0cm92dWwgZmxvcmlsb3IuCsiYaSB6aWPDom5kIGFjZXN0ZSwgb2RhdMSDIMiZaSB6Ym9hcsSDIGN1IEhhcmFwLUFsYgoKw45uIMOubmFsdHVsIGNlcnVsdWksClbEg3pkdWh1bCBwxINtw6JudHVsdWk7CsiZaSBvIGlhIGRlLWEgY3VybWV6aciZOgpEZSBsYSBub3VyaSBjxIN0cmUgc29hcmUsClByaW50cmUgbHVuxIMgyJlpIGx1Y2VmZXJpLApTdGVsZSBtw6JuZHJlIGx1Y2l0b2FyZSwKyJlpIGFwb2kgc2UgbGFzxIMgbGluIGNhIHbDom50dWw6CsOObiBvc3Ryb3Z1bCBmbG9yaWxvciwKTGEgY3LEg2lhc2EgesOibmVsb3IsCk1pbnVuZWEgbWludW5pbG9yLgrImGkgY8OibmQgdsOibnR1bCBhIGFidXJpdCwgaWFjYSDImWkgZWkgbGEgU2bDom50YSBEdW1pbmljxIMgaWFyIGF1CnNvc2l0LiBTZsOibnRhIER1bWluaWPEgyBlcmEgYWNhc8SDIMiZaSwgY3VtIGEgdsSDenV0IHBlIEhhcmFwLUFsYgpwb3Bvc2luZCBsYSB1yJlhIGVpLCBwZSBsb2MgbC1hIMOubnTDom1waW5hdCDImWkgaS1hIHppcyBjdSBibMOibmRlyJtlOgoK4oCUIEVpLCBIYXJhcC1BbGIsIGHImWEtaSBjxIMgaWFyIHRlLWEgYWp1bnMgbmV2b2lhIGRlIG1pbmU/IOKAlCBByJlhCmVzdGUsIG3Eg2ljdcibxIMsIHLEg3NwdW5zZSBIYXJhcC1BbGIsIGN1ZnVuZGF0IMOubiBnw6JuZHVyaSDImWkgZ2FsYmVuCmxhIGZhyJvEgywgZGUgcGFyY8SDLWkgbHVhc2UgcMOibnphIGRlIHBlIG9icmF6LiBTcMOibnVsIHZyZWEgc8SDLW1pCnLEg3B1bsSDIGNhcHVsIGN1IG9yaWNlIHByZcibLiDImGkgZGUtYciZIG11cmkgbWFpIGRlZ3JhYsSDLCBzxIMgc2NhcApvZGF0xIMgZGUgemJ1Y2l1bTogZGVjw6J0IGHImWEgdmlhyJvEgywgbWFpIGJpbmUgbW9hcnRlIGRlIG8gbWllIGRlCm9yaSEKCuKAlCBWYWkgZGUgbWluZSDImWkgZGUgbWluZSwgSGFyYXAtQWxiLCB6aXNlIFNmw6JudGEgRHVtaW5pY8SDOyBwYXJjxIMKbnUgdGUtYciZIGZpIGNyZXp1dCBhyJlhIHNsYWIgZGUgw65uZ2VyLCBkYXIsIGR1cMSDIGPDonQgdsSDZCwgZciZdGkKbWFpIGZyaWNvcyBkZWPDonQgbyBmZW1laWUhIEhhaSwgbnUgbWFpIHN0YSBjYSBvIGfEg2luxIMgcGxvdWF0xIMhCnLEg23DomkgbGEgbWluZSDDrm4gYXN0xIMgbm9hcHRlIMiZaSDIm2ktb2kgZGEgZXUgdnJ1biBhanV0b3IuIE1hcmUtaQpEdW1uZXpldSEgTi1hIG1haSBmaSBlbCBkdXDEgyBnw6JuZHVsIFNww6JudWx1aS4gw45uc8SDIG1haSByYWJkxIMgyJlpCnR1LCBmxIN0dWwgbWV1LCBjxIMgbXVsdCBhaSBhdnV0IGRlIHLEg2JkYXQgyJlpIHB1yJtpbiBtYWkgYWkuClDDom4tYWN1bSDIm2ktYSBmb3N0IG1haSBncmV1LCBkYXIgZGUtYWN1bSDDrm5haW50ZSB0b3QgYciZYSBhcmUKc8SDLcibaSBmaWUsIHDDom7EgyBjZS1pIGllyJlpIGRpbiBzbHVqYmEgU3DDom51bHVpLCBkZSBsYSBjYXJlIGFpIHPEgwp0cmFnaSDDrm5jxIMgbXVsdGUgbmVjYXp1cmksIGRhciBhaSBzxIMgc2NhcGkgZGluIHRvYXRlIGN1IGNhcHVsCnRlYWbEg3IsIHBlbnRydSBjxIMgbm9yb2N1bCB0ZSBhanV0xIMuCgrigJQgUG9hdGUgYciZYSBzxIMgZmllLCBtxINpY3XIm8SDLCB6aXNlIEhhcmFwLUFsYiwgZGFyIHByZWEgbXVsdGUgcy1hdQrDrm5ncsSDbcSDZGl0IGRlb2RhdMSDIHBlIGNhcHVsIG1ldS4KCuKAlCBDw6J0ZSBhIGRhdCBEdW1uZXpldSwgSGFyYXAtQWxiLCB6aXNlIFNmw6JudGEgRHVtaW5pY8SDOyBhyJlhIGEKdHJlYnVpdCBzxIMgc2Ugw65udMOibXBsZSwgyJlpIG4tYWkgY3VpIGLEg251aTogcGVudHJ1IGPEgyBudS1pIGR1cMSDCmN1bSBnw6JuZGXImXRlIG9tdWwsIGNpLWkgZHVwxIMgY3VtIHZyZWEgRG9tbnVsLiBDw6JuZCB2ZWkgYWp1bmdlIMiZaQp0dSBvZGF0xIMgbWFyZSDImWkgdGFyZSwgw65pIGPEg3V0YSBzxIMganVkZWNpIGx1Y3J1cmlsZSBkZS1hCmZpci1hLXDEg3IgyJlpIHZlaSBjcmVkZSBjZWxvciBhc3VwcmnIm2kgyJlpIG5lY8SDamnIm2ksIHBlbnRydSBjxIMKyJl0aWkgYWN1bSBjZSBlIG5lY2F6dWwuIERhciBww6JuxIMgYXR1bmNpLCBtYWkgcmFiZMSDLCBIYXJhcEFsYiwKY8SDY2kgY3UgcsSDYmRhcmVhIMOuaSBmcmlnaSBwaWVsZWEuCgpIYXJhcC1BbGIsIG5lbWFpYXbDom5kIGNlIHppY2UsIG11bMibdW1lyJl0ZSBsdWkgRHVtbmV6ZXUsIMiZaSBkZQpiaW5lLCDImWkgZGUgcsSDdSwgyJlpIFNmaW50ZWkgRHVtaW5pY2kgcGVudHJ1IGJ1bmEgZ8SDemR1aXJlIMiZaQphanV0b3J1bCBmxINnxINkdWl0LgoK4oCUIElhLCBhY3VtIG1haSB2aWkgZGUtYWNhc8SDLCBmxIN0dWwgbWV1ISBaaWPEgyBjaW5lLWEgemljZSDImWkgY3VtCmEgdnJlYSBzxIMgemljxIMsIGRhciBjw6JuZCBlc3RlIHPEgyBkYWkgcGVzdGUgcMSDY2F0LCBkYWPEgy1pCsOubmFpbnRlLCB0ZSBzaWxlyJl0aSBzxIMtbCBhanVuZ2ksIGlhciBkYWPEgy1pIMOubiB1cm3Egywgc3RhaSDImWktbAphyJl0ZXDIm2kuIE3EgyByb2csIGNlIG1haSBsYSBkZWFsLCBsYSB2YWxlPyBhyJlhIGUgbHVtZWEgYXN0YSDImWksCmRlLWFpIGZhY2UgY2UtYWkgZmFjZSwgcsSDbcOibmUgY3VtIGVzdGUgZWE7IG51IHBvyJtpIHMtbyDDrm50b3JjaQpjdSB1bcSDcnVsLCBtxINjYXIgc8SDIHRlIHB1aSDDrm4gcnVwdHVsIGNhcHVsdWkuIFZvcmJhIGNlZWE6ICJaaS1pCmx1bWUgyJlpIHRlIG3Dom50dWllIi4gRGFyIGlhIHPEgyBsxINzxINtIHRvYXRlIGxhIG8gcGFydGUgyJlpLCBww6JuxIMKbGEgdW5hLWFsdGEsIGhhaSBzxIMgdmVkZW0gY2UtaSBkZSBmxINjdXQgY3UgY2VyYnVsLCBjxIMgU3DDom51bAp0ZS1hIGZpIGHImXRlcHTDom5kIGN1IG5lcsSDYmRhcmUuIMiYaSwgZMSDLCBzdMSDcMOibiBudS1pPyB0cmVidWllCnPEgy1sIGFzY3VsyJtpLiBWb3JiYSBjZWVhOiAiTGVhZ8SDIGNhbHVsIHVuZGUgemljZSBzdMSDcMOibnVsIi4KCsiYaSBvZGF0xIMgc2NvYXRlIFNmw6JudGEgRHVtaW5pY8SDIG9icsSDemFydWwgyJlpIHNhYmlhIGx1aQpTdGF0dS1QYWxtxIMtQmFyYsSDLUNvdCwgZGUgdW5kZSBsZSBhdmVhIMiZaSwgZMOibmR1LWxlIGx1aQpIYXJhcC1BbGIsIHppY2U6CgrigJQgyJppbmUgYWNlc3RlLCBjxIMgYXUgc8SDLcibaSBmaWUgZGUgbWFyZSB0cmVidWluyJvEgyB1bmRlIG1lcmdlbS4gyJhpCmNoaWFyIGhhaWRlbSwgY3UgYWp1dG9ydWwgRG9tbnVsdWksIHPEgyBpc3ByxIN2aW0gb2RhdMSDIMiZaQp0cmVidciZb2FyYSBhc3RhLgoKyJhpIHBlIGxhIGPDom50YXR1bCBjdWNvyJlpbG9yIHNlIGlhIFNmw6JudGEgRHVtaW5pY8SDIMOubXByZXVuxIMgY3UKSGFyYXAtQWxiIMiZaSBzZSBkdWMgw65uIFDEg2R1cmVhIENlcmJ1bHVpLiDImGkgY3VtIGFqdW5nIMOubiBwxINkdXJlLApzYXDEgyBvIGdyb2FwxIMgYWTDom5jxIMgZGUgdW4gc3RhdCBkZSBvbSwgbMOibmfEgyB1biBpenZvciwgdW5kZSDDrm4KZmllY2FyZSB6aSBwZSBsYSBhbWlhesSDIHZlbmVhIGNlcmJ1bCBkZSBiZWEgYXDEgywgYXBvaSBzZSBjdWxjYQphY29sbyBwZSBsb2MgyJlpIGRvcm1lYSBjw6J0IHVuIGJlaSwgcMOibsSDIGNlIGFzZmluyJtlYSBzb2FyZWxlLiDImGkKZHVwxIMgYWNlZWEsIHNjdWzDom5kdS1zZSwgbyBsdWEgw65uIHBvcm5lYWzEgyDImWkgbnUgbWFpIGRhIHBlIGxhCml6dm9yIGlhciBww6JuxIMgYSBkb3VhIHppIHBlIGxhIGFtaWF6xIMuCgrigJQgRWksIGVpISBhY3VtIGdyb2FwYSBlc3RlIGdhdGEsIHppc2UgU2bDom50YSBEdW1pbmljxIMuIFR1LApIYXJhcC1BbGIsIHLEg23DomkgYWljaSDDrm50ci3Drm5zYSwgdG9hdMSDIHppdWEsIMiZaSBpYWNhIGNlIGFpIGRlCmbEg2N1dDogcHVuZS3Im2kgb2JyxIN6YXJ1bCBjdW0gc2UgcHVuZSwgaWFyxIMgc2FiaWEgc8SDIG4tbyBzbMSDYmXImXRpCmRpbiBtw6JuxIM7IMiZaSBkZS1hbWlhesSDLCBjw6JuZCBhIHZlbmkgY2VyYnVsIGFpY2kgbGEgaXp2b3Igc8SDIGJlYQphcMSDIMiZaSBzLWEgY3VsY2EgyJktYSBhZG9ybWksIGN1IG9jaGlpIGRlc2NoaciZaSwgY3VtIGktaQpmZWxlyJlhZ3VsLCB0dSwgw65uZGF0xIMgY2UgbC3DrmkgYXV6aSBob3LEg2luZCwgc8SDIGllyJlpIMOubmNldGnImW9yIMiZaQpzxIMgcG90cml2ZciZdGkgYciZYSBjYSBzxIMtaSB6Ym9yaSBjYXB1bCBkaW50ci1vIHNpbmd1csSDIGxvdml0dXLEgwpkZSBzYWJpZSwgyJlpIGFwb2kgcmVwZWRlIHPEgyB0ZSBhcnVuY2kgw65uIGdyb2FwxIMgyJlpIHPEgyDImWV6aSBhY29sbwrDrm50ci3Drm5zYSBww6JuxIMgZHVwxIMgYXNmaW7Im2l0dWwgc29hcmVsdWkuIENhcHVsIGNlcmJ1bHVpIGFyZSBzxIMKdGUgc3RyaWdlIHDDom7EgyBhdHVuY2kgbWVyZXUgcGUgbnVtZSwgY2Egc8SDIHRlIHZhZMSDLCBkYXIgdHUgbnUKY3VtdmEgc8SDIHRlIMOubmR1cGxlY2kgZGUgcnVnxINtaW50ZWEgbHVpIMiZaSBzxIMgdGUgacibZciZdGkgbGEKZMOibnN1bCwgY8SDIGFyZSB1biBvY2hpIG90csSDdml0IMiZaSwgY8OibmQgbC1hIHBpcm9uaSBzcHJlIHRpbmUsIG51Cm1haSB0csSDaWXImXRpLiDDjm5zxIMsIGN1bSBhIGFzZmluyJtpIHNvYXJlbGUsIHPEgyDImXRpaSBjxIMgYSBtdXJpdApjZXJidWwuIMiYaSBhdHVuY2kgc8SDIGllaSBmxINyxIMgZnJpY8SDIHPEgy1pIGp1cGXImXRpIHBpZWxlYSwgaWFyxIMKY2FwdWwgc8SDLWwgaWVpIGHImWEgw65udHJlZywgY3VtIHNlIGfEg3NlyJl0ZSwgyJlpIGFwb2kgc8SDIHZpaSBsYQptaW5lLgoKyJhpIGHImWEsIFNmw6JudGEgRHVtaW5pY8SDIHNlIGlhIMiZaSBzZSDDrm50b2FybsSDIHNpbmd1csSDIGFjYXPEgy4gSWFyxIMKSGFyYXAtQWxiIHLEg23Dom5lIGxhIHDDom5kxIMgw65uIGdyb2FwxIMuIMiYaSwgY8OibmQgcGUgbGEgYW1pYXrEgywKbnVtYWkgaWFjYSBjZSBhdWRlIEhhcmFwLUFsYiB1biBtdWdldCDDrm7Eg2R1yJlpdDogY2VyYnVsIHZlbmVhCmJvbmPEg2x1aW5kLiDImGkgYWp1bmfDom5kIGxhIGl6dm9yLCBvZGF0xIMgyJlpIMOubmNlcGUgYSBiZWEgaMOibHBhdgpsYSBhcMSDIHJlY2U7IGFwb2kgbWFpIGJvbmPEg2x1aWXImXRlLCDImWkgaWFyIG1haSBiZWEgY8OidGUgdW4KcsSDc3RpbXAsIMiZaSBpYXIgbWFpIGJvbmPEg2x1aWXImXRlLCDImWkgaWFyIG1haSBiZWEsIHDDom7EgyBjZSBudSBtYWkKcG9hdGUuIER1cMSDIGFjZWVhIMOubmNlcGUgYS3ImWkgYXJ1bmNhIMibxINybsSDIGR1cMSDIGNhcCwgY2EgYnVoYWl1bCwKyJlpIGFwb2ksIHNjdXJtw6JuZCBkZSB0cmVpIG9yaSBjdSBwaWNpb3J1bCDDrm4gcMSDbcOibnQsIHNlCnRvbG9nZciZdGUgam9zIHBlIHBhamnImXRlLCBhY29sbyBwZSBsb2MsIG1haSBydW1lZ8SDIGVsIGPDonQgbWFpCnJ1bWVnxIMsIMiZaSBwZSB1cm3EgyBzZSBhyJl0ZXJuZSBwZSBzb21uLCDImWkgdW5kZSBudSDDrm5jZXBlIGEgbcOibmEKcG9yY2lpIGxhIGppci4KCkhhcmFwLUFsYiwgY3VtIMOubCBhdWRlIGhvcsSDaW5kLCBpZXNlIGFmYXLEgyDDrm5jZXRpyJlvciDImWksIGPDom5kIMOubApjcm9pZciZdGUgbyBkYXTEgyBjdSBzYWJpYSBwZSBsYSBtaWpsb2N1bCBnw6J0dWx1aSwgw65pIMiZaSB6Ym9hcsSDCmNhcHVsIGPDonQgY29sbyBkZSBsYSB0cnVwIMiZaSBhcG9pIEhhcmFwLUFsYiBzZSBhcnVuY8SDIGbEg3LEgyBzaW5lCsOubiBncm9hcMSDLCBkdXDEgyBjdW0gw65sIHBvdsSDyJt1aXNlIFNmw6JudGEgRHVtaW5pY8SDLiBBdHVuY2kgc8OibmdlbGUKY2VyYnVsdWkgb2RhdMSDIGEgyJlpLW5jZXB1dCBhIGN1cmdlIGfDomxnw6JpbmQgyJlpIGEgc2UgcsSDc3DDom5kaSDDrm4KdG9hdGUgcMSDcsibaWxlLCDDrm5kcmVwdMOibmR1LXNlIMiZaSBuxINib2luZCDDrm4gZ3JvYXDEgyBwZXN0ZQpIYXJhcC1BbGIsIGRlIGPDonQgcGUgY2UgZXJhIHPEgy1sIMOubmVjZS4gSWFyxIMgY2FwdWwgY2VyYnVsdWksCnp2w6JyY29saW5kdS1zZSBkdXJlcm9zLCBzdHJpZ2EgY3UgamFsZSwgemljw6JuZDoKCuKAlCBIYXJhcC1BbGIsIEhhcmFwLUFsYiEgRGUgbnVtZSDIm2ktYW0gYXV6aXQsIGRhciBkZSB2xIN6dXQgbnUKdGUtYW0gdsSDenV0LiBJZciZaSBudW1haSBvbGVhY8SDIHPEgyB0ZSB2xINkIMOubmNhbHRlYSwgdnJlZG5pYyBlyJl0aQpkZSBjb21vYXJhIGNlIMibaS1vIGxhcywgyJlpIGFwb2kgc8SDIG1vciBjdSBwbMSDY2VyZSwgZHJhZ3VsIG1ldSEKCkRhciBIYXJhcC1BbGIgdMSDY2VhIG1vbGN1bSDImWkgZGUtYWJpYSDDrsiZaSBwdXRlYSBkZXNjbGXImXRhCnBpY2lvYXJlbGUgZGluIHPDom5nZWxlIMOubmNoZWdhdCwgY2FyZSBlcmEgbWFpLW1haSBzxIMgdW1wbGUKZ3JvYXBhLiDDjm4gc2bDonLImWl0LCBtYWkgc3RyaWfEgyBlbCwgY2FwdWwgY2VyYnVsdWksIGPDonQgbWFpCnN0cmlnxIMsIMOubnPEgyBIYXJhcC1BbGIgbmljaSBudSByxINzcHVuZGUsIG5pY2kgc2UgYXJhdMSDLCDImWkgZGUgbGEKbyB2cmVtZSBzZSBmYWNlIHTEg2NlcmUuIMiYaSBhyJlhLCBkdXDEgyBhc2ZpbsibaXR1bCBzb2FyZWx1aSwKSGFyYXAtQWxiIGllc2UgZGluIGdyb2FwxIMsIGp1cGXImXRlIHBpZWxlYSBjZXJidWx1aSBjdSBixINnYXJlIGRlCnNlYW3Egywgc8SDIG51IHNtaW50ZWFzY8SDIHZyZW8gcGlhdHLEgyBkaW4gbG9jdWwgZWksIGFwb2kgaWEgY2FwdWwKw65udHJlZywgYciZYSBjdW0gc2UgZ8SDc2VhLCDImWkgc2UgZHVjZSBsYSBTZsOibnRhIER1bWluaWPEgy4KCuKAlCBFaSwgSGFyYXAtQWxiLCB6aXNlIFNmw6JudGEgRHVtaW5pY8SDLCBhyJlhLWkgY8SDIGFtIHNjb3MtbyBsYQpjYXDEg3QgyJlpIGFzdGE/CgrigJQgQciZYTsgY3UgYWp1dG9ydWwgbHVpIER1bW5lemV1IMiZaSBjdSBhbCBzZmluyJtpZWktdm9hc3RyZSwKcsSDc3B1bnNlIEhhcmFwLUFsYiwgYW0gaXpidXRpdCwgbcSDaWN1yJvEgywgc8SDIGZhY2VtIMiZaSBhY3VtIHBlCmNoZWZ1bCBTcMOibnVsdWksIHLEg23Dom5lcmUtYciZIHDEg2d1YmHImSBkZSBkw6Juc3VsIHPEgyByxINtw6JuLCDImWkgc8SDLWwKdsSDZCBjw6JuZCBtaS1vaSB2ZWRlYSBjZWFmYTsgYXR1bmNpLCDImWkgbmljaSBhdHVuY2ksIGPEgyB0YXJlIG1pLWkKbmVncnUgw65uYWludGVhIG9jaGlsb3IhCgrigJQgTGFzxIMtbCwgSGFyYXAtQWxiLCDDrm4gcGxhdGEgbHVpIER1bW5lemV1LCBjxIMgyJlpLWEgZGEgZWwgU3DDom51bApwZXN0ZSBvbSB2cm9kYXTEgzsgcGVudHJ1IGPEgyBudS1pIG5pY2kgbyBmYXB0xIMgZsSDcsSDIHBsYXTEgywgemlzZQpTZsOibnRhIER1bWluaWPEgy4gTWVyZ2kgZGUgaSBsZSBkdSDImWkgYWNlc3RlYSwgY8SDIGktb3IgcsSDbcOibmVhCmVsZSBkZSBjYXAgb2RhdMSDLgoKQXR1bmNpIEhhcmFwLUFsYiwgbXVsyJt1bWluZCBTZmludGVpIER1bWluaWNpLCDDrmkgc8SDcnV0xIMgbcOibmEsCmFwb2kgw65uY2FsZWPEgyBwZSBjYWwgyJlpIHBvcm5lyJl0ZSB0b3QgY3VtIGEgdmVuaXQsIG1lcmfDom5kIHNwcmUKw65tcMSDcsSDyJtpZSwgRHVtbmV6ZXUgc8SDIG5lIMibaWUsIGPEgyBjdXbDom50dWwgZGluIHBvdmVzdGUsIMOubmFpbnRlCm11bHQgbWFpIGVzdGUuLi4gyJhpIHBlIHVuZGUgdHJlY2VhLCBsdW1lYSBkaW4gdG9hdGUgcMSDcsibaWxlIMOubArDrm5naGVzdWlhOiBwZW50cnUgY8SDIHBpYXRyYSBjZWEgbWFyZSBkaW4gY2FwdWwgY2VyYnVsdWkKc3RyxINsdWNlYSBkZSBzZSBwxINyZWEgY8SDIEhhcmFwLUFsYiBzb2FyZWxlIGN1IGVsIMOubCBkdWNlYS4KCk11bMibaSBjcmFpIMiZaSDDrm1wxINyYcibaSBpZciZZWF1IMOubmFpbnRlYSBsdWkgSGFyYXAtQWxiLCDImWkgY2FyZQpkaW5jb3RybyDDrmwgcnVnYSwgdW51bCBzxIMtaSBkZWEgYsSDbsSDcml0LCBjw6J0IGEgY2VyZSBlbCwgYWx0dWwKc8SDLWkgZGVhIGZhdGEgyJlpIGp1bcSDdGF0ZSBkZSDDrm1wxINyxIPIm2llOyBhbHR1bCBzxIMtaSBkZWEgZmF0YSDImWkKw65tcMSDcsSDyJtpYSDDrm50cmVhZ8SDIHBlbnRydSBhc2VtZW5lIG9kb2FyZS4gRGFyIEhhcmFwQWxiIGNhIGRlIGZvYwpzZSBmZXJlYSDImWksIHVybcOibmR1LciZaSBjYWxlYSDDrm5haW50ZSwgbGEgc3TEg3DDom51LXPEg3UgbGUgZHVjZWEuCgrImGkgw65udHItdW5hIGRpbiBzZXJpLCBjdW0gyJllZGVhIFNww6JudWwgw65tcHJldW7EgyBjdSBtb8iZdXMgxIN1IMiZaQpjdSB2ZXJlbGUgc2FsZSBzdXMgw65udHItdW4gZm9pyJlvciwgbnVtYWkgaWFjYSBjZSB6xINyZXNjIMOubgpkZXDEg3J0YXJlIHVuIHN1bCBkZSByYXplIHNjw6JudGVpZXRvYXJlLCBjYXJlIHZlbmVhIMOubnNwcmUKZMOibsiZaWk7IMiZaSBkZSBjZSBzZSBhcHJvcGlhLCBkZSBjZSBsdW1pbmEgbWFpIHRhcmUsIGRlIGxlIGZ1cmEKdmVkZXJpbGUuIMiYaSBkZW9kYXTEgyB0b2F0xIMgc3VmbGFyZWEgcy1hIHB1cyDDrm4gbWnImWNhcmU6IGx1bWVhIGRlCnBlIGx1bWUsIGZpaW5kIMOubiBtYXJlIG5lZHVtZXJpcmUsIGFsZXJnYSBzxIMgdmFkxIMgY2UgbWludW5lCnBvYXRlIHPEgyBmaWUuIMiYaSwgY8OibmQgY29sbywgY2luZSBlcmE/IEhhcmFwLUFsYiwgY2FyZSB2ZW5lYSDDrm4KcGFzdWwgY2FsdWx1aSwgYWR1Y8OibmQgY3Ugc2luZSBwaWVsZWEgyJlpIGNhcHVsIGNlcmJ1bHVpIHBlIGNhcmUKbGUtYSDImWkgZGF0IMOubiBtw6JuYSBTcMOibnVsdWkuCgpMYSB2ZWRlcmVhIGFjZXN0ZWkgbWludW7Eg8ibaWksIHRvyJtpIGF1IHLEg21hcyDDrm5jcmVtZW5pyJtpIMiZaSwKdWl0w6JuZHUtc2UgdW5paSBsYSBhbMibaWksIG51IMiZdGlhdSBjZSBzxIMgemljxIMuIFBlbnRydSBjxIMgw65uCmFkZXbEg3IgZXJhIMiZaSBsdWNydSBkZSBtaXJhcmUhCgpEYXIgU3DDom51bCwgY3UgdmljbGVuaWEgc2Egb2JpY2ludWl0xIMsIG51LciZaSBwaWVyZGUgY3VtcMSDdHVsLgrImGksIGx1w6JuZCB2b3JixIMsIHppY2Ugw65tcMSDcmF0dWx1aToKCuKAlCBFaSwgbW/ImXVsZSwgY2UgbWFpIHppY2k/IGFkZXZlcml0dS1zLWF1IHZvcmJlbGUgbWVsZT8g4oCUIENlIHPEgwptYWkgemljLCBuZXBvYXRlPyEgcsSDc3B1bnNlIMOubXDEg3JhdHVsIHVpbWl0LiBJYSwgc8SDIGFtIGV1IG8Kc2x1Z8SDIGHImWEgZGUgdnJlZG5pY8SDIMiZaSBjcmVkaW5jaW9hc8SDIGNhIEhhcmFwQWxiLCBhyJkgcHVuZS1vIGxhCm1hc8SDIGN1IG1pbmUsIGPEgyBtdWx0IHByZcibdWllyJl0ZSBvbXVsIGFjZXN0YSEKCuKAlCBCYSBzxIMtyJlpIHB1bsSDIHBvZnRhLW4gY3VpISByxINzcHVuc2UgU3DDom51bCBjdSBnbGFzIHLEg3V0xINjaW9zLgpBc3RhIG4tYciZIGZhY2UtbyBldSBkZS1hciBtYWkgZmkgZWwgcGUgY8OidCBlc3RlOyBkb2FyIG51LWkgZnJhdGUKY3UgbWFtYSwgc8SDLWwgcHVuIMOubiBjYXB1bCBjaW5zdGVpISBFdSDImXRpdSwgbW/ImXVsZSwgY8SDIHNsdWdhLWkKc2x1Z8SDIMiZaSBzdMSDcMOibnUtaSBzdMSDcMOibjsgcy1hIG3Dom50dWl0IHZvcmJhLiBOYSwgbmEsIG5hISBkLWFwb2kKcGVudHJ1IHZyZWRuaWNpYSBsdWkgbWkgbC1hIGRhdCB0YXRhLCBjxINjaSBhbHRmZWwgZGUgY2UgbC1hyJkgZmkKbHVhdCBjdSBtaW5lLiBIZWksIGhlaSEgTnUgyJl0acibaSBkLXZvYXN0csSDIGNlIHBvYW0tYSBkcmFjdWx1aSBlCkhhcmFwLUFsYiBhaXN0YSEgUMOibsSDIGwtYW0gZGF0IGxhIGJyYXpkxIMsIG1pLWFtIHN0dXBpdCBzdWZsZXR1bApjdSBkw6Juc3VsLiBOdW1haSBldSDDrmkgdmluIGRlIGhhYy4gVm9yYmEgY2VlYTogIkZyaWNhIHDEg3plyJl0ZQpib3N0xINuxINyaWEiLiBBbHQgc3TEg3DDom4gw65uIGxvY3VsIG1ldSBudSBtYWkgZmFjZSBicsOibnrEgyBjdQpIYXJhcC1BbGIsIGPDonQgw65pIGx1bWVhIMiZaSBwxINtw6JudHVsLiBDZSB0ZSBwb3RyaXZlyJl0aSwgbW/ImXVsZT8KQ3VtIHbEg2QgZXUsIGQtdGEgcHJlYSBpbnRyaSDDrm4gdm9pYSBzdXB1yJlpbG9yLiBEZS1hY2VlYSBudS3Im2kKZGF1IGNlcmJpaSBwaWV0cmUgc2N1bXBlIMiZaSB1csiZaWkgc8SDbMSDyJtpLiBNaWUgdW51aWEgyJl0aXUgY8SDCm51LW1pIHN1ZmzEgyBuaW1lbmUgw65uIGJvcsiZOiBjw6JuZCB2xINkIGPEgyBtw6LIm2EgZmFjZSBtxINyYXp1cmksIMibaS1vCnN0csOibmcgZGUgY29hZMSDLCBkZSBtxINuw6JuY8SDIMiZaSBtZXJlIHDEg2R1cmXIm2UsIGPEg2NpIG4tYXJlCsOubmNvdHJvLi4uIERhY8SDIMibaS1hIGFqdXRhIER1bW5lemV1IHPEgyBtxIMgcsOibmR1aWXImXRpIG1haSBkZWdyYWLEgwrDrm4gbG9jdWwgZC10YWxlLCDDrmkgdmVkZWEsIG1vyJl1bGUgZHJhZ8SDLCBjZSBwcmVmYWNlcmUgYXJlIHPEgyBpYQrDrm1wxINyxIPIm2lhOyBuLW9yIG1haSDImWVkZWEgbHVjcnVyaWxlIHRvdCBhyJlhIG1vYXJ0ZSBjdW0gc3VudC4KUGVudHJ1IGPEgyDImXRpaSB2b3JiYSBjZWVhOiAiT211bCBzZmluyJtlyJl0ZSBsb2N1bCEiLi4uIEZvc3QtYWkgyJlpCmQtdGEgbGEgdGluZXJlyJtlLCBudSB6aWMuIERhciBhY3VtIMOuyJtpIGNyZWQuIETEgywgYsSDdHLDom5lyJtlIG51LXM/CkN1bSBuLW9yIHN0YSB0cmViaWxlIGJhbHTEgyEKCsOObiBzZsOicsiZaXQsIFNww6JudWx1aSDDrmkgbWVyZ2VhIGd1cmEgY2EgcHVwxIN6YSwgZGUtYSBhbWXIm2l0IHBlCsOubXDEg3JhdHVsLCDDrm5jw6J0IGEgdWl0YXQgyJlpIGRlIEhhcmFwLUFsYiwgyJlpIGRlIGNlcmIsIMiZaSBkZSB0b3QuCgpGZXRlbGUgw65tcMSDcmF0dWx1aSDDrm5zxIMgcHJpdmVhdSBsYSB2ZXJpyJlvci4uLiBjdW0gcHJpdmXImXRlCmPDomluZWxlIGxhIG3DosibxIMsIMiZaSBsZSBlcmEgZHJhZyBjYSBzYXJlYS1uIG9jaGk6IHBlbnRydSBjxIMgbGUKc3B1bmVhIGluaW1hIGNlIG9tIGbEg3LEgyBkZSBsZWdlIGVzdGUgU3DDom51bC4gRGFyIGN1bSBlcmF1IHPEgwppYXPEgyBlbGUgY3Ugdm9yYmEgw65uYWludGVhIHRhdMSDbHVpIGxvcj8gU3DDom51bCBuLWF2ZWEgZGUgY2luZS4uLgpWb3JiYSBjZWVhOiAiR8SDc2lzZSB1biBzYXQgZsSDcsSDIGPDomluaSDImWkgc2UgcHJpbWJsYSBmxINyxIMgYsSDyJsiLgpDxIMgYWx0xIMsIGNlIHBvdCBzxIMgemljPwoKTGEgdnJvIGPDonRldmEgemlsZSBkdXDEgyBhc3RhLCDDrm1wxINyYXR1bCBmxINjdSB1biBvc3DEg8ibIGZvYXJ0ZQptYXJlIMOubiBjaW5zdGVhIG5lcG90dS1zxIN1LCBsYSBjYXJlIG9zcMSDyJsgYXUgZm9zdCBwb2Z0acibaSBjZWkKbWFpIHN0csSDbHVjacibaSBvYXNwZcibaTogw65tcMSDcmHIm2ksIGNyYWksIHZvaWV2b3ppLCBjxINwaXRhbmlpCm/ImXRpcmlsb3IsIG1haS1tYXJpaSBvcmHImWVsb3IgyJlpIGFsdGUgZmXIm2UgY2luc3RpdGUuCgrDjm4geml1YSBkZSBvc3DEg8ibLCBmZXRlbGUgw65tcMSDcmF0dWx1aSBzLWF1IHB1cyBjdSBydWfEg21pbnRlYSBwZQpsw6JuZ8SDIFNww6JuIHPEgyBkZWEgdm9pZSBsdWkgSGFyYXAtQWxiIGNhIHPEgyBzbHVqZWFzY8SDIMiZaSBlbCBsYQptYXPEgy4gU3DDom51bCwgbmVwdXTDom5kdS1sZSBzdHJpY2EgaGF0w6JydWwsIGNoZWFtxIMgcGUgSGFyYXAtQWxiCmRlIGZhyJvEgyBjdSBkw6Juc2VsZSDImWktaSDDrm52b2kgYWNlYXN0YSwgw65uc8SDIGN1IHRvY21hbMSDLCBjYSDDrm4KdG90IHRpbXB1bCBvc3DEg8ibdWx1aSBzxIMgc3RlYSBudW1haSBsYSBzcGF0ZWxlIHN0xINww6JudS1zxIN1IMiZaQpuaWNpIG3Eg2NhciBzxIMtyJlpIHJpZGljZSBvY2hpaSBsYSBjZWlsYWzIm2kgbWVzZW5pLCBjxIMgZGUgbC1vaQp2ZWRlYSBvYnLEg3puaWNpbmR1LXNlIGN1bXZhLCBhY29sbyBwZSBsb2Mgw65pIMiZaSB0YWkgY2FwdWwuCgrigJQgQXV6aXQtYWkgY2UgYW0gc3B1cywgc2x1Z8SDIG5ldHJlYm5pY8SDLCB6aXNlIFNww6JudWwsIGFyxIN0w6JuZApsdWkgSGFyYXAtQWxiIHTEg2nImXVsIHBhbG/ImXVsdWksIHBlIGNhcmUganVyYXNlIGNyZWRpbsibxIMgyJlpCnN1cHVuZXJlIFNww6JudWx1aSBsYSBpZciZaXJlYSBkaW4gZsOibnTDom7Egy4KCuKAlCBEYSwgc3TEg3DDom5lLCByxINzcHVuc2UgSGFyYXAtQWxiIGN1IHVtaWxpbsibxIM7IHN1bnQgZ2F0YSBsYQpwb3J1bmNhIGx1bWluxINyaWktdm9hc3RyZS4KCkZldGVsZSDDrm1wxINyYXR1bHVpIGF1IG11bMibdW1pdCBTcMOibnVsdWkgyJlpIHBlbnRydSBhdMOidGEuCgpBbXUsIHRvY21haSBwZSBjw6JuZCBlcmEgdGVtZWl1bCBtZXNlaSwgyJlpIG9hc3BlyJtpaSwgdG90IGd1c3TDom5kCnZpbnVsIGRlIGJ1biwgw65uY2VwdXNlIGEgc2UgY2hpdXJjaGl1bHVpIGPDonRlIG9sZWFjxIMsIG51bWFpIGlhY2EKbyBwYXPEg3JlIG3Eg2lhc3RyxIMgc2UgdmVkZSBixIN0w6JuZCBsYSBmZXJlYXN0csSDIMiZaSB6aWPDom5kIGN1IGdsYXMKbXVpZXJhdGljOgoK4oCUIE3Dom5jYcibaSwgYmXIm2kgyJlpIHbEgyB2ZXNlbGnIm2ksIGRhciBkZSBmYXRhIMOubXDEg3JhdHVsdWkgUm/ImSBuaWNpCm51IGfDom5kacibaSEKCkF0dW5jaSwgZGVvZGF0xIMsIHR1dHVyb3IgbWVzZW5pbG9yIHBlIGxvYyBsaSBzLWEgc3RyaWNhdCBjaGVmdWwKyJlpIGF1IMOubmNlcHV0IGEgdm9yYmkgY2FyZSBjZSDImXRpYSDImWkgY3VtIMOuaSBkdWNlYSBjYXB1bDogdW5paQpzcHVuZWF1IGPEgyDDrm1wxINyYXR1bCBSb8iZLCBhdsOibmQgaW5pbcSDIGhhaW7EgywgbnUgc2UgbWFpIHNhdHVyxIMgZGUKYSB2xINyc2Egc8OibmdlIG9tZW5lc2M7IGFsyJtpaSBzcHVuZWF1IGPEgyBmYXRhIGx1aSBlc3RlIG8KZmFybWF6b2FuxIMgY3VtcGxpdMSDLCDImWkgY8SDIGRpbiBwcmljaW5hIGVpIHNlIGZhYyBhdMOidGVhIGplcnRmZTsKYWzIm2lpIMOubnTEg3JlYXUgc3B1c2VsZSBjZWxvcmxhbMibaSwgemljw6JuZCBjxIMgY2hpYXIgZWEgYXIgZmkKdmVuaXQgw65uIGNoaXAgZGUgcGFzxINyZSBkZSBhIGLEg3R1dCBhY3VtIGxhIGZlcmVhc3RyxIMsIGNhIHPEgyBudQpsYXNlIMiZaSBhaWNpIGx1bWVhIMOubiBwYWNlLiBBbMibaWkgemljZWF1IGPEgywgb3JpY3VtIGFyIGZpLCBkYXIKcGFzxINyZWEgYWNlYXN0YSBudS1pIGx1Y3J1IGN1cmF0OyDImWkgY8SDIHRyZWJ1aWUgc8SDIGZpZSB1biB0cmltaXMKZGUgdW5kZXZhLCBudW1haSBwZW50cnUgYSBpc2NvZGkgY2FzZWxlIG9hbWVuaWxvci4gQWzIm2lpLCBtYWkKZnJpY2/ImWksIMOuyJlpIHN0dXBlYXUgw65uIHPDom4sIG1lbmluZC1vIGNhIHPEgyBzZSDDrm50b2FyY8SDIHBlIGNhcHVsCmFjZWx1aSBjYXJlIGEgdHJpbWlzLW8uIMOObiBzZsOicsiZaXQsIHVuaWkgc3B1bmVhdSDDrm50ci11biBmZWwsCmFsyJtpaSDDrm4gYWx0IGZlbCwgyJlpIG11bHRlIHNlIHppY2VhdSBwZSBzZWFtYSBmZXRlaSDDrm1wxINyYXR1bHVpClJvyJksIGRhciBudSBzZSDImXRpYSBjYXJlIGRpbiB0b2F0ZSBhY2VsZSB2b3JiZSBlc3RlIGNlYQphZGV2xINyYXTEgy4KClNww6JudWwsIGR1cMSDIGNlLWkgYXNjdWx0xIMgcGUgdG/Im2kgY3UgbHVhcmUtYW1pbnRlLCBjbMSDdGluxIMgZGluCmNhcCDImWkgemlzZToKCuKAlCBSxIN1IGUgY8OibmQgYWkgYSBmYWNlIHRvdCBjdSBvYW1lbmkgY2FyZSBzZSB0ZW0gyJlpIGRlIHVtYnJhCmxvciEgRC12b2FzdHLEgywgY2luc3RpyJtpIG9hc3BlyJtpLCBzZSB2ZWRlIGPEgyBwYciZdGXIm2kgYm9ib2NpLCBkZQpudSB2xIMgcHJpY2VwZcibaSBhbCBjdWkgZmFwdCBlIGFjZXN0YS4KCsiYaSBhdHVuY2kgU3DDom51bCByZXBlZGUgw67ImWkgYcibaW50ZciZdGUgcHJpdmlyaWxlIGFzdXByYSBsdWkKSGFyYXAtQWxiIMiZaSwgbnUgyJl0aXUgY3VtLCDDrmwgcHJpbmRlIHrDom1iaW5kLgoK4oCUIEHImWEuLi4gc2x1Z8SDIHZpY2xlYW7EgyBjZS1taSBlyJl0aSE/IFZhc8SDemljxIMsIHR1IGFpIMiZdGlpbsibxIMgZGUKYXN0YSDImWkgbnUgbWktYWkgc3B1cy4gQWN1bSBkZWdyYWLEgyBzxIMtbWkgYWR1Y2kgcGUgZmF0YQrDrm1wxINyYXR1bHVpIFJvyJksIGRlIHVuZGUgyJl0aWkgyJlpIGN1bSDDrmkgyJl0aSB0dS4gSGFpLCBwb3JuZciZdGUhCsiYaSBudSBjdW12YSBzxIMgZmFjaSBkZSBhbHRmZWwsIGPEgyB0ZS1haSBkdXMgZGUgcGUgZmHIm2EKcMSDbcOibnR1bHVpIQoKQXR1bmNpIEhhcmFwLUFsYiwgaWXImWluZCBwbGluIGRlIG3DomhuaXJlLCBzZSBkdWNlIMOubiBncmFqZCBsYQpjYWwgyJlpLCBuZXRlemluZHUtbCBwZSBjb2FtxIMgyJlpIHPEg3J1dMOibmR1LWwsIHppY2U6CgrigJQgRHJhZ3VsIG1ldSB0b3ZhcsSDyJksIGxhIGdyZWEgbmV2b2llIG0tYSBixINnYXQgaWFyIFNww6JudWwhIEFtdSBhCnNjb3JuaXQgYWx0YTogY2ljxIMgc8SDLWkgYWR1YyBwZSBmYXRhIMOubXDEg3JhdHVsdWkgUm/ImSBkZSB1bmRlLW9pCsiZdGkuIEFzdGEtaSBjdXJhdCB2b3JiYSBjZWVhOiAiUG9mdGltIHB1bmfEgyBsYSBtYXPEgywgZGFjxIMgyJtpLWFpCmFkdXMgZGUtYWNhc8SDLiIgU2UgdmVkZSBjxIMgbWkgcy1hIGFwcm9waWF0IGZ1bmlhIGxhIHBhci4gQ2luZQrImXRpZSBjZSBtaSBzLWEgbWFpIMOubnTDom1wbGEhIEN1IFNww6JudWwgdG90IGFtIGR1cy1vIGN1bSBhbQpkdXMtbywgY8OiaW5lLWPDomluZciZdGUsIHDDom7EgyBhY3VtLiBEYXIgY3Ugb211bCByb8iZIG51IMiZdGl1LCB6xIN1LApsYSBjw6J0IG1pLWEgc3RhIGNhcHVsLiDImC1hcG9pLCB1bmRlIHMtYSBmaSBnxINzaW5kIGFjZWwgw65tcMSDcmF0ClJvyJkgyJlpIGZhdGEgbHVpLCBjYXJlIGNpY8SDIGVzdGUgbyBmYXJtYXpvYW7EgyBjdW1wbGl0xIMsIG51bWFpCkNlbC1kZS1wZS1jb21vYXLEgyBhIGZpIMiZdGlpbmQhIFBhcmPEgyBkcmFjdWwgdnLEg2plyJl0ZSwgZGUgbi1hcHVjCmJpbmUgYSBzY8SDcGEgZGluIHVuYSDImWkgZGF1IHBlc3RlIGFsdGEhIFNlIHZlZGUgY8SDIG0tYSBuxINzY3V0Cm1hbWEgw65udHItdW4gY2VhcyByxIN1LCBzYXUgbnUgyJl0aXUgY3VtIHPEgyBtYWkgemljLCBjYSBzxIMgbnUKZ3JlyJllc2Mgw65uYWludGVhIGx1aSBEdW1uZXpldS4gTcSDIHByaWNlcCBldSB0YXJlIGJpbmUgY2UgYXIKdHJlYnVpIHPEgyBmYWMsIGNhIHPEgyBzZSBjdXJtZSBvZGF0xIMgdG9hdGUgYWNlc3RlLiBEYXIgbS1hbQpkZXByaW5zIGEgdMOicsOiaSBkdXDEgyBtaW5lIG8gdmlhyJvEgyB0aWPEg2xvYXPEgy4gVm9yYmEgY2VlYTogIlPEgyBudQpkZWEgRHVtbmV6ZXUgb211bHVpIGPDonQgcG9hdGUgZWwgc3VmZXJpIi4KCuKAlCBTdMSDcMOibmUsIHppc2UgYXR1bmNpIGNhbHVsLCBuZWNoZXrDom5kIGN1IMOubmZvY2FyZSwgbnUgdGUgbWFpCm9saWPEg2kgYXTDonRhISBEdXDEgyB2cmVtZSByZWEsIGEgZmkgZWwgdnJlb2RhdMSDIMiZaSBzZW5pbi4gRGFjJ2FyCnN0YSBjaW5ldmEgc8SDLciZaSBmYWPEgyBzZWFtxIMgZGUgdG9hdGUgY2VsZSwgY3VtIGNoaXRlyJl0aSBkLXRhLAphcG9pIGF0dW5jaSBhciB0cmVidWkgc8SDIHZlemkgdG90IG9hbWVuaSBtb3LIm2kgcGUgdG9hdGUKY8SDcsSDcmlsZS4uLiBOdSBmaSBhyJlhIGRlIG5lcsSDYmTEg3RvciEgRGUgdW5kZSDImXRpaSBjxIMgbnUgcy1vcgpzY2hpbWJhIGx1Y3J1cmlsZSDDrm4gYmluZSDImWkgcGVudHJ1IGQtdGE/IE9tdWwgZSBkYXRvciBzxIMgc2UKbHVwdGUgY8OidCBhIHB1dGVhIGN1IHZhbHVyaWxlIHZpZcibaWksIGPEg2NpIMiZdGlpIGPEgyBlc3RlIG8gdm9yYsSDOgoiTnUgYWR1Y2UgYW51bCBjZSBhZHVjZSBjZWFzdWwiLiBDw6JuZCBzdW50IHppbGUgyJlpIG5vcm9jLCB0cmVjaQpwcmluIGFwxIMgyJlpIHByaW4gZm9jIMiZaSBkaW4gdG9hdGUgc2NhcGkgbmV2xIN0xINtYXQuIFZvcmJhCmPDom50ZWN1bHVpOgoKRsSDLW3EgywgbWFtxIMsIGN1IG5vcm9jLArImGkgbcSDY2FyIG0tYXJ1bmPEgy1uIGZvYy4KTGFzJyBwZSBtaW5lLCBzdMSDcMOibmUsIGPEgyDImXRpdSBldSBwZSB1bmRlIHRlLW9pIGR1Y2UgbGEKw65tcMSDcmF0dWwgUm/ImTogcGVudHJ1IGPEgyBtLWF1IG1haSBwdXJ0YXQgbyBkYXTEgyBwxINjYXRlbGUgcGUKYWNvbG8gY3UgdGF0dS10xIN1LCDDrm4gdGluZXJlyJtpbGUgbHVpLiBIYWksIMOubmNhbGVjxIMgcGUgbWluZSDImWkKyJtpbmUtdGUgYmluZSwgY8SDIGFjdW0gYW0gc8SDLW1pIGFyxIN0IHB1dGVyaWxlIGNoaWFyIGRlIGFpY2ksIGRlCnBlIGxvYywgw65uIGNpdWRhIFNww6JudWx1aSwgY2Egc8SDLWkgcHVuZW0gdmVuaW4gbGEgaW5pbcSDLgoKSGFyYXAtQWxiIGF0dW5jaSDDrm5jYWxlY8SDLCDImWkgY2FsdWwsIG5lY2hlesOibmQgbyBkYXTEgyBwdXRlcm5pYywKemJvYXLEgyBjdSBkw6Juc3VsOgoKw45uIMOubmFsdHVsIGNlcnVsdWksClbEg3pkdWh1bCBwxINtw6JudHVsdWkKyJlpIG8gaWEgZGUtYSBjdXJtZXppyJk6CkRlIGxhIG5vdXJpIGPEg3RyZSBzb2FyZSwKUHJpbnRyZSBsdW7EgyDImWkgbHVjZWZlcmksClN0ZWxlIG3Dom5kcmUgbHVjaXRvYXJlLgrImGkgYXBvaSwgZGUgbGEgbyB2cmVtZSwgw65uY2VwZSBhIHNlIGzEg3NhIGxpbiBjYSB2w6JudHVsLCDImWkgbHXDom5kCmRlLWEgbHVuZ3VsIHDEg23Dom50dWx1aSwgbWVyZyBzcHJlIMOubXDEg3LEg8ibaWUsIER1bW5lemV1IHPEgyBuZSDIm2llLApjxIMgY3V2w6JudHVsIGRpbiBwb3Zlc3RlLCDDrm5haW50ZSBtdWx0IG1haSBlc3RlLgoKRGFyIGlhIHPEgyB2ZWRlbSwgY2Ugc2UgbWFpIHBldHJlY2UgbGEgbWFzxIMgZHVwxIMgZHVjZXJlYSBsdWkKSGFyYXAtQWxiPwoK4oCUIEhlaSwgaGVpISB6aXNlIFNww6JudWwgw65uIHNpbmUsIHRyZW11csOibmQgZGUgY2l1ZMSDOiBudSB0ZS1hbQrImXRpdXQgZXUgY8SDLW1pIGXImXRpIGRlIGFjZciZdGlhLCBjxIMgZGUgbXVsdCDDrsibaSBmxINjZWFtIGZlbHVsIS4uLgpEYXIgdHLEg2luZCDImWkgbmVtdXJpbmQsIHRlLW9pIHNsdWppIGV1LCBtxINpIGJhZGVvIS4uLiBQYWxvyJl1bAppc3RhIGFyZSBzxIMtyJtpIMiZdGllIGRlIMiZdGlyZS4uLiBFaSwgdmVkZcibaSwgbW/ImXVsZSDImWkgY2luc3RpyJtpCm1lc2VuaSwgY3VtIGhyxINuZciZdGkgcGUgZHJhY3VsLCBmxINyxIMgc8SDIMiZdGlpIGN1IGNpbmUgYWkgZGUtYQpmYWNlPyBEYWPEgyBudS1zIMiZaSBldSB1biBwdWnImW9yIGRlIG9tIMOubiBmZWx1bCBtZXUsIGRhciB0b3QgbS1hCnRyYXMgSGFyYXAtQWxiIHBlIHNmb2FyxIMhIEJpbmUtYSB6aXMgY2luZS1hIHppczogIkPEgyB1bmRlLWkKY2V0YXRlYSBtYWkgdGFyZSwgYWNvbG8gYmF0ZSBkcmFjdWwgcsSDemJvaSBtYWkgcHV0ZXJuaWMiLgoKw45uIHNmw6JyyJlpdCwgw65tcMSDcmF0dWwsIGZldGVsZSBzYWxlIMiZaSB0b8ibaSBvYXNwZcibaWkgcsSDbWFzZXLEgwrDrm5jcmVtZW5pyJtpLCBTcMOibnVsLCBib2Ryb2fEg25pbmQgZGluIGd1csSDLCBudSDImXRpYSBjdW0gc8SDLciZaQphc2N1bmTEgyB1cmEsIGlhcsSDIEhhcmFwLUFsYiwgw65uZ3Jpaml0IGRlIGNlIGkgcy1hciBtYWkgcHV0ZWEKw65udMOibXBsYSDDrm4gdXJtxIMsIG1lcmdlYSB0b3Qgw65uYWludGUgcHJpbiBsb2N1cmkgcHVzdGlpIMiZaSBjdQpncmV1IGRlIHN0csSDYsSDdHV0LgoKyJhpIGPDom5kIHPEgyB0cmVhY8SDIHVuIHBvZCBwZXN0ZSBvIGFwxIMgbWFyZSwgaWFjYSBvIG51bnTEgyBkZQpmdXJuaWNpIHRyZWNlYSDImWkgZWEgdG9jbWFpIGF0dW5jaSBwb2R1bC4gQ2Ugc8SDIGZhY8SDIEhhcmFwQWxiID8KU3TEgyBlbCBvbGVhY8SDIMiZaSBzZSBzZsSDdHVpZciZdGUgY3UgZ8OibmR1bDogIlPEgyB0cmVjIHBlc3RlCmTDom5zZWxlLCBhbSBzxIMgb21vciBvIG11bMibaW1lOyBzxIMgZGF1IHByaW4gYXDEgywgbcSDIHRlbSBjxIMgbS1vaQrDrm5lY2EsIGN1IGNhbCBjdSB0b3QuIERhciB0b3QgbWFpIGJpbmUgc8SDIGRhdSBwcmluIGFwxIMsIGN1bSBhIGRhCkR1bW5lemV1LCBkZWPDonQgc8SDIGN1cm0gdmlhyJthIGF0w6J0b3IgZ8OienVsacibZSBuZXZpbm92YXRlIi4gyJhpCnppY8OibmQgRG9hbW5lLWFqdXTEgywgc2UgYXJ1bmPEgyBjdSBjYWx1bCDDrm4gYXDEgywgbyB0cmVjZSDDrm5vdApkaW5jb2xvLCBsYSBjZWxhIG1hbCwgZsSDcsSDIHByaW1lamRpZSDImWkgYXBvaSDDrsiZaSBpYSBkcnVtdWwKw65uYWludGUuIMiYaSBjdW0gbWVyZ2VhIGVsLCBudW1haSBpYWNhIGkgc2Ugw65uZsSDyJtpyJlhesSDIG8gZnVybmljxIMKemJ1csSDdG9hcmUgemljw6JuZDoKCuKAlCBIYXJhcC1BbGIsIGZpaW5kY8SDIGXImXRpIGHImWEgZGUgYnVuLCBkZSDIm2ktYSBmb3N0IG1pbMSDIGRlIHZpYcibYQpub2FzdHLEgywgY8OibmQgdHJlY2VhbSBwZSBwb2QsIMiZaSBudSBuZS1haSBzdHJpY2F0IHZlc2VsaWEsIHZyZWF1CnPEgy3Im2kgZmFjIMiZaSBldSB1biBiaW5lOiBuYS3Im2kgYXJpcGEgYXN0YSwgyJlpIGPDom5kIMOuaSBhdmVhCnZyb2RhdMSDIG5ldm9pZSBkZSBtaW5lLCBzxIMgZGFpIGZvYyBhcmlwZWksIMiZaSBhdHVuY2kgZXUgw65tcHJldW7EgwpjdSB0b3QgbmVhbXVsIG1ldSBhdmVtIHPEgy3Im2kgdmVuaW0gw65uIGFqdXRvci4KCkhhcmFwLUFsYiwgc3Ryw6JuZ8OibmQgYXJpcGEgY3Ugw65uZ3JpamlyZSwgbXVsyJt1bWXImXRlIGZ1cm5pY2lpCnBlbnRydSBhanV0b3J1bCBmxINnxINkdWl0IMiZaSBhcG9pIHBvcm5lyJl0ZSB0b3Qgw65uYWludGUuCgrImGkgbWFpIG1lcmdlIGVsIGPDonQgbWVyZ2UsIMiZaSBudW1haSBpYWNhIGNlIGF1ZGUgbyBiw6J6w6JpdHVyxIMKw65uxINkdciZaXTEgy4gU2UgdWl0xIMgZWwgw65uIGRyZWFwdGEsIG51IHZlZGUgbmltaWNhOyBzZSB1aXTEgyDDrm4Kc3TDom5nYSwgbmljaSBhdMOidGE7IMiZaSBjw6JuZCBzZSB1aXTEgyDDrm4gc3VzLCBjZSBzxIMgdmFkxIM/IFVuIHJvaQpkZSBhbGJpbmUgc2Ugw65udsOicnRlYSDDrm4gemJvciBwZSBkZWFzdXByYSBjYXB1bHVpIHPEg3UgyJlpIHVtYmxhdQpiZXptZXRpY2UgZGUgY29sbyBww6JuxIMgY29sbywgbmVhdsOibmQgbG9jIHVuZGUgc8SDIHNlIGHImWV6ZS4KSGFyYXAtQWxiLCB2xIN6w6JuZHUtbGUgYciZYSwgaSBzZSBmYWNlIG1pbMSDIGRlIGTDom5zZWxlIMiZaSwKbHXDom5kdS3ImWkgcMSDbMSDcmlhIGRpbiBjYXAsIG8gcHVuZSBwZSBpYXJixIMgbGEgcMSDbcOibnQsIGN1IGd1cmEtbgpzdXMsIMiZaSBhcG9pIGVsIHNlIGTEgyDDrm50ci1vIHBhcnRlLiBBdHVuY2ksIGJ1Y3VyaWEgYWxiaW5lbG9yOwpzZSBsYXPEgyBqb3MgY3UgdG9hdGVsZSDImWkgc2UgYWR1bsSDIGNpb3RjxIMgw65uIHDEg2zEg3JpZS4gSGFyYXAtQWxiLAphZmzDom5kdS1zZSBjdSBwxINyZXJlIGRlIGJpbmUgZGVzcHJlIGFzdGEsIGFsZWFyZ8SDIMOubiBkcmVhcHRhIMiZaQrDrm4gc3TDom5nYSDImWkgbnUgc2UgbGFzxIMgcMOibsSDIGNlIGfEg3NlyJl0ZS11biBidciZdGloYW4gcHV0cmVnxINpb3MsCsOubCBzY29iZciZdGUgY3UgY2UgcG9hdGUgyJlpLWkgZmFjZSB1cmRpbmnImTsgZHVwxIMgYWNlZWEgYciZYXrEgwpuaciZdGUgyJtlcHXImWkgw65udHItw65uc3VsLCDDrmwgZnJlYWPEgyBwZSBkaW7Eg3VudHJ1IGN1IGPEg3R1yJluaWPEgywgY3UKc3VsY2luxIMsIGN1IG3Eg3TEg2NpdW5lLCBjdSBwb2FsYSBzw6JudMSDLU3Eg3JpZWkgyJlpIGN1IGFsdGUgYnVydWllbmUKbWlyb3NpdG9hcmUgyJlpIHByaWVsbmljZSBhbGJpbmVsb3IgyJlpIGFwb2ksIGx1w6JuZHUtbCBwZSB1bcSDciwgc2UKZHVjZSBsYSByb2ksIHLEg3N0b2FybsSDIGFsYmluZWxlIGZydW11yJllbCBkaW4gcMSDbMSDcmllIMOubgpidciZdGloYW4sIMOubCDDrm50b2FyY2UgYmluaciZb3IgY3UgZ3VyYSDDrm4gam9zLCDDrmkgcHVuZSBkZWFzdXByYQpuaciZdGUgY2FwdMSDbGFuaSwgY2Egc8SDIG51IHLEg3piYXTEgyBzb2FyZWxlIMiZaSBwbG9haWEgw65ubMSDdW50cnUsCsiZaSBhcG9pLCBsxINzw6JuZHUtbCBhY29sbyBwZSBjw6JtcCwgw65udHJlIGZsb3JpLCDDrsiZaSBjYXV0xIMgZGUgZHJ1bS4KCsiYaSBjdW0gbWVyZ2VhIGVsLCBtdWzIm3VtaXQgw65uIHNpbmUgcGVudHJ1IGFjZWFzdMSDIGZhY2VyZSBkZQpiaW5lLCBudW1haSBpYWNhIGkgc2Ugw65uZsSDyJtpyJlhesSDIMOubmFpbnRlIGNyxINpYXNhIGFsYmluZWxvciwKemljw6JuZHUtaToKCuKAlCBIYXJhcC1BbGIsIHBlbnRydSBjxIMgZciZdGkgYciZYSBkZSBidW4gyJlpIHRlLWFpIG9zdGVuaXQgZGUgbmUtYWkKZsSDY3V0IGFkxINwb3N0LCB2cmVhdSBzxIMtyJtpIGZhYyDImWkgZXUgdW4gYmluZSDDrm4gdmlhyJthIG1lYTogbmEtyJtpCmFyaXBhIGFzdGEgyJlpLCBjw6JuZCDDrmkgYXZlYSB2cmVvZGF0xIMgbmV2b2llIGRlIG1pbmUsIGFwcmluZGUtbywKyJlpIGV1IMOubmRhdMSDIGFtIHPEgy3Im2kgdmluIMOubnRydSBhanV0b3IuCgpIYXJhcC1BbGIsIGx1w6JuZCBhcmlwYSBjdSBidWN1cmllLCBvIHN0csOibmdlIGN1IMOubmdyaWppcmU7IGFwb2ksCm11bMibdW1pbmQgY3LEg2llc2VpIHBlbnRydSBhanV0b3J1bCBmxINnxINkdWl0LCBwb3JuZciZdGUsCnVybcOibmR1LciZaSBjYWxlYSB0b3Qgw65uYWludGUuCgpNYWkgbWVyZ2UgZWwgY8OidCBtZXJnZSDImWksIGPDom5kIGxhIHBvYWxlbGUgdW51aSBjb2RydSwgbnVtYWkKaWFjYSBjZSB2ZWRlIG8gZGloYW5pZSBkZSBvbSwgY2FyZSBzZSBww6JycMOibGVhIHBlIGzDom5nxIMgdW4gZm9jCmRlIGRvdcSDemVjaSDImWkgcGF0cnUgZGUgc3TDom5qZW5pIGRlIGxlbW5lIMiZaSB0b3QgYXR1bmNpIHN0cmlnYSwKY8OidCDDrmkgbHVhIGd1cmEsIGPEgyBtb2FyZSBkZSBmcmlnLiDImGktYXBvaSwgYWZhcsSDIGRlIGFjZWFzdGEsCm9tdWwgYWNlbGEgZXJhIGNldmEgZGUgc3BlcmlhdDsgYXZlYSBuaciZdGUgdXJlY2hpIGNsxINwxIN1Z2UgyJlpCm5pyJl0ZSBidXpvYWllIGdyb2FzZSDImWkgZMSDYsSDbMSDemF0ZS4gyJhpIGPDom5kIHN1ZmxhIGN1IGTDom5zZWxlLApjZWEgZGVhc3VwcmEgc2UgcsSDc2Zyw6JuZ2VhIMOubiBzdXMgcGVzdGUgc2PEg2bDonJsaWEgY2FwdWx1aSwgaWFyCmNlYSBkZWRlc3VidCBhdMOicm5hIMOubiBqb3MsIGRlLWkgYWNvcGVyZWEgcMOibnRlY2VsZS4gyJhpLCBvcmkgcGUKY2Ugc2Ugb3ByZWEgc3VmbGFyZWEgbHVpLCBzZSBwdW5lYSBwcm9tb3JvYWNhIG1haSBncm9hc8SDIGRlLW8KcGFsbcSDLiBOdSBlcmEgY2hpcCBzxIMgdGUgYXByb3BpaSBkZSBkw6Juc3VsLCBjxIMgYciZYSB0cmVtdXJhIGRlCnRhcmUsIGRlIHBhcmPEgy1sIHpnaGlodWlhIGRyYWN1bC4gyJhpIGRhYy1hciBmaSB0cmVtdXJhdCBudW1haQplbCwgY2UgyJtpLWFyIGZpIGZvc3Q/IERhciB0b2F0xIMgc3VmbGFyZWEgyJlpIGbEg3B0dXJhIGRlCnByaW1wcmVqdXIgw65pIMibaW5lYXUgaGFuZ3VsOiB2w6JudHVsIGdlbWVhIGNhIHVuIG5lYnVuLCBjb3BhY2lpCmRpbiBwxINkdXJlIHNlIHbEg2ljxINyYXUsIHBpZXRyZWxlIMibaXBhdSwgdnJlYXNjdXJpbGUgyJtpdWlhdSDImWkKY2hpYXIgbGVtbmVsZSBkZSBwZSBmb2MgcG9jbmVhdSBkZSBnZXIuIElhcsSDIHZldmVyacibZWxlLApnxIN2b3pkaXRlIHVuYSBwZXN0ZSBhbHRhIMOubiBzY29yYnVyaSBkZSBjb3BhY2ksIHN1ZmxhdSDDrm4gdW5naGlpCsiZaSBwbMOibmdlYXUgw65uIHB1bW5pLCBibGVzdGVtw6JuZHUtyJlpIGNlYXN1bCDDrm4gY2FyZSBzLWF1IG7Eg3NjdXQuCk3EgyByb2csIGZvYyBkZSBnZXIgZXJhOiBjZSBzxIMgdsSDIHNwdW4gbWFpIG11bHQhIEhhcmFwQWxiLCBudW1haQpvIMibw6JyxIMgY8OidCBhIHN0YXQgZGUgcy1hIHVpdGF0LCBhIGbEg2N1dCDIm3VyyJt1cmkgbGEgZ3VyxIMgyJlpLApuZXB1dMOibmR1LciZaSBzdMSDcMOibmkgcsOic3VsLCB6aXNlIGN1IG1pcmFyZToKCuKAlCBNdWx0ZSBtYWkgdmVkZSBvbXVsIGFjZXN0YSBjw6J0IHRyxINpZciZdGUhIE3Eg2kgdGFydG9ydWxlLCBudQptw6JuY2EgaGFyYW0gyJlpIHNwdW5lIGRyZXB0LCB0dSBlyJl0aSBHZXJpbMSDPyBByJnEgy1pIGPEgyB0YWNpPy4uLiBUdQp0cmVidWllIHPEgyBmaWksIHBlbnRydSBjxIMgyJlpIGZvY3VsIMOubmdoZWHIm8SDIGzDom5nxIMgdGluZSwgZGUKYXJ6dWxpdSBjZSBlyJl0aS4KCuKAlCBSw6J6aSB0dSwgcsOiemksIEhhcmFwLUFsYiwgemlzZSBhdHVuY2kgR2VyaWzEgyB0cmVtdXLDom5kLCBkYXIsCnVuZGUgbWVyZ2ksIGbEg3LEgyBtaW5lIG4tYWkgc8SDIHBvyJtpIGZhY2UgbmltaWNhLgoK4oCUIEhhaSDImWkgdHUgY3UgbWluZSwgZGFjxIMgdnJlaSwgemlzZSBIYXJhcC1BbGI7IGRlLWFiaWEgdGUtaSBtYWkKw65uY8SDbHppIG1lcmfDom5kIGxhIGRydW0sIGPEg2NpIG51IGUgYmluZSBjw6JuZCBzdGFpIGxvY3VsdWkuCgpHZXJpbMSDIGF0dW5jaSBzZSBpYSBjdSBIYXJhcC1BbGIgyJlpIHBvcm5lc2Mgw65tcHJldW7Egy4gyJhpIG1lcmfDom5kCmVpIG8gYnVjYXTEgyDDrm5haW50ZSwgSGFyYXAtQWxiIHZlZGUgYWx0xIMgZHLEg2PEg3JpZSDImWkgbWFpIG1hcmU6IG8KbmFtaWzEgyBkZSBvbSBtw6JuY2EgYnJhemRlbGUgZGUgcGUgdXJtYSBhIDI0IGRlIHBsdWd1cmkgyJlpIHRvdAphdHVuY2kgc3RyaWdhIMOubiBndXJhIG1hcmUgY8SDIGNyYXDEgyBkZSBmb2FtZS4KCuKAlCBFaSwgYXBvaSBzxIMgbnUgYnVmbmXImXRpIGRlIHLDonM/IHppc2UgSGFyYXAtQWxiLiBNxINpLCBtxINpLCBtxINpIQpjxIMgbXVsdGUtyJtpIG1haSB2xINkIG9jaGlpISBQZXNlbW5lIGMtYWlzdGEtaSBGbMSDbcOibnppbMSDLApmb2FtZXRlYSwgc2FjIGbEg3LEgyBmdW5kIHNhdSBjaW5lIG1haSDImXRpZSBjZSBwcmljb3BzZWFsxIMgYSBmaSwKZGUgbnUtbCBwb2F0ZSBzxIN0dXJhIG5pY2kgcMSDbcOibnR1bC4KCuKAlCBSw6J6aSB0dSwgcsOiemksIEhhcmFwLUFsYiwgemljZSBhdHVuY2kgRmzEg23Dom56aWzEgywgZGFyLCB1bmRlCm1lcmdlyJtpIHZvaSwgZsSDcsSDIG1pbmUgbi1hdmXIm2kgc8SDIHB1dGXIm2kgZmFjZSBuaWNpIG8gaXNwcmF2xIMuCgrigJQgRGFjxIMtaSBhyJlhLCBoYWkgyJlpIHR1IGN1IG5vaSwgemlzZSBIYXJhcC1BbGIsIGPEgyBkb2FyIG4tYW0gYQp0ZSBkdWNlIMOubiBzcGluYXJlLgoKRmzEg23Dom56aWzEgyBhdHVuY2kgc2UgaWEgZHVwxIMgSGFyYXAtQWxiIMiZaSBwb3JuZXNjIHR1c3RyZWkKw65uYWludGUuIMiYaSBtYWkgbWVyZ8OibmQgZWkgbyBwb3N0YXTEgywgbnVtYWkgaWFjYSBIYXJhcC1BbGIgdmVkZQphbHTEgyBtaW51bsSDyJtpZSDImWkgbWFpIG1hcmU6IG8gYXLEg3RhcmUgZGUgb20gYsSDdXNlIGFwYSBkZSBsYSAyNApkZSBpYXp1cmkgyJlpIG8gZ8OicmzEgyBwZSBjYXJlIHVtYmxhdSBudW1haSA1MDAgZGUgbW9yaSDImWkgdG90CmF0dW5jaSBzdHJpZ2Egw65uIGd1cmEgbWFyZSBjxIMgc2UgdXN1Y8SDIGRlIHNldGUuCgrigJQgTcSDaSwgZGEnIGFsIGRyYWN1bHVpIG9uw6BuaWUgZGUgb20gZSDImWkgYWNlc3RhISB6aXNlIEhhcmFwQWxiLgpHcm96YXYgYnVyZMSDaGFuIMiZaSBuZXPEg8ibaW9zIGfDonRsZWosIGRlIG51IHBvdCBzxIMtaSBwb3RvbGVhc2PEgwpzZXRlYSBuaWNpIGl6dm9hcmVsZSBwxINtw6JudHVsdWk7IG1hcmUgZ2hpb2wgZGUgYXDEgyB0cmVidWllIHPEgwpmaWUgw65uIG1hyJtlbGUgbHVpISBTZSB2ZWRlIGPEgyBhY2VzdGEtaSBwcsSDcMSDZGVuaWEgYXBlbG9yLAp2ZXN0aXR1bCBTZXRpbMSDLCBmaXVsIFNlY2V0ZWksIG7Eg3NjdXQgw65uIHpvZGlhIHJhyJtlbG9yIMiZaQrDrm1wb2RvYml0IGN1IGRhcnVsIHN1cHR1bHVpLgoK4oCUIFLDonppIHR1LCByw6J6aSwgSGFyYXAtQWxiLCB6aXNlIGF0dW5jaSBTZXRpbMSDLCBjxINydWlhIMOubmNlcHUKYS1pIMibw6LImW5pIGFwYSBwZSBuxINyaSDImWkgcGUgdXJlY2hpLCBjYSBwZSBuaciZdGUgbMSDcHRvYWNlIGRlCm1vcmksIGRhciwgdW5kZSB2xIMgZHVjZcibaSB2b2ksIGbEg3LEgyBtaW5lIGRlZ2VhYmEgdsSDIGR1Y2XIm2kuCgrigJQgSGFpIMiZaSB0dSBjdSBub2ksIGRhY8SDIHZyZWksIHppc2UgSGFyYXAtQWxiOyBkZS1hYmlhIG51IHRlLWFpCm1haSBsaW5jaXVyaSBhdMOidGEgw65uIGNlbGUgYXBlLCDDrmkgc2PEg3BhIGRlIGJsZXN0ZW11bCBicm9hyJl0ZWxvcgrImWktaSBkYSByxINnYXogbW9yaWxvciBzxIMgdW1ibGUsIGPEgyBkZXN0dWwgyJtpLWFpIGbEg2N1dCBtZW5kcmVsZQpww6JuxIMgYWN1bS4gQ2UsIERvYW1uZSBpYXJ0xIMtbcSDLCDDrmkgZmFjZSBicm9hyJl0ZSDDrm4gcMOibnRlY2UgZGUKYXTDonRhIGFwxIMhCgpTZXRpbMSDIGF0dW5jaSBzZSBpYSBkdXDEgyBIYXJhcC1BbGIgyJlpIHBvcm5lc2MgdHVzcGF0cnUgw65uYWludGUuCsiYaSBtYWkgbWVyZ8OibmQgZWkgbyBidWNhdMSDLCBudW1haSBpYWNhIGNlIHZlZGUgSGFyYXAtQWxiIGFsdMSDCm1pbnVuxIPIm2llIMiZaSBtYWkgbWludW5hdMSDOiBvIHNjaGltb25vc2l0dXLEgyBkZSBvbSBhdmVhIMOubiBmcnVudGUKbnVtYWkgdW4gb2NoaSwgbWFyZSBjw6J0IG8gc2l0xIMgyJlpLCBjw6JuZCDDrmwgZGVzY2hpZGVhLCBudSB2ZWRlYQpuaW1pY2E7IGRhIGNoaW9yIHBlc3RlIGNlIGFwdWNhLiBJYXLEgyBjw6JuZCDDrmwgyJtpbmVhIMOubmNoaXMsIGRhcgpmaWUgemksIGRhciBmaWUgbm9hcHRlLCBzcHVuZWEgY8SDIHZlZGUgY3UgZMOibnN1bCDDrm4gbcSDcnVudGFpZWxlCnDEg23Dom50dWx1aS4KCuKAlCBJYWNhLCDDrm5jZXB1IGVsIGEgcsSDY25pIGNhIHVuIHNtaW50aXQsIHRvYXRlIGx1Y3J1cmlsZSBtaSBzZQphcmF0xIMgZ8SDdXJpdGUsIGNhIHNpdGnImWNhLCDImWkgc3RyxIN2ZXppaSwgY2EgYXBhIGNlYSBsaW1wZWRlOwpkZWFzdXByYSBjYXB1bHVpIG1ldSB2xINkIG8gbXVsyJtpbWUgbmVudW3Eg3JhdMSDIGRlIHbEg3p1dGUgyJlpCm5ldsSDenV0ZTsgdsSDZCBpYXJiYSBjdW0gY3JlyJl0ZSBkaW4gcMSDbcOibnQ7IHbEg2QgY3VtIHNlCnJvc3RvZ29sZciZdGUgc29hcmVsZSBkdXDEgyBkZWFsLCBsdW5hIMiZaSBzdGVsZWxlIGN1ZnVuZGF0ZSDDrm4KbWFyZTsgY29wYWNpaSBjdSB2w6JyZnVsIMOubiBqb3MsIHZpdGVsZSBjdSBwaWNpb2FyZWxlIMOubiBzdXMgyJlpCm9hbWVuaWkgdW1ibMOibmQgY3UgY2FwdWwgw65udHJlIHVtZXJlOyB2xINkLCDDrm4gc2bDonLImWl0LCBjZWVhIGNlCm4tYciZIG1haSBkb3JpIHPEgyB2YWTEgyBuaW1lbmUsIHBlbnRydSBhLciZaSBvc3RlbmkgdmVkZXJlYTogdsSDZApuaciZdGUgZ3VyaSBjxINzY2F0ZSB1aXTDom5kdS1zZSBsYSBtaW5lIMiZaSBudS1taSBwb3QgZGEgc2VhbWEgZGUKY2UgdsSDIG1pcmHIm2kgYciZYSwgbWlyYS12LWHIm2kgZGUuLi4gZnJ1bXVzZcibZS12xIMhCgpIYXJhcC1BbGIgYXR1bmNpIHNlIGJhdGUgY3UgbcOibmEgcGVzdGUgZ3VyxIMgyJlpIHppY2U6IOKAlCBEb2FtbmUKZmVyZciZdGUgZGUgb211bCBuZWJ1biwgY8SDIHRhcmUtaSBkZSBqxINsaXQsIHPEg3JtYW51bCEgUGUgZGUtbwpwYXJ0ZSDDrsibaSB2aW5lIGEgcsOiZGUgyJlpIHBlIGRlIGFsdGEgw67Im2kgdmluZSBhLWwgcGzDom5nZS4gRGFyIHNlCnZlZGUgY8SDIGHImWEgbC1hIGzEg3NhdCBEdW1uZXpldS4gUG9hdGUgY8SDIGFjZXN0YS1pIHZlc3RpdHVsCk9jaGlsxIMsIGZyYXRlIGN1IE9yYmlsxIMsIHbEg3IgcHJpbWFyZSBjdSBDaGlvcmlsxIMsIG5lcG90IGRlIHNvcsSDCmx1aSBQw6JuZGlsxIMsIGRpbiBzYXQgZGUgbGEgQ2hpdGlsxIMsIHBlc3RlIGRydW0gZGUgTmltZXJpbMSDLiBPcmkKZGluIHTDonJnIGRlIGxhIFPEgy1sLWNhyJtpLCBtZWdpZciZIGN1IEPEg3V0YcibaSDImWkgZGUgdXJtxIMgbnUtaSBtYWkKZGHIm2kuIE3EgyByb2csIHVudS1pIE9jaGlsxIMgcGUgZmHIm2EgcMSDbcOibnR1bHVpLCBjYXJlIHZlZGUgdG9hdGUKyJlpIHBlIHRvyJtpIGFsdGZlbCBkZSBjdW0gdmVkZSBsdW1lYSBjZWFsYWx0xIM7IG51bWFpIHBlIHNpbmUgbnUKc2UgdmVkZSBjw6J0IGUgZGUgZnJ1bXXImWVsLiBQYXJjxIMtaSB1biBib8ibLCBjaGlsaW1ib8ibIGJvyJtpdCwgw65uCmZydW50ZSBjdSB1biBvY2hpLCBudW1haSBzxIMgbnUgZmllIGRlIGRlb2NoaSEKCuKAlCBSw6J6aSB0dSwgcsOiemksIEhhcmFwLUFsYiwgemlzZSBhdHVuY2kgT2NoaWzEgywgdWl0w6JuZHUtc2UKw65uY2hpb3JjaGlvyJlhdCwgZGFyLCB1bmRlIHRlIGR1Y2ksIGbEg3LEgyBkZSBtaW5lIHLEg3UgYXJlIHPEgy3Im2kKY2FkxIMuIEZhdGEgw65tcMSDcmF0dWx1aSBSb8iZIG51IHNlIGNhcMSDdMSDIGHImWEgZGUgbGVzbmUgY3VtIGNyZXppCnR1LiBEaW4gZ2FyZHVsIE9hbmNlaSDIm2ktYSBkYS1vIMOubXDEg3JhdHVsLCBkYWPEgyBuLW9pIGZpIMiZaSBldQpwZS1hY29sby4KCuKAlCBIYWkgyJlpIHR1IGN1IG5vaSwgZGFjxIMgdnJlaSwgemlzZSBIYXJhcC1BbGIsIGPEgyBkb2FyIG4tYXZlbSBhCnRlIGR1Y2UgZGUgbcOibsSDLCBjYSBwZSB1biBvcmIuCgpPY2hpbMSDIGF0dW5jaSBzZSBpYSDImWkgZWwgZHVwxIMgSGFyYXAtQWxiIMiZaSBwb3JuZXNjIHR1c2NpbmNpCsOubmFpbnRlLiDImGkgbWFpIG1lcmfDom5kIGVpIG8gYnVjYXTEgywgbnVtYWkgaWFjYSBjZSB2ZWRlCkhhcmFwLUFsYiBhbHTEgyBiw6J6ZMOiZ2FuaWUgyJlpIG1haSDImWk6IG8gcG9jaXRhbmllIGRlIG9tIHVtYmxhIGN1CmFyY3VsIGR1cMSDIHbDom5hdCBwxINzxINyaS4gyJgtYXBvaSwgY2hpdGnIm2kgY8SDIG51bWFpIMOubiBhcmMgc2UKw65uY2hlaWEgdG90IG1lyJl0ZciZdWd1bCDImWkgcHV0ZXJlYSBvbXVsdWkgYWNlbHVpYT8gyJppLWFpIGfEg3NpdCEKQXZlYSB1biBtZciZdGXImXVnIG1haSBkcsSDY29zIMiZaSBvIHB1dGVyZSBtYWkgcGUgc3VzIGRlY8OidCDDrsiZaQpwb2F0ZSBkcmFjdWwgw65uY2hpcHVpOiBjw6JuZCB2b2lhLCBhyJlhIHNlIGzEg8ibZWEgZGUgdGFyZSwgZGUKY3VwcmluZGVhIHDEg23Dom50dWwgw65uIGJyYcibZS4gyJhpIGFsdMSDIGRhdMSDLCBhyJlhIHNlIGRlyJlpcmEgyJlpIHNlCmx1bmdlYSBkZSBncm96YXYsIGRlIGFqdW5nZWEgY3UgbcOibmEgbGEgbHVuxIMsIGxhIHN0ZWxlLCBsYSBzb2FyZQrImWkgY8OidCB2b2lhIGRlIHN1cy4gyJhpIGRhY8SDIHNlIMOubnTDom1wbGEgc8SDIG51IG5pbWVyZWFzY8SDCnDEg3PEg3JpbGUgY3Ugc8SDZ2VhdGEsIGVsZSB0b3QgbnUgc2PEg3BhdSBkZSBkw6Juc3VsOyDIm2kgbGUgcHJpbmRlYQpjdSBtw6JuYSBkaW4gemJvciwgbGUgcsSDc3VjZWEgZ8OidHVsIGN1IGNpdWTEgyDImWkgYXBvaSBsZSBtw6JuY2EKYciZYSwgY3J1ZGUsIGN1IHBlbmUgY3UgdG90LiBDaGlhciBhdHVuY2kgYXZlYSB1biB2cmFmIGRlIHDEg3PEg3JpCmRpbmFpbnRlIMiZaSBvc3DEg3RhIGRpbnRyLcOubnNlbGUgY3UgbMSDY29taWUsIGNhIHVuIHZ1bHRhbgpoxINtZXNpdC4gSGFyYXAtQWxiLCBjdXByaW5zIGRlIG1pcmFyZSwgemlzZToKCuKAlCBEYXIgb2FyZSBwZSBhY2VzdGEgY3VtIG1hbWEgZHJhY3VsdWkgbC1vIGZpIG1haSBjaGVtw6JuZD8KCuKAlCBaaS1pIHBlIG51bWUsIHPEgyDIm2ktbCBzcHVuLCByxINzcHVuc2UgYXR1bmNpIE9jaGlsxIMsIHrDom1iaW5kIHBlCnN1YiBtdXN0xIPIm2kuCgrigJQgRGFyIHRlIG1haSBkdWNlIGNhcHVsIGNhIHPEgy1sIGJvdGV6aT8gU8SDLWkgemljaSBQxINzxINyaWzEgy4uLiBudQpncmXImWXImXRpOyBzxIMtaSB6aWNpIEzEg8ibaWzEgy4uLiBuaWNpIGF0w6J0YTsgc8SDLWkgemljaSBMdW5naWzEgy4uLgphc2VtZW5lOyBzxIMtaSB6aWNpIFDEg3PEg3JpLUzEg8ibaS1MdW5naWzEgywgbWkgc2UgcGFyZSBjxIMgZSBtYWkKcG90cml2aXQgY3UgbsSDcmF2dWwgyJlpIGFwdWPEg3R1cmlsZSBsdWksIHppc2UgSGFyYXAtQWxiLArDrm5kdWlvyJlhdCBkZSBtaWxhIGJpZXRlbG9yIHDEg3PEg3JpLiBTZSB2ZWRlIGPEgyBhY2VzdGEtaSB2ZXN0aXR1bApQxINzxINyaS0gTMSDyJtpLUx1bmdpbMSDLCBmaXVsIHPEg2dldMSDdG9ydWx1aSDImWkgbmVwb3R1bCBhcmNhyJl1bHVpOwpicsOidWwgcMSDbcOibnR1bHVpIMiZaSBzY2FyYSBjZXJ1bHVpOyBjaXVtYSB6YnVyxIN0b2FyZWxvciDImWkgc3BhaW1hCm9hbWVuaWxvciwgY8SDIGFsdGZlbCBudSB0ZSBwcmljZXBpIGN1bSBzxIMtaSBtYWkgemljaS4KCuKAlCBSw6J6aSB0dSBkZSBtaW5lLCByw6J6aSwgSGFyYXAtQWxiLCB6aXNlIGF0dW5jaSBQxINzxINyaS1MxIPIm2ktCkx1bmdpbMSDLCBkYXIgbWFpIGJpbmUgYXIgZmkgc8SDIHLDonppIGRlIHRpbmUsIGPEg2NpIG51IMiZdGlpIGNlCnDEg2NhdCB0ZSBwYciZdGUuIENoaXRlyJl0aSBjxIMgZmF0YSDDrm1wxINyYXR1bHVpIFJvyJkgbnVtYWkgYciZYSBzZQpjYXDEg3TEgz8gUG9hdGUgbi1haSDImXRpaW7Im8SDIGNlIHZpZG3EgyBkZSBmYXTEgyBlIGFjZWVhLCBjw6JuZCB2cmVhLApzZSBmYWNlIHBhc8SDcmUgbcSDaWFzdHLEgywgw67Im2kgYXJhdMSDIGNvYWRhLCDImWkgaWEtaSB1cm1hIGRhY8SDCnBvyJtpISBEZSBuLWEgZmkgyJlpIHVudWwgY2EgbWluZSBwZS1hY29sbywgZGVnZWFiYSB2xIMgbWFpIGJhdGXIm2kKcGljaW9hcmVsZSBkdWPDom5kdS12xIMuCgrigJQgSGFpIMiZaSB0dSBjdSBub2ksIGRhY8SDIHZyZWksIHppc2UgYXR1bmNpIEhhcmFwLUFsYjsgZGUtYWJpYQptaS1pIGx1YSBwZSBHZXJpbMSDIGRlIMibdWx1YyDImWkgbC3DrmkgcHVydGEgY3UgbmFzdWwgcGUgbGEgc29hcmUsCmRvYXIgcy1hIMOubmPEg2x6aSBjw6J0dciZaSBkZWPDonQgyJlpIG4tYSBtYWkgY2zEg27Im8SDbmkgYXTDonRhIGRpbgptxINzZWxlLCBjYSB1biBjb2Nvc3TDonJjIGRlIGNlaSBixIN0csOibmNpb8iZaSwgY8SDIHBhcmPEgyBtxIMgc3Ryw6JuZ2UKw65uIHNwYXRlIGPDom5kIMOubCB2xINkIGHImWEuCgpQxINzxINyaS1MxIPIm2ktTHVuZ2lsxIMgc2UgaWEgYXR1bmNpIGR1cMSDIEhhcmFwLUFsYiDImWkgcG9ybmVzYyBlaQp0dXPImWFzZSDDrm5haW50ZS4gyJhpIHBlIHVuZGUgdHJlY2VhdSwgcMOicmpvbCBmxINjZWF1OiBHZXJpbMSDCnBvdG9wZWEgcMSDZHVyaWxlIHByaW4gYXJkZXJlLiBGbMSDbcOibnppbMSDIG3Dom5jYSBsdXQgyJlpIHDEg23Dom50CmFtZXN0ZWNhdCBjdSBodW3EgyDImWkgdG90IHN0cmlnYSBjxIMgbW9hcmUgZGUgZm9hbWUuIFNldGlsxIMgc29yYmVhCmFwYSBkZSBwcmluIGLEg2zIm2kgyJlpIGlhenVyaSwgZGUgc2UgemLEg3RlYXUgcGXImXRpaSBwZSB1c2NhdCDImWkKyJtpcGEgyJlhcnBlbGUgw65uIGd1cmEgYnJvYciZdGVpIGRlIHNlY2V0xIMgbWFyZSBjZSBlcmEgcGUgYWNvbG8uCk9jaGlsxIMgdmVkZWEgdG9hdGUgY2VsZSBjYSBkcmFjdWwsIMiZaSBudW1haSDDrm5naGXIm2FpIGNlIGRhCmRpbnRyLcOubnN1bDoKCkPEgyBlIGxhaWUsCkPEgy1pIGLEg2xhaWU7CkPEgyBlIGNpdXTEgywKQ8SDLWkgY29ybnV0xIMuCk3EgyByb2csIG5lYnVuaWkgZGUtYSBsdWksIGPDonRlLW4gbHVuxIMgyJlpIMOubiBzdGVsZSwgZGUtyJtpIHZlbmVhCnPEgyBmdWdpIGRlIGVsZS4gU2F1IHPEgyByw6J6aSBjYSB1biBuZWJ1biwgY3JlZGXIm2ktbcSDIGNlIHbEgyBzcHVuIQoKw45uIHNmw6JyyJlpdCwgUMSDc8SDcmktTMSDyJtpLUx1bmdpbMSDIGFkZW1lbmVhIHpidXLEg3RvYXJlbGUgyJlpLApqdW11bGl0ZSwgbmVqdW11bGl0ZSwgyJtpIGxlIHDEg3BhIHBlIHJ1ZMSDLCBwZSBzxINtw6JuyJvEgywgZGUgbnUgc2UKbWFpIHN0xIN2aWxlYSBuaW1lbmUgY3UgcMSDc8SDcmkgcGUgbMOibmfEgyBjYXPEgyBkZSByxIN1bCBsdWkuCgpOdW1haSBIYXJhcC1BbGIgbnUgYWR1Y2VhIG5pY2kgbyBzdXDEg3JhcmUuIMOObnPEgywgY2EgdG92YXLEg8iZLCBlcmEKcMSDcnRhyJkgbGEgdG9hdGU6IMiZaSBsYSBwYWd1YsSDLCDImWkgbGEgY8OiyJl0aWcsIMiZaSBwcmlldGVub3MgY3UKZmllY2FyZSwgcGVudHJ1IGPEgyBhdmVhIG5ldm9pZSBkZSBkw6JuyJlpaSDDrm4gY8SDbMSDdG9yaWEgc2EgbGEKw65tcMSDcmF0dWwgUm/ImSwgY2FyZSwgemljZSwgY2ljxIMgZXJhIHVuIG9tIHDDomNsaciZaXQgyJlpIHLEg3V0xINjaW9zCmxhIGN1bG1lOiBudSBhdmVhIG1pbMSDIGRlIG9tIG5pY2kgY8OidCBkZSB1biBjw6JpbmUuIERhciB2b3JiYQpjZWVhOiAiTGEgdW51bCBmxINyxIMgc3VmbGV0IHRyZWJ1aWUgdW51bCBmxINyxIMgZGUgbGVnZSIuIMiYaQpnw6JuZGVzYyBldSBjxIMgZGluIGNpbmNpIG5lc3DEg2xhyJtpIGPDosibaSBtZXJnIGN1IEhhcmFwLUFsYiwgaS1hCnZlbmkgZWwgdnJldW51bCBkZSBoYWM7IMiZLWEgbWFpIGRhIMOubXDEg3JhdHVsIFJvyJkgyJlpIHBlc3RlCm9hbWVuaSwgbnUgdG90IHBlc3RlIGJ1dHVjaSwgY2EgcMOibsSDIGF0dW5jaS4gRGFyIGlhciBtxIMgw65udG9yYwrImWkgemljOiBtYWkgyJl0aWkgY3VtIHZpbmUgdnJlbWVhPyBMdW1lYSBhc3RhIGUgcGUgZG9zLCB0b2F0ZQptZXJnIGN1IGNhcHUtbiBqb3M7IHB1yJtpbmkgc3VpZSwgbXVsyJtpIGNvYm9hcsSDLCB1bnVsIG1hY2luxIMgbGEKbW9hcsSDLiDImC1hcG9pIGFjZWwgdW51bCBhcmUgYXR1bmNpIMOubiBtw6JuxIMgyJlpIHDDomluZWEsIMiZaSBjdcibaXR1bArImWkgdGFpZSBkZSB1bmRlIHZyZWEgyJlpIGPDonQgw65pIHBsYWNlLCB0dSB0ZSB1acibaSDImWkgbi1haSBjZS1pCmZhY2UuIFZvcmJhIGNlZWE6ICJDaW5lIHBvYXRlIG9hc2Ugcm9hZGU7IGNpbmUgbnUsIG5pY2kgY2FybmUKbW9hbGUiLiBByJlhIMiZaSBIYXJhcC1BbGIgyJlpIGN1IGFpIHPEg2k7IHBvYXRlLWFyIGl6YnV0aSBzxIMgaWEKZmF0YSDDrm1wxINyYXR1bHVpIFJvyJksIHBvYXRlIG51LCBkYXIgYWN1bSwgZGVvZGF0xIMsIGVpIHNlIHRvdCBkdWMKw65uYWludGUgyJlpLCBtYWkgbGEgdXJtxIMsIGN1bSBsZS1hIGZpIG5vcm9jdWwuIENlLW1pIHBhc8SDIG1pZT8gRXUKc3VudCBkYXRvciBzxIMgc3B1biBwb3Zlc3RlYSDImWkgdsSDIHJvZyBzxIMgYXNjdWx0YcibaS4KCkFtdSBIYXJhcC1BbGIgyJlpIGN1IGFpIHPEg2kgbWFpIG1lcmcgZWkgY8OidCBtZXJnIMiZaSwgw65udHItbwp0w6JyemllIHZyZW1lLCBhanVuZyBsYSDDrm1wxINyxIPIm2llLCBEdW1uZXpldSBzxIMgbmUgyJtpZSwgY8SDCmN1dsOibnR1bCBkaW4gcG92ZXN0ZSwgw65uYWludGUgbXVsdCBtYWkgZXN0ZS4gyJhpIGN1bSBhanVuZywgb2RhdMSDCmludHLEgyBidWx1YyDDrm4gb2dyYWTEgywgdHVzyJlhc2UuIEhhcmFwLUFsYiDDrm5haW50ZSDImWkgY2VpbGFsyJtpIMOubgp1cm3EgywgY2FyZSBkZSBjYXJlIG1haSBjaGlwb3MgyJlpIG1haSDDrm1icsSDY2F0LCBkZSBzZSB0w6Jyw6JpYXUKYcibZWxlIMiZaSBjdXJnZWF1IG9iaWVsZWxlIGR1cMSDIGTDom7ImWlpLCBwYXJjxIMgZXJhIG9hc3RlYSBsdWkKUGFwdWMgSG9nZWEgSG9nZWdhcnVsLiDImGkgYXR1bmNpLCBIYXJhcC1BbGIgc2UgyJlpIMOubmbEg8ibaciZYXrEgwrDrm5haW50ZWEgw65tcMSDcmF0dWx1aSBSb8iZLCBzcHVuw6JuZHUtaSBkZSB1bmRlLCBjdW0sIGNpbmUgyJlpCnBlbnRydSBjZSBhbnVtZSBhdSB2ZW5pdC4gw45tcMSDcmF0dWx1aSBpLWEgZm9zdCBkZS1hIG1pcmFyZWEsCnbEg3rDom5kIGPEgyBuaciZdGUgZ29sYW5pIGF1IGFzZW1lbmUgw65uZHLEg3puZWFsxIMsIGRlIHZpbiBjdQpuZXJ1yJlpbmFyZSBzxIMtaSBjZWFyxIMgZmF0YSwgZmllIGRpbiBwYXJ0ZWEgb3JpY3VpIGFyIGZpLiBEYXIsCm5ldm9pbmQgYSBsZSBzdHJpY2EgaW5pbWEsIG51IGxlIHNwdW5lIG5pY2kgZGEsIG5pY2kgYmEsIGNpIGxlCmTEgyByxINzcHVucyBjYSBzxIMgcsSDbcOiaWUgcGVzdGUgbm9hcHRlIGFjb2xvLCDImWkgcMOibsSDIG3DomluZQpkaW1pbmVhyJvEgyBzLWEgbWFpIGfDom5kaSBlbCBjZSB0cmVidWllIHPEgyBmYWPEgy4uLiDImGkgcGUgYWx0xIMKcGFydGUsIMOubXDEg3JhdHVsIG9kYXTEgyBjaGVhbcSDIMOubiB0YWluxIMgcGUgdW4gY3JlZGluY2lvcyBhbCBzxIN1CsiZaSBkxIMgcG9ydW5jxIMgc8SDLWkgY3VsY2Ugw65uIGNhc2EgY2VhIGRlIGFyYW3EgyDDrm5mb2NhdMSDLCBjYSBzxIMKZG9hcm3EgyBwZW50cnUgdmXImW5pY2llLCBkdXDEgyBjdW0gcMSDyJtpc2UgyJlpIGFsyJtpIHBlyJtpdG9yaSwgcG9hdGUKbWFpIGNldmEgZGVjw6J0IGFjZciZdGlhLgoKQXR1bmNpIGNyZWRpbmNpb3N1bCDDrm1wxINyYXR1bHVpIHNlIGR1Y2UgcmVwZWRlIMiZaSBkxIMgZm9jIGNhc2VpCmNlbGVpIGRlIGFyYW3EgyBwZSBkZWRlc3VidCwgY3UgMjQgZGUgc3TDom5qZW5pIGRlIGxlbW5lLCBkZSBzZQpmYWNlIGNhc2Egcm/ImWllIGN1bSBlIGrEg3JhdGljdWwuIEFwb2ksIGN1bSDDrm5zZXJlYXrEgywgdmluZSDImWkKcG9mdGXImXRlIHBlIG9hc3BlyJtpIGxhIGN1bGNhcmUuIEdlcmlsxIMgYXR1bmNpLCBuxIN6ZHLEg3ZhbiBjdW0gZXJhCmVsLCBjaGVhbcSDIHBlIHRvdmFyxIPImWlpIHPEg2kgZGVvcGFydGUgyJlpIGxlIHppY2Ugw65uY2V0aciZb3I6CgrigJQgTcSDaSwgbnUgY3VtdmEgc8SDIHbEgyDDrm1waW5nxIMgTWl0aXRlbHVsIHPEgyBpbnRyYcibaSDDrm5haW50ZWEgbWVhCnVuZGUgbmUtYSBkdWNlIG9tdWwgyJthcHVsdWkgY2VsdWkgcm/ImSwgY8SDIG51IG1haSBhanVuZ2XIm2kgc8SDCnZlZGXIm2kgeml1YSBkZSBtw6JpbmUuIERvYXIgdW51LWkgw65tcMSDcmF0dWwgUm/ImSwgdmVzdGl0IHByaW4KbWVsZWFndXJpbGUgYWNlc3RlIHBlbnRydSBidW7Eg3RhdGVhIGx1aSBjZWEgbmVtYWlwb21lbml0xIMgyJlpCm1pbG9zdGl2aXJlYSBsdWkgY2VhIG5lYXV6aXTEgy4gw45sIMiZdGl1IGV1IGPDonQgZSBkZSBwcmltaXRvciDImWkKZGUgZGFybmljIGxhIHNwYXRlbGUgYWx0b3JhLiBOdW1haSBkZSBudSBpLWFyIG11cmkgbXVsyJtpCsOubmFpbnRlISBzxIMgdHLEg2lhc2PEgyB0cmVpIHppbGUgY3UgY2VhIGRlLWFsYWx0YWllcmkhIEQtYXBvaQpmZXRpyJlvYXJhIGx1aTsgYSB6aXMgZHJhY3VsIMiZaSBzLWEgZsSDY3V0OyBidWPEg8ibaWPEgyBydXB0xIMKdGF0xIMtc8SDdSDDrm4gcGljaW9hcmUsIGJhIMOubmPEgyDImWkgbWFpIMiZaS4gVm9yYmEgY2VlYTogIkNhcHJhIHNhcmUKbWFzYSwgyJlpIGlhZGEgc2FyZSBjYXNhIi4gRGFyIGxhcycgY8SDIMiZaS1hdSBnxINzaXQgZWkgb211bC4gRGUgbnUKbGUtb2kgdmVuaSBldSBkZSBoYWMgw65uIGFzdMSDIG5vYXB0ZSwgbmljaSBtYW1hIGRyYWN1bHVpIG51IGxlCm1haSB2aW5lIQoK4oCUIEHImWEgZ8OibmRlc2MgyJlpIGV1LCB6aXNlIEZsxINtw6JuemlsxIM7IMiZaS1hIHB1cyBlbCwgw65tcMSDcmF0dWwKUm/ImSwgYm9paSDDrm4gY8OicmQgY3UgZHJhY3VsLCBkYXIgYXJlIHPEgy1pIHNjb2F0xIMgZsSDcsSDIGNvYXJuZS4KCuKAlCBCYSBtaSBzZSBwYXJlIGMtYSBkYSBlbCDImWkgdGVsZWFnxIMsIMiZaSBwbHVnLCDImWkgb3RpYywgyJlpIHRvdCwKbnVtYWkgc8SDIHNjYXBlIGRlIG5vaSwgemlzZSBPY2hpbMSDLgoK4oCUIElhIGFzY3VsdGHIm2ksIG3Eg2khIHppc2UgR2VyaWzEgzogIlZvcmJhIGx1bmfEgywgc8SDcsSDY2lhIG9tdWx1aSIuCk1haSBiaW5lIGhhaWRlbSBsYSBjdWxjYXJlLCBjxIMgbmUgYciZdGVhcHTEgyBvbXVsIMOubXDEg3JhdHVsdWkgY3UKbWFzYSDDrm50aW5zxIMsIGN1IGbEg2NsaWlsZSBhcHJpbnNlIMiZaSBjdSBicmHIm2VsZSBkZXNjaGlzZS4gSGFpIQpBc2N1yJtpyJtpLXbEgyBkaW7Im2lpIMiZaSBwb3JuacibaSBkdXDEgyBtaW5lLgoKyJhpIG9kYXTEgyBwb3JuZXNjIGVpLCB0ZWxlYXAsIHRlbGVhcCwgdGVsZWFwISDImGksIGN1bSBhanVuZyDDrm4KZHJlcHR1bCB1yJlpaSwgc2Ugb3ByZXNjIHB1yJtpbi4gQXR1bmNpIEdlcmlsxIMgc3VmbMSDIGRlIHRyZWkgb3JpCmN1IGJ1emnImW9hcmVsZSBzYWxlIGNlbGUgaXNjdXNpdGUgyJlpIGNhc2EgcsSDbcOibmUgbmljaSBmaWVyYmludGUsCm5pY2kgcmVjZSwgY3VtIGUgbWFpIGJpbmUgZGUgZG9ybWl0IMOubnRyLcOubnNhLiBBcG9pIGludHLEgyBjdQp0b8ibaWkgw65ubMSDdW50cnUsIHNlIHRvbG9nZciZdGUgY2FyZSB1bmRlIGFwdWPEgywgyJlpIHRhYyBtxIMgY2hlYW3Egy4KSWFyxIMgY3JlZGluY2lvc3VsIMOubXDEg3JhdHVsdWksIMOubmN1aW5kIHXImWEgcGUgZGluIGFmYXLEgyBjdQpyZXBlanVuZSwgbGUgemljZSBjdSByxIN1dGF0ZToKCuKAlCBMYXMnIGPEgyB2LWFtIGfEg3NpdCBldSBhYyBkZSBjb2pvYy4gRGUtYWN1bSBkb3JtacibaSwKZG9ybWlyZS1hyJtpIHNvbW51bCBjZWwgZGUgdmVjaSwgY8SDIHYtYW0gYciZdGVybnV0IGV1IGJpbmUhIFbEgwp2ZcibaSBmYWNlIHNjcnVtIHDDom7EgyBtw6JpbmUtZGltaW5lYcibxIMuCgpBcG9pIMOuaSBsYXPEgyBhY29sbyDImWkgZWwgc2UgZHVjZSDDrm4gdHJlYWJhIGx1aS4gRGFyIEhhcmFwQWxiIMiZaQpjdSBhaSBzxINpIG5pY2kgbnUgYmluZGlzZWF1IGRlIGFzdGE7IGVpLCBjdW0gYXUgZGF0IGRlCmPEg2xkdXJpY8SDLCBwZSBsb2MgbGkgcy1hdSBtdWlhdCBjaW9sYW5lbGUgyJlpIGF1IMOubmNlcHV0IGEgc2UKw65udGluZGUgyJlpIGEgc2UgaMOicmpvbmkgw65uIGNpdWRhIGZldGVpIMOubXDEg3JhdHVsdWkgUm/ImS4gQmEgw65uY8SDCkdlcmlsxIMgc2Ugw65udGluZGVhIGRlIGPEg2xkdXLEgywgZGUtaSB0cmVjZWF1IGdlbnVuY2hpbGUgZGUgZ3VyxIMuCsiYaSBob2ptYSBtb3JvY8SDbmVhIHBlIGNlaWxhbMibaSwgemljw6JuZDoKCuKAlCBOdW1haSBkaW4gcHJpY2luYSB2b2FzdHLEgyBhbSByxINjaXQgY2FzYTsgY8SDY2kgcGVudHJ1IG1pbmUgZXJhCm51bWFpIGJ1bsSDLCBjdW0gZXJhLiBEYXIgYciZYSBwxIPIm2XImXRpIGRhY8SDIHRlIGllaSBjdSBuaciZdGUKYmljaXNuaWNpLiBMYXMnIGPEgyB2LWEgbWFpIHDEg2xpIGVsIGJlcmVjaGV0dWwgYWNlc3RhIGRlIGFsdMSDCmRhdMSDISDImHRpaSBjxIMgYXJlIGhheiDImWkgYXN0YT8gVm9pIHPEgyB2xIMgbMSDZsSDacibaSDImWkgc8SDIGh1enVyacibaQpkZSBjxINsZHVyxIMsIGlhcsSDIGV1IHPEgyBjcmFwIGRlIGZyaWcuIEJ1Li4ubsSDIHRyZWFixIMhIFPEgy1taSBkYXUKZXUgbGluaciZdGVhIG1lYSBwZW50cnUgaGF0w6JydWwgbnUgyJl0aXUgY3VpPyBBY3XImWkgdsSDIHTDonJuw6JpZXNjCnByaW4gY2FzxIMsIHBlIHJ1ZMSDIHBlIHPEg23Dom7Im8SDOyDDrm5jYWx0ZWEgc8SDIG51IHNlIGFsZWFnxIMgbmltaWNhCm5pY2kgZGUgc29tbnVsIG1ldSwgZGFyIG5pY2kgZGUgYWwgdm9zdHJ1LgoK4oCUIElhIHRhY8SDLcibaSBndXJhLCBtxINpIEdlcmlsxIMhIHppc2VyxIMgY2VpbGFsyJtpLiBBY3XImWkgc2UgZmFjZQp6aXXEgywgyJlpIHR1IG51IG1haSBzdGluY2hlyJl0aSBjdSBicmHImW9hdmUgZGUtYWxlIHRhbGUuIEFsCmRyYWN1bHVpIGxpZ2hpb2FpZSBtYWkgZciZdGkhIERlc3R1bCBhY3VtLCBjxIMgbmUtYWkgZsSDY3V0IGNhcHVsCmPEg2xpbmRhci4gQ2luZS1hIG1haSBkb3JpIHPEgyBmYWPEgyB0b3bEg3LEg8iZaWUgY3UgdGluZSBhaWLEgy3ImWkKcGFydGUgyJlpIHBvYXJ0ZS3Im2kgcG9ydHVsLiBDxIMgcGUgbm9pIMiZdGl1IGPEgyBuZS1haSBhbWXIm2l0LiBBcmUKY2luZXZhIGNhcCBzxIMgc2UgbGluaciZdGVhc2PEgyBkZSByxIN1bCB0xIN1PyBJLWF1emktbC3Eg2k6IHBhcmPEgy1pIG8KbW9hcsSDIGhvZG9yb2dpdMSDLiBOdW1haSBndXJhIGx1aSBzZSBhdWRlIMOubiB0b2F0ZSBwxINyyJtpbGUuIEhvam1hCnRvbG9jxINuZciZdGUgcGVudHJ1IG5pbWljYSB0b2F0xIMsIGN1cmF0IGNhIHVuIG5lYnVuLiBUdSwgbcSDaSwKZciZdGkgYnVuIGRlIHRyxINpdCBudW1haSDDrm4gcMSDZHVyZSwgY3UgbHVwaWkgyJlpIGN1IHVyyJlpaSwgZGFyIG51CsOubiBjYXNlIMOubXDEg3LEg3RlyJl0aSDImWkgw65udHJlIG5pyJl0ZSBvYW1lbmkgY3Vtc2VjYWRlLgoK4oCUIElhIGFzY3VsdGHIm2ksIG3Eg2ksIGRhciBkZSBjw6JuZCBhyJtpIHB1cyB2b2kgc3TEg3DDom5pcmUgcGUgbWluZT8KemlzZSBHZXJpbMSDLiBBcG9pIG51IG3EgyBmYWNlyJtpIGRpbiBjYWwgbcSDZ2FyLCBjxIMgdsSDIHZlyJtpIGfEg3NpCm1hbnRhdWEgY3UgbWluZSEgRXUgw65zIGJ1biBjw6J0IMOucyBidW4sIGRhciDImWkgY8OibmQgbcSDIHNjb2F0ZQpjaW5ldmEgZGluIHLEg2JkYXJlLCBhcG9pIG51LWkgdHJlYnVpZSBuaWNpIMibaWdhbiBkZSBsYWllCsOubXBvdHJpdmEgbWVhLgoK4oCUIFrEg3UsIG51IMiZdWd1aWXImXRpLCBtxINpIEJ1emlsxIM/IERhJyBhbWFybmljIG1haSBlyJl0aSBsYSB2aWHIm8SDOwpjw6JuZCB0ZSBtw6JuaWksIGZhY2kgc8OibmdlLW4gYmFsaWfEgywgemlzZSBGbMSDbcOibnppbMSDLiBUYXJlLW1pCmXImXRpIGRyYWchLi4uIFRlLWHImSB2w6Jyw64gw65uIHPDom4sIGRhciBudSDDrm5jYXBpIGRlIHVyZWNoaS4uLiBJYQptYWkgYmluZSBvZ29pZciZdGUtdGUgb2xlYWPEgyDImWkgbWFpIHN0csOibmdlLcibaSBidXppyJlvYXJlbGUgYWNhc8SDOwpudSBkZSBhbHRhLCBkYXIgc8SDIG51LcibaSBwYXLEgyByxIN1IHBlIHVybcSDLCBjxIMgZG9hciBudSBlyJl0aSBudW1haQp0dSDDrm4gY2FzYSBhc3RhLgoK4oCUIEVpLCBhcG9pISBWb3JiYSBjZWVhOiAiRsSDIGJpbmUsIHPEgy3Im2kgYXV6aSByxIN1IiwgemlzZSBHZXJpbMSDLgpEYWPEgyBudSB2LWFtIGzEg3NhdCBzxIMgaW50cmHIm2kgYWljaSDDrm5haW50ZWEgbWVhLCBhyJlhIG1pIHNlIGNhZGU7CmJhIMOubmPEgyDImWkgbWFpIHLEg3UgZGVjw6J0IGHImWEuIENpbmUtYSBmYWNlIGRlIGFsdMSDIGRhdMSDIGNhIG1pbmUsCmNhIG1pbmUgc8SDIHDEg8ibZWFzY8SDLgoK4oCUIEFpIGRyZXB0YXRlLCBtxINpIEdlcmlsxIMsIG51bWFpIHR1IG51IHRlIGNhdcibaSwgemlzZSBPY2hpbMSDLgpEYXIgY3UgcHJ1aml0dXJpIGRlLWEgdGFsZSwgaWEgYWN1yJlpIHNlIGR1Y2Ugbm9hcHRlYSwgyJlpIHZhaSBkZQpvZGlobmEgbm9hc3RyxIMuIE3Eg2NhciB0dSBzxIMgZmlpIGFjZWxhLCBjZSBhaSB6aWNlLCBjw6JuZCDIm2ktYQpzdHJpY2EgY2luZXZhIHNvbW51bD8gQmEgw65uY8SDIGFpIGRhdCBwZXN0ZSBuaciZdGUgb2FtZW5pIGFpIGx1aQpEdW1uZXpldSwgZGFyLCBzxIMgZmkgZm9zdCBjdSBhbMibaWksIGhlaSwgaGVpISBtw6JuY2FpIHBhcGFyYSBww6JuxIMKYWN1bS4KCuKAlCBEYXIgbnUgbWFpIHTEg2NlyJtpLCBtxINpPyBDxIMgaWEgYWN1yJlpIHRyZWMgY3UgcGljaW9hcmVsZSBwcmluCnBlcmXIm2kgyJlpIGllcyBhZmFyxIMgY3UgYWNvcGVyxINtw6JudHVsIMOubiBjYXAsIHppc2UgTMSDyJtpTHVuZ2lsIMSDLgpQYXJjxIMgbnUgZmFjZcibaSBhIGJpbmUsIGRlIG51IHbEgyBtYWkgYXN0w6JtcMSDcsSDIGRyYWN1bCBuaWNpIGxhCnZyZW1lYSBhc3RhLiBNxINpIEJ1emlsxIMsIG1pIHNlIHBhcmUgY8SDIHR1IGXImXRpIHRvYXTEgyBwcmljaW5hCmfDomxjZXZlaSBkaW50cmUgbm9pLgoK4oCUIEJhIGJpbmUgY8SDIG51ISB6aXNlIE9jaGlsxIMuIEFyZSBlbCBub3JvYyBkZSBjZSBhcmUsIGRhciDImXRpdQpldSBjZSBpLWFyIHRyZWJ1aS4KCuKAlCBJYSwgc8SDLWkgZmFjaSBjaGljYSB0b3Bvciwgc3BpbmFyZWEgZG9ixIMgyJlpIHDDom50ZWNlbGUgY29iesSDLAp6aXNlIFNldGlsxIMsIGPEg2NpIGFsdG1pbnRyZWxlYSBuaWNpIG51IGUgZGUgY2hpcCBzLW8gc2NvyJtpIGxhCmNhcMSDdCBjdSBidWNsdWNhyJl1bCBhY2VzdGEuCgpHZXJpbMSDLCB2xIN6w6JuZCBjxIMgdG/Im2kgw65pIHN0YXUgw65tcG90cml2xIMsIHNlIG3Dom5pZSBhdHVuY2kgyJlpCnVuZGUgbnUgdHLDom50ZciZdGUgbyBicnVtxIMgcGUgcGVyZcibaSwgZGUgdHJlaSBwYWxtZSBkZSBncm9hc8SDLCBkZQphdSDDrm5jZXB1dCBhIGNsxINuyJvEg25pIMiZaSBjZWlsYWzIm2kgZGUgZnJpZywgZGUgc8SDcmVhIGPEg23Eg8iZYSBkZSBwZQpkw6JuyJlpaS4KCuKAlCBOYSEgw65uY2FsdGVhIHYtYW0gZsSDY3V0IMiZaSBldSBwZSBvYnJhei4gRGUtYWN1bSDDrm5haW50ZQpzcHVuZcibaSBjZSB2xIMgcGxhY2UsIGPEgyBudSBtaS1hIGZpIGNpdWTEgywgemlzZSBHZXJpbMSDLCByw6J6w6JuZCBjdQpob2hvdC4gRWksIGFwb2k/IENpY8SDIHPEgyBudSB0ZSBzdHJpY2kgZGUgcsOicyEuLi4gRGUgSGFyYXBBbGIsIG51CnppYy4gRGFyIHZvaSwgbWFuZ29zacibaWxvciDImWkgZmFyZmFzacibaWxvciwgZGUgY8OidGUgb3JpIMOuyJtpIGZpCmRvcm1pdCDDrm4gc3Ryb2ggyJlpIHBlIHTDonJub21hdMSDLCBzxIMgYW0gZXUgYWN1bSBhdMOiyJtpYSBiYW5pIMOubgpwdW5nxIMgbnUgbWktYXIgbWFpIHRyZWJ1aSBhbHTEgyEgT2FyZSBudSBjdW12YSB2LWHIm2kgZmFjZSDImWkgdm9pLApuaciZdGUgZmVjaW9yaSBkZSBnaGluZMSDLCBmxIN0YcibaSDDrm4gdGluZMSDLCBjxIMgc3VudGXIm2kgb2JyYXplCnN1YsibaXJpPwoK4oCUIElhciBjYXXIm2kgc8SDbcOibsibxIMgZGUgdm9yYsSDLCBtxINpIEJ1emlsxIM/IHppc2VyxIMgY2VpbGFsyJtpLiBBbApkcmFjdWx1aSBzxIMgZmlpIGN1IHRvdCBuZWFtdWwgdMSDdSwgw65uIHZlY2lpIHZlY2lsb3IsIGFtaW4hCgrigJQgRGUgYXN0YSDImWkgZXUgbcSDIGFuaW4gyJlpIG3EgyDDrm5jaGluIGxhIGNpbnN0aXRhIGZhyJthIHZvYXN0csSDLApjYSBsYSB1biBjb2RydSB2ZXJkZSwgY3UgdW4gcG9sb2JvYyBkZSB2aW4gyJlpIGN1IHVudWwgZGUgcGVsaW4sCnppc2UgR2VyaWzEgy4gyJhpIGhhaSBkZS1hY3VtIHPEgyBkb3JtaW0sIG1haSBhY3XImWkgc8SDIG5lIHRyZXppbSwKw65udHItdW4gZ8OibmQgc8SDIG5lIHVuaW0sIHBlIEhhcmFwLUFsYiBzxIMtbCBzbHVqaW0gyJlpIHRvdApwcmlldGVuaSBzxIMgZmltOyBjxINjaSBjdSB2cmFqYsSDIMiZaSB1cmdpZSByYWl1bCBuLW8gc8SDLWwgZG9iw6JuZGltLgoKw45uIHNmw6JyyJlpdCwgY2Utb3IgZmkgbWFpIGRvbmTEg25pdCBlaSwgyJlpIGPDonQgb3IgbWFpIGZpIGRvbmTEg25pdCwKY8SDIG51bWFpIGlhY2Egc2UgZmFjZSB6aXXEgyEuLi4gyJhpIGF0dW5jaSwgY3JlZGluY2lvc3VsCsOubXDEg3JhdHVsdWksIGNyZXrDom5kIGPEgyBzLWEgY3VyxIPIm2l0IGRlIG9hc3BlyJtpLCB2aW5lIGN1IGfDom5kdWwKc8SDIG3Eg3R1cmUgc2NydW11bCBhZmFyxIMsIGR1cMSDIHLDom5kdWlhbMSDLiDImGkgY8OibmQgYWp1bmdlIG1haQphcHJvYXBlLCBjZSBzxIMgdmFkxIM/IENhc2EgY2VhIGRlIGFyYW3Egywgw65uZm9jYXTEgyBhyJlhIGRlIHN0cmHImW5pYwpkZSBjdSBzYXLEgywgZXJhIGFjdW0gdG9hdMSDIG51bWFpIHVuIHNsb2kgZGUgZ2hlYcibxIMsIMiZaSBudSBzZSBtYWkKY3Vub8iZdGVhIHBlIGRpbiBhZmFyxIMgbmljaSB1yJnEgywgbmljaSB1yJlvcmksIG5pY2kgZ3JhdGlpLCBuaWNpCm9ibG9hbmUgbGEgZmVyZciZdGksIG5pY2kgbmltaWNhOyBpYXIgw65ubMSDdW50cnUgc2UgYXV6ZWEgdW4KdMSDcsSDYm9pIGdyb3phdjsgdG/Im2kgYm9jxINuZWF1IGxhIHXImcSDIGPDonQgY2UgcHV0ZWF1IMiZaSBzdHJpZ2F1CmPDonQgbGUgbHVhIGd1cmEsIHppY8OibmQ6CgrigJQgTnUgyJl0aW0gY2UgZmVsIGRlIMOubXDEg3JhdCBlIGFjZXN0YSwgZGUgbmUgbGFzxIMgZsSDcsSDIHNjw6JudGVpZQpkZSBmb2Mgw65uIHZhdHLEgywgc8SDIGRlZ2VyxINtIGFpY2VhLi4uIEHImWEgc8SDcsSDY2llIGRlIGxlbW5lIG51IHMtYQp2xIN6dXQgbmljaSBsYSBib3JkZWl1bCBjZWwgbWFpIHPEg3LEg2PEg2Npb3MuIFZhaSBkZSBub2kgyJlpIGRlIG5vaSwKY8SDIG5lLWEgw65uZ2hlyJthdCBsaW1iYSDDrm4gZ3VyxIMgyJlpIG3Eg2R1dmEgw65uIGNpb2xhbmUgZGUgZnJpZyEuLi4KCkNyZWRpbmNpb3N1bCDDrm1wxINyYXR1bHVpLCBhdXppbmQgYWNlc3RlLCBwZSBkZS1vIHBhcnRlIGwtYQpjdXByaW5zIHNwYWltYSwgaWFyxIMgcGUgZGUgYWx0YSBzLWEgw65uZHLEg2NpdCBkZSBjaXVkxIMuIMiYaSBkxIMgZWwKc8SDIGRlc2N1aWUgdciZYSwgbnUgcG9hdGU7IGTEgyBzLW8gZGVzcHJpbmTEgywgbmljaSBhdMOidGEuIFBlIHVybcSDLApjZSBzxIMgZmFjxIM/IEFsZWFyZ8SDIMiZaSB2ZXN0ZciZdGUgw65tcMSDcmF0dWx1aSBkZXNwcmUgY2VsZQrDrm50w6JtcGxhdGUuIEF0dW5jaSB2aW5lIMiZaSDDrm1wxINyYXR1bCBjdSBvIG11bMibaW1lIGRlIG9hbWVuaSwgY3UKY2F6bWFsZSBhc2N1yJtpdGUgyJlpIGN1IGNhemFuZSBwbGluZSBjdSB1bmNyb3A7IMiZaSB1bmlpIHTEg2lhdQpnaGVhyJthIGN1IGNhem1hbGVsZSwgYWzIm2lpIGFydW5jYXUgY3UgdW5jcm9wIHBlIGxhIMibw6LIm8OibmlsZSB1yJlpaQrImWkgw65uIGJvcnRhIGNoZWlpIMiZaSBkdXDEgyBtdWx0xIMgdHJ1ZMSDLCBjdSBtYXJlIGNlIGjEg2zEg2R1aWVzYyBkZQpkZXNjaGlkIHXImWEgyJlpIHNjb3QgcGUgb2FzcGXIm2kgYWZhcsSDLiDImGkgY8OibmQgY29sbywgY2Ugc8SDIHZlemk/ClRvyJtpIGVyYXUgY3UgcMSDcnVsLCBjdSBiYXJiYSDImWkgbXVzdGXIm2lsZSBwbGluZSBkZSBwcm9tb3JvYWPEgywKZGUgbnUtaSBjdW5vyJl0ZWFpLCBvYW1lbmkgc3VudCwgZHJhY2kgc3VudCwgb3JpIGFsdGUgYXLEg3TEg3JpLiDImGkKYciZYSB0cmVtdXJhdSBkZSB0YXJlLCBkZSBsZSBkw6JyZMOiaWF1IGRpbsibaWkgw65uIGd1csSDLiBJYXLEgyBtYWkKYWxlcyBwZSBHZXJpbMSDIHBhcmPEgy1sIHpnaGlodWlhdSB0b8ibaSBkcmFjaWk7IHBvem5lIGbEg2NlYSBjdQpidXppyJlvYXJlbGUgc2FsZSwgw65uY8OidCBzLWEgw65uZ3Jveml0IMiZaSDDrm1wxINyYXR1bCBSb8iZIGPDom5kIGwtYQp2xIN6dXQgZsSDY8OibmQgYciZYSBkZSBmcnVtdciZZWwuCgpBdHVuY2kgSGFyYXAtQWxiLCBpZciZaW5kIGRpbnRyZSBkw6JuyJlpaSwgc2Ugw65uZsSDyJtpyJlhesSDIGN1dmlpbmNpb3MKw65uYWludGVhIMOubXDEg3JhdHVsdWksIHppY8OibmQ6CgrigJQgUHJlYSDDrm7Eg2zIm2F0ZSDDrm1wxINyYXRlISBMdW1pbmFyZWEtc2EsIG5lcG90dWwgcHJlYQpwdXRlcm5pY3VsdWkgVmVyZGUtw65tcMSDcmF0LCBtLWEgZmkgYciZdGVwdMOibmQgY3UgbmVyxINiZGFyZS4KRGUtYWN1bSDDrm5haW50ZSwgY3JlZCBjxIMgbWktyJtpIGRhIGZhdGEsIGNhIHPEgyB2xIMgbMSDc8SDbSDDrm4gcGFjZQrImWkgc8SDIG5lIGR1Y2VtIMOubiB0cmVhYmEgbm9hc3RyxIMuCgrigJQgQmluZSwgdm9pbmljZSwgemlzZSDDrm1wxINyYXR1bCwgdWl0w6JuZHUtc2UgbGEgZMOibsiZaWkgY2FtIGFjcnUKb2FyZWN1bTsgYSB2ZW5pIGVhIMiZaSB2cmVtZWEgYWNlZWEuLi4gRGFyIGFjdW0sIGRlb2RhdMSDLCBpYSBzxIMKb3NwxIN0YcibaSBjZXZhLCBjYSBzxIMgbnUgemljZcibaSBjxIMgYcibaSBpZciZaXQgZGluIGNhc2EgbWVhIGNhIGRlCmxhIG8gY2FzxIMgcHVzdGllLgoK4oCUIFBhcmPEgyB2LWEgaWXImWl0IHVuIHNmw6JudCBkaW4gZ3VyxIMsIGx1bWluYXRlIMOubXDEg3JhdGUsIHppc2UKYXR1bmNpIEZsxINtw6JuemlsxIMsIGPEgyBuZSBnaGlvcsSDaWVzYyBtYcibZWxlIGRlIGZvYW1lLgoK4oCUIFBvYXRlIG5pLcibaSBkYSDImWkgY2V2YSBkZSB1ZGVhbMSDLCBtxINyaWEtdGEsIHppc2UgU2V0aWzEgywgY8SDIG5lCnNmw6Jyw6JpZSBnw6J0bGVqdWwgZGUgc2V0ZS4KCuKAlCBJYSBsxINzYcibaSwgbcSDaSwgemlzZSBPY2hpbMSDLCBjbGlwb2NpbmQgbWVyZXUgZGluIGdlbmUsIGPEgwpsdW1pbmFyZWEtc2EgyJl0aWUgY2UgbmUgdHJlYnVpZS4KCuKAlCBByJlhIGNyZWQgyJlpIGV1LCB6aXNlIFDEg3PEg3JpbMSDLCBkb2FyLCBkZS1hIHB1dGVyZS1hIGhpLCBhbQpjxIN6dXQgbGEgY2FzxIMgw65tcMSDcsSDdGVzY8SDLCBzxIMgbnUgdsSDIHRlbWXIm2ksIGPEgyBhcmUgw65uxINsyJtpbWVhLXNhCmF0w6J0YSBwdXJ0YXJlIGRlIGdyaWrEgywgY2Egc8SDIG51IGZpbSBjaGludWnIm2kgY3UgZnJpZywgY3UgZm9hbWUKyJlpIGN1IHNldGUuCgrigJQgTWFpIHLEg23Dom5lIMOubmRvaWFsxIMgZGVzcHJlIGFzdGEsIHppc2UgR2VyaWzEgywgdHJlbXVyw6JuZApjdW1wbGl0LiBEYXIgbi1hdmXIm2kgyJl0aWluyJvEgyBjxIMgw65uxINsyJtpbWVhLXNhIGVzdGUgdGF0YQpmbMSDbcOibnppbG9yIMiZaSBhbCDDrm5zZXRhyJtpbG9yPyDImGkgdG9jbWFpIGRlIGFzdGEgbcSDIGJ1Y3VyIMiZaSBldSwKY8SDIGRlLWFiaWEgbS1vaSBtYWkgw65uY8SDbHppIG9sZWFjxIMgYsOibmQgc8OibmdlbGUgRG9tbnVsdWkuCgrigJQgRWksIHRhY8SDLXbEgyBndXJhIGRlLWFjdW0hIHppc2UgRmzEg23Dom56aWzEgy4gRGVzdHVsIGUgbyBtxINjaXVjxIMKbGEgdW4gY2FyIGRlIG9hbGUuIE51IHRvdCBjZXTEg3JhyJtpIHBlIG3Eg3JpYS1zYSwgY8SDIG9tIGUKZHVtbmVhbHVpLiBQZW50cnUgbmnImXRlIHPEg3LEg2N1yJtpIGNhIG5vaSBlIGdyZXUgZGUgZsSDY3V0IHRyZWJpIGRlCmFjZXN0ZWEuIERhciBsYSBvIMOubXDEg3LEg8ibaWUsIGNhIGN1bSB0ZS1hciBwaciZY2EgdW4gcHVyaWNlOyBudSBzZQptYWkgYmFnxIMgw65uIHNlYW3Egy4KCuKAlCBEaW4gcGFydGVhIG1lYSwgbcOibmNhcmVhLWkgbnVtYWkgbyB6xINiYXbEgzsgYsSDdXR1cmljYSBtYWkgZXN0ZQpjZSBlc3RlLCB6aXNlIFNldGlsxIM7IMiZaSBhyJkgcnVnYSBwZSBsdW1pbmFyZWEtc2EgY8SDLCBkYWPEgyBhcmUgZGUKZ8OibmQgYSBuZSBvc3DEg3RhLCBkdXDEgyBjdW0gcy1hIGhvdMSDcsOidCwgYXBvaSBzxIMgbmUgw65uZGVzZWFzY8SDCm1haSBtdWx0IGN1IHVkZWFsYSwgcGVudHJ1IGPEgyBhY29sbyBzdMSDIHRvYXTEgyBwdXRlcmVhIMiZaQrDrm5kcsSDem5lYWxhLiBWb3JiYSBjZWVhOiAiRMSDLWkgY3UgY2luc3RlYSwgc8SDIHBpYXLEgyBydciZaW5lYSIuCkRhciBtaSBzZSBwYXJlIGPEgyBuZS1hbSBwcmVhIMOubnRpbnMgY3Ugdm9yYmEsIMiZaSBsdW1pbmFyZWEtc2EgbnUKyJl0aWUgY3VtIHPEgyBuZSBtYWkgaW50cmUgw65uIHZvaWUuCgrigJQgQWN1bSwgZGUgbmUtYXIgZGEgb2RhdMSDIGNlIG5lLWFyIGRhLCB6aXNlIEZsxINtw6JuemlsxIMsIGPEg2NpIG3Egwpyb2FkZSBpbmltYSBkZSBmb2FtZSBjZS1taSBlIQoK4oCUIElhIG1haSDDrm5nxINkdWnIm2kgb2xlYWPEgywgbcSDaSwgemlzZSBPY2hpbMSDLCBjxIMgZG9hciBudSB2LWF1IG1hcwrImW9hcmVjaWkgw65uIHDDom50ZWNlLiBBY3XImWkgcy1vciBhZHVjZSDImWkgYnVjYXRlbGUsIMiZaSB2aW51bCwgyJlpCm51bWFpIGRlLWHIm2kgYXZlYSBww6JudGVjZSB1bmRlIHPEgyBsZSBwdW5lyJtpLgoK4oCUIMOObmRhdMSDIHZpIHMtYSBhZHVjZSDImWkgZGVtw6JuY2FyZSwgyJlpIGLEg3V0dXLEgywgemlzZSDDrm1wxINyYXR1bCwKbnVtYWkgZGUtyJtpIHB1dGVhIGRvdmVkaSBjw6J0IHbEgyB2b2kgZGEgZXU7IGPEgyBkZSBudS3Im2kgZmkKbcOibmPEg3RvcmkgyJlpIGLEg3V0b3JpIGJ1bmksIHYtYcibaSBnxINzaXQgYmVsZWF1YSBjdSBtaW5lLCBudSB2xIMKcGFyxIMgbHVjcnUgZGUgyJlhZ8SDIQoK4oCUIERlIG5lLWFyIGRhIER1bW5lemV1IHRvdCBhdMOidGEgc3VwxINyYXJlLCBsdW1pbmFyZWEgdm9hc3RyxIMsCnppc2UgYXR1bmNpIEZsxINtw6JuemlsxIMsIMibaW7Dom5kdS1zZSBjdSBtw6JpbmlsZSBkZSBww6JudGVjZS4KCuKAlCDImGkgw65uxINsyJtpbWVpLXZvYXN0cmUgZ8OibmQgYnVuIMiZaSBtw6JuxIMgc2xvYm9kxIMsIGNhIHPEgyBuZSBkYcibaQpjw6J0IHNlIHBvYXRlIG1haSBtdWx0xIMgbcOibmNhcmUgyJlpIGLEg3V0dXJpY8SDLCB6aXNlIFNldGlsxIMsIGPEg3J1aWEKw65pIGzEg3NhIGd1cmEgYXDEgywgY8SDIGRpbiBtw6JuY2FyZSDImWkgYsSDdXR1csSDLCBsYXMnIGRhY8SDIG5lLWEKw65udHJlY2UgY2luZXZhOyBudW1haSBsYSB0cmVhYsSDIG51IG5lIHByZWEgcHVuZW0gY3UgdG/Im2kgbmVidW5paS4KCsOObXDEg3JhdHVsIHTEg2NlYSBsYSB0b2F0ZSBhY2VzdGUsIMOuaSBhc2N1bHRhIGN1IGRlemd1c3QgyJlpIG51bWFpCsOubmdoacibZWEgbm9kdXJpLiBEYXIsIMOubiBnw6JuZHVsIHPEg3U6ICJCaW5lLCBiaW5lISBDZXJjYcibaSB2b2kKbWFyZWEgY3UgZGVnZXR1bCwgZGFyIGlhIHPEgyB2ZWRlbSBjdW0gaS3Im2kgZGEgZGUgZnVuZD8gVsSDIHZvcgppZciZaSBlbGUgdG9hdGUgYWNlc3RlIHBlIG5hcyIuIER1cMSDIGFjZWVhIMOuaSBsYXPEgyDImWkgc2UgZHVjZSDDrm4KY2FzxIMuCgrDjm4gc2bDonLImWl0LCBudSB0cmVjZSBtdWx0IGxhIG1pamxvYywgyJlpIG51bWFpIGlhY2EgbGkgc2UgYWR1YyAxMgpoYXJhYmFsZSBjdSBww6JpbmUsIDEyIGlhbG92acibZSBmcmlwdGUgyJlpIDEyIGJ1yJtpIHBsaW5lIGN1IHZpbiBkZQpjZWwgaHLEg25pdCwgZGUgY2FyZSwgY3VtIGJlaSBjw6J0ZSBvbGVhY8SDLCBwZSBsb2MgyJtpIHNlIHRhaWUKcGljaW9hcmVsZSwgw67Im2kgc2NsaXBlc2Mgb2NoaWkgw65uIGNhcCwgyJtpIHNlIMOubmNsZWllIGxpbWJhIMOubgpndXLEgyDImWkgw65uY2VwaSBhIGJvbGJvcm9zaSB0dXJjZciZdGUsIGbEg3LEgyBzxIMgyJl0aWkgYmVjaGl1IG3Eg2Nhci4KRmzEg23Dom56aWzEgyDImWkgU2V0aWzEgyB6aXNlcsSDIGF0dW5jaSBjZWxvcmxhbMibaToKCuKAlCBNxINpLCBtw6JuY2HIm2kgdm9pIMOubnTDomkgyJlpIGJlyJtpIGPDonQgdmXIm2kgcHV0ZWEsIGRhciBudSBjdW12YSBzxIMKdsSDIHB1bmXIm2kgbWludGVhIGN1IHRvYXTEgyBtw6JuY2FyZWEgyJlpIGLEg3V0dXJhLCBjLWFwb2kgYWwgdm9zdHJ1CmUgZHJhY3VsIQoKQXR1bmNpIEhhcmFwLUFsYiwgR2VyaWzEgywgT2NoaWzEgyDImWkgUMSDc8SDcmktTMSDyJtpLUx1bmdpbMSDIHNlIHB1bgplaSBkZSBvc3DEg3RlYXrEgyDImWkgYmVhdSBjw6J0IGxlIHRyZWJ1aWUuIERhciBjZSBhcmUgYSBmYWNlPyBwYXJjxIMKbmljaSBudSBzZSBjdW5vyJl0ZWEgZGUgdW5kZSBhdSBtw6JuY2F0IMiZaSBhdSBixIN1dDsgY8SDIGRvYXIKbcOibmNhcmUgyJlpIGLEg3V0dXLEgyBlcmEgYWNvbG8sIG51IMiZYWfEgzsgZMSDLCBjYSBsYSBvIMOubXDEg3LEg8ibaWUuCgrigJQgSGFpLCBpYSBkYcibaS12xIMgZGVvcGFydGUsIG3Eg2kgcMSDY8SDdG/ImWlsb3IsIGPEgyBudW1haSBhyJtpCmNyw6JtcG/Im2l0IG3Dom5jYXJlYSwgemlzZXLEgyBhdHVuY2kgRmzEg23Dom56aWzEgyDImWkgU2V0aWzEgywgY2FyZQphyJl0ZXB0YXUgY3UgbmVhc3TDom1wxINyLCBmaWluZCBydXDIm2kgw65uIGNvyJkgZGUgZm9hbWUgyJlpIGRlIHNldGUuCgrImGkgYXR1bmNpIHVuZGUgbnUgw65uY2VwZSBGbMSDbcOibnppbMSDIGEgY8SDcsSDYsSDbmkgZGVvZGF0xIMgw65uIGd1csSDCmPDonRlIG8gaGFyYWJhIGRlIHDDomluZSDImWkgY8OidGUgbyBpYWxvdmnIm8SDIMOubnRyZWFnxIMsIMiZaSByZXBlZGUgbWkKyJtpIGxlLWEgw65uZnVsZWNhdCDImWkgbGUtYSBmb3JmZWNhdCwgZGUgcGFyY8SDIG4tYXUgbWFpIGZvc3QuIElhcsSDClNldGlsxIMsIGTDom5kIGZ1bmR1cmlsZSBhZmFyxIMgbGEgY8OidGUgbyBidXRlLCBob3JwISDIm2ktbyBzdWdlYQpkaW50ci1vIHNpbmd1csSDIHNvcmJpdHVyxIM7IMiZaSwgcmVwZWRlLXJlcGVkZSwgbWkgyJtpIGxlLWEgc3VwdCBwZQp0b2F0ZSBkZS1hIHLDom5kdWwsIGRlIG4tYSBtYWkgcsSDbWFzIG5pY2kgbcSDY2FyIHBpY8SDdHVyxIMgZGUgdmluCnBlIGRvYWdlLgoKRHVwxIMgYWNlZWEsIEZsxINtw6JuemlsxIMgYSDDrm5jZXB1dCBhIHN0cmlnYSDDrm4gZ3VyYSBtYXJlIGPEgyBtb2FyZQpkZSBmb2FtZSDImWkgYSB6dsOicmxpIGN1IGNpb2xhbmUgw65uIG9hbWVuaWkgw65tcMSDcsSDdGXImXRpLCBjYXJlCmVyYXUgYWNvbG8gZGUgZmHIm8SDLgoKSWFyxIMgU2V0aWzEgyBzdHJpZ2EgyJlpIGVsIGPDonQgY2UgcHV0ZWEgY8SDIGNyYXDEgyBkZSBzZXRlIMiZaQp6dsOicmxlYSBjdSBkb2FnZSDImWkgY3UgZnVuZHVyaSBkZSBwb2xvYm9jIMOubiB0b2F0ZSBwxINyyJtpbGUsIGNhCnVuIG5lYnVuLgoKw45tcMSDcmF0dWwgYXR1bmNpLCBhdXppbmQgdnVpZXQgdG9jbWFpIGRpbiBjYXPEgywgaWVzZSBhZmFyxIMgyJlpLApjw6JuZCB2ZWRlIGFjZXN0ZSwgw67ImWkgcHVuZSBtw6JpbmlsZSDDrm4gY2FwIGRlIG5lY2F6LgoK4oCUIE3Eg2ksIG3Eg2ksIG3Eg2khIEFjZciZdGlhLXMgY3VyYXQgc8SDcsSDY2llIHRyaW1pc8SDIGRlIGxhIER1bW5lemV1CnBlIGNhcHUgbWV1LCB6aXNlIMOubXDEg3JhdHVsIMOubiBzaW5lLCBwbGluIGRlIGFtxINyxINjaXVuZS4gTWkgc2UKcGFyZSBjxIMsIGlhIGFjdW0sIG1pLWFtIGRhdCDImWkgZXUgcGVzdGUgb2FtZW5pLgoKSGFyYXAtQWxiIGllc2UgYXR1bmNpIGRpbiBtaWpsb2N1bCBjZWxvcmxhbMibaSDImWkgaWFyIHNlCsOubmbEg8ibaciZYXrEgyDDrm5haW50ZWEgw65tcMSDcmF0dWx1aSwgemljw6JuZDoKCuKAlCBTxIMgdHLEg2nIm2ksIGx1bWluYXRlIMOubXDEg3JhdGUhIERlLWFjdW0gY3JlZCBjxIMgbWktyJtpIGRhIGZhdGEsCmNhIHPEgyB2xIMgbMSDc8SDbSDDrm4gcGFjZSDImWkgc8SDIG5lIGR1Y2VtIMOubiB0cmVhYmEgbm9hc3RyxIMsIGPEg2NpCm5lcG90dWwgw65tcMSDcmF0dWx1aSBWZXJkZSBuZS1hIGZpIGHImXRlcHTDom5kIGN1IG5lcsSDYmRhcmUuCgrigJQgQSB2ZW5pIGVhIMiZaSB2cmVtZWEgYWNlZWEsIHZvaW5pY2UsIHppc2Ugw65tcMSDcmF0dWwgY2FtIGN1Cmp1bcSDdGF0ZSBkZSBndXLEgy4gRGFyIGlhIG1haSBhdmXIm2kgcHXIm2luxIMgcsSDYmRhcmUsIGPEg2NpIGZhdGEKbnUtaSBkZSBjZWxlIGRlIHBlIGRydW11cmksIHMtbyBsdWHIm2kgbnVtYWkgYciZYSwgY3VtIHMtYXIKw65udMOibXBsYS4gSWEgc8SDIG1haSB2ZWRlbSBjYW0gY3VtIGFyIHZlbmkgdHJlYnXImW9hcmEgYXN0YS4gTnUtaQp2b3JixIMsIGRlIG3Dom5jYXQgYcibaSBtw6JuY2F0IMiZaSBkZSBixIN1dCBhyJtpIGLEg3V0IGZpZWNhcmUgY8OidArImWFwdGVzcHJlemVjZS4gw45uc8SDIGRlIGFjdW0gw65uYWludGUgbWFpIGF2ZcibaSDImWkgY2V2YSB0cmVhYsSDIGRlCmbEg2N1dDogaWFjYSwgdsSDIGRhdSBvIG1pZXLIm8SDIGRlIHPEg23Dom7Im8SDIGRlIG1hYywgYW1lc3RlY2F0xIMgY3UKdW5hIGRlIG5pc2lwIG3Eg3J1bsibZWw7IMiZaSwgcMOibsSDIG3DomluZSBkaW1pbmVhyJvEgywgc8SDLW1pIGFsZWdlyJtpCm1hY3VsIGRlLW8gcGFydGUsIGZpciBkZSBmaXIsIMiZaSBuaXNpcHVsIGRlIGFsdMSDIHBhcnRlOyBudSBjdW12YQpzxIMgZ8SDc2VzYyB2cmV1biBmaXIgZGUgbWFjIHByaW50cmUgbmlzaXAgc2F1IHZyZXVudWwgZGUgbmlzaXAKcHJpbnRyZSBtYWMsIGPEgyBhdHVuY2kgYW0gc3RyaWNhdCBwYWNlYS4gyJhpIGRhY8SDLcibaSBwdXRlYSBzY29hdGUKbGEgY2FwxIN0IHRyZWJ1yJlvYXJhIGFzdGEsIGF0dW5jaSBvaSBtYWkgdmVkZWEgZXUuLi4gSWFyxIMgZGUgbnUsCnZlyJtpIHBsxIN0aSBjdSBjYXB1bCBvYnLEg3puaWNpYSBjZSBhyJtpIMOubnRyZWJ1aW7Im2F0IGZhyJvEgyBjdSBtaW5lLApjYSBzxIMgcHJpbmTEgyDImWkgYWzIm2lpIGxhIG1pbnRlIHbEg3rDom5kIGRlIHBhdGltYSB2b2FzdHLEgy4KCsiYaSBhcG9pLCBkdWPDom5kdS1zZSDDrm1wxINyYXR1bCDDrm4gdHJlYWJhIGx1aSwgaS1hIGzEg3NhdCBzxIMtyJlpCmJhdMSDIGNhcHVsIGN1bSB2b3IgyJl0aS4KCkF0dW5jaSBIYXJhcC1BbGIgyJlpIGN1IGFpIHPEg2kgYXUgw65uY2VwdXQgYSBzdHLDom5nZSBkaW4gdW1lcmUsCm5lcHJpY2Vww6JuZHUtc2UgY2UtaSBkZSBmxINjdXQuCgrigJQgRWksIGFwb2kgyJlhZ8SDIHbEgyBwYXJlPyBDdSBjaGnIm2lidciZdXJpIGRlIGFjZXN0ZSBzxIMgbmUgesSDYm92aW0Kbm9pPyBQw6JjbGnImWl0IG9tIGUgw65tcMSDcmF0dWwgUm/ImSEgc2UgdmVkZSBlbCwgemlzZSBhdHVuY2kKT2NoaWzEgy4gRXUsIG51LWkgdm9yYsSDLCBtxINjYXIgY8SDIGUgYciZYSBkZSDDrm50dW5lcmljLCBkZW9zZWJlc2MKdGFyZSBiaW5lIGZpcmVsZSBkZSBtYWMgZGluIGNlbGUgZGUgbmlzaXAuIERhciBudW1haSBpdcibZWFsxIMgyJlpCmd1csSDIGRlIGZ1cm5pY8SDIGFyIHRyZWJ1aSBzxIMgYWliaSBjYSBzxIMgcG/Im2kgYXB1Y2EsIGFsZWdlIMiZaQpjdWxlZ2UgbmnImXRlIGZsZWN1yJl0ZcibZSBjYSBhY2VzdGUsIMOubiBhyJlhIHNjdXJ0xIMgdnJlbWUuIEJpbmUtYQp6aXMgY2luZS1hIHppcyBjYSBzxIMgdGUgZmVyZciZdGkgZGUgb211bCByb8iZLCBjxINjaSBlIGxpyJl0YWkKZHJhY3VsIMOubiBwaWNpb2FyZSwgYWN1bSB2xINkIGV1LgoKSGFyYXAtQWxiIMOuyJlpIGFkdWNlIGF0dW5jaSBhbWludGUgZGUgYXJpcGEgY2VhIGRlIGZ1cm5pY8SDLCBvCnNjb2F0ZSBkZSB1bmRlLW8gYXZlYSBzdHLDom5zxIMsIGFwb2kgc2NhcMSDcsSDIMiZaS1pIGTEgyBmb2MgY3UgbwpidWPEg8ibaWPEgyBkZSBpYXNjxIMgYXByaW5zxIMuIMiYaSBhdHVuY2ksIG1pbnVuZSBtYXJlISBOdW1haSBpYWNhIGF1CsiZaSDDrm5jZXB1dCBhIGN1cmdlIGZ1cm5pY2lsZSBjdSBkcm9haWEsIGPDonTEgyBwdWxiZXJlIMiZaSBzcHV6xIMsCmPDonTEgyBmcnVuesSDIMiZaSBpYXJixIM7IHVuZWxlIHBlIHN1YiBwxINtw6JudCwgYWx0ZWxlIHBlIGRlYXN1cHJhCnDEg23Dom50dWx1aSDImWkgYWx0ZWxlIMOubiB6Ym9yLCBkZSBudSBzZSBtYWkgY3VybWF1IHZlbmluZC4gyJhpLArDrm50ci11biBidWMsIGF1IMiZaSBhbGVzIG5pc2lwdWwgZGUtbyBwYXJ0ZSDImWkgbWFjdWwgZGUgYWx0xIMKcGFydGU7IHPEgyBmaSBkYXQgbWlpIGRlIG1paSBkZSBsZWksIG51IGfEg3NlYWkgZmlyIGRlIG1hYyBwcmludHJlCm5pc2lwIHNhdSBmaXIgZGUgbmlzaXAgcHJpbnRyZSBtYWMuIMiYaSBhcG9pLCDDrm4gem9yaSBkZSB6aXXEgywKY8OibmQgZSBzb21udWwgbWFpIGR1bGNlLCBkZSBkb2FybWUgyJlpIHDEg23Dom50dWwgc3ViIG9tLCBvIG11bMibaW1lCmRlIGZ1cm5pY2kgZGUgY2VsZSBtxINydW7Im2VsZSBhdSBzdHLEg2LEg3R1dCDDrm5sxIN1bnRydWwgcGFsYXR1bHVpCsiZaSBhdSDDrm5jZXB1dCBhIHBpyJljYSBkaW4gc29tbiBwZSDDrm1wxINyYXR1bCwgZGUtbCBmcmlnZWF1LCBudQphbHTEg2NldmEuIMiYaSB2xIN6w6JuZHUtc2UgZWwgY3VwcmlucyBkZSBhyJlhIHVzdHVyaW1lLCBzLWEgc2N1bGF0CmN1IG5lcHVzIMOubiBtYXPEgywgY8SDY2kgbnUgbWFpIGVyYSBkZSBjaGlwIHPEgyBkb2FybcSDLCBjdW0gZG9ybWVhCmFsdGUgZMSDyJtpLCBww6JuxIMgcGUgbGEgYW1pYXrEgywgbmVzdXDEg3JhdCBkZSBuaW1lbmUuIMiYaSwgY3VtIHMtYQpzY3VsYXQsIGEgyJlpIMOubmNlcHV0IGEgY8SDdXRhIGN1IGRlLWFtxINudW50dWwgcHJpbiBhyJl0ZXJudXQsIHPEgwp2YWTEgyBjZSBwb2F0ZSBzxIMgZmllLiBEYXIgYSBnxINzaXQgbmltaWNhIHRvYXTEgywgY8SDY2kgZnVybmljaWxlCnBhcmPEgyBpbnRyYXLEgyDDrm4gcMSDbcOibnQ7IHMtYXUgbWlzdHVpdCwgZGUgbnUgc2UgyJl0aWUgY2Ugcy1hdSBtYWkKZsSDY3V0LgoK4oCUIEEgZHJhY3VsdWkgdHJlYWLEgyEgVWl0ZSBjZSBibMOibmTEgyBtaS1hIGllyJlpdCBwZSB0cnVwLiBTxIMgZmkKZm9zdCBuaW1pY2EuLi4gcGFyY8SDIG51LW1pIHZpbmUgYSBjcmVkZS4gw45uc8SDIG1haSDImXRpdSBldT8uLi4KT3JpIHDEg3JlcmVhIG3EgyDDrm7ImWFsxIMsIG9yaSBzLWEgc3RyaWNhdCB2cmVtZWEsIHppc2Ugw65tcMSDcmF0dWw7CmRpbiBkb3XEgywgdW5hIHRyZWJ1aWUgc8SDIGZpZSBudW1haWRlY8OidC4gRGFyLCBww6JuxIMgdW5hLWFsdGEsIGlhCnPEgyBtxIMgZHVjIHPEgyB2xINkOiBhbGVzLWF1IG5pc2lwdWwgZGUgbWFjIGFjZWkgbmVzcMSDbGHIm2ksIGNhcmUtbWkKcm9kIHVyZWNoaWxlIHPEgyBsZSBkYXUgZmF0YT8KCsiYaSBjw6JuZCBzZSBkdWNlIMOubXDEg3JhdHVsIMiZaSB2ZWRlIGN1bSBzZSDDrm5kZXBsaW5pc2UgZGUgYmluZQpwb3J1bmNhIGx1aSwgc2UgdW1wbGUgZGUgYnVjdXJpZS4uLiDImGksIG5lbWFpYXbDom5kIGNlIHByaWNpbsSDIHPEgwpsZSBjYXV0ZSwgcsSDbcOibmUgcGUgZ8OibmR1cmkuCgpBdHVuY2kgSGFyYXAtQWxiIGlhciBpZXNlIGRpbiBtaWpsb2N1bCBjZWxvcmxhbMibaSDImWkgc2UKw65uZsSDyJtpyJlhesSDIMOubXDEg3JhdHVsdWksIHppY8OibmQ6CgrigJQgUHJlYcOubsSDbMibYXRlIMOubXDEg3JhdGUsIGRlLWFjdW0gY3JlZCBjxIMgbWktyJtpIGRhIGZhdGEsIGNhIHPEgyB2xIMKbMSDc8SDbSDDrm4gcGFjZSDImWkgc8SDIG5lIGR1Y2VtIGRlIHVuZGUgYW0gdmVuaXQuCgrigJQgQSB2ZW5pIGVhIMiZaSB2cmVtZWEgYWNlZWEsIHZvaW5pY2UsIHppc2Ugw65tcMSDcmF0dWwsIMOubmfDom7Dom5kCnZvcmJhIHByaW50cmUgZGluyJtpLCBkYXIgcMOibsSDIGF0dW5jaSBtYWkgZXN0ZSDDrm5jxIMgdHJlYWLEgzsgaWFjYQpjZSBhdmXIm2kgZGUgZsSDY3V0OiBmYXRhIG1lYSBhcmUgc8SDIHNlIGN1bGNlIGRlc2FyxIMgdW5kZSBzZSBjdWxjxIMKdG90ZGVhdW5hLCBpYXLEgyB2b2kgc8SDIG1pLW8gc3RyxINqdWnIm2kgdG9hdMSDIG5vYXB0ZWEuIMiYaSBkYWPEgwptw6JpbmUgZGltaW5lYcibxIMgcy1hIGFmbGEgdG90IGNvbG8sIGF0dW5jaSBwb2F0ZSBzxIMgyJtpLW8gZGF1OwppYXLEgyBkZSBudSwgY2UtaSBwxIPIm2ksIGN1IG5pbWUgbnUtaSDDrm1wxINyyJtpLi4uIMOObsibZWxlcy1hyJtpPwoK4oCUIFPEgyB0csSDacibaSwgbHVtaW5hdGUgw65tcMSDcmF0ZSwgcsSDc3B1bnNlIEhhcmFwLUFsYiwgbnVtYWkgZGUKbi1hciBmaSBtYWkgbXVsdMSDIMOubnTDonJ6aWVyZSwgY8SDY2kgc3TEg3DDom51bCBtxIMgYciZdGVhcHTEgyDImWkKZ3JvemF2xIMgdXJnaWUgcG9hdGUgc8SDIGNhZMSDIHBlIGNhcHVsIG1ldSBkaW4gYXN0xIMgcHJpY2luxIMuCgrigJQgU3TEg3DDom51LXTEg3UsIGNhIHN0xINww6JudS10xIN1OyBjZSDIm2ktYSBmYWNlIGVsLCBhc3RhLWkgZGVvc2ViaXQKZGUgYmHImWPEgywgemlzZSDDrm1wxINyYXR1bCwgdWl0w6JuZHUtc2UgY2hpb3LDosiZIGxhIGTDom7ImWlpLiBJZWllLXbEgwptYWNhciDImWkgcGllbGVhIGRlIHBlIGNhcCwgY2UgYW0gZXUgZGUtYWNvbG8/IMOObnPEgyBwZSBtaW5lCmPEg3V0YcibaSBzxIMgbnUgbcSDIHNtaW50acibaTogZmF0YSDImWkgb2NoaWkgZGluIGNhcCwgY8SDY2kgYXTDonRhCnZpLWkgbGVhY3VsOyB2LWHIm2kgZHVzIHBlIGNvcGNlLCBjdSB0b2F0xIMgyJltZWNoZXJpYSB2b2FzdHLEgy4KCkR1cMSDIGFjZWFzdGEsIMOubXDEg3JhdHVsIMOuaSBsYXPEgyDDrm5jdXJjYcibaSDImWkgc2UgZHVjZSBsYSBhbGUgc2FsZS4KCuKAlCBBaWNpIMOubmPEgyB0cmVidWllIHPEgyBmaWUgdW4gZHJhYyBsYSBtaWpsb2MsIHppc2UgR2VyaWzEgywKY2zEg3RpbsOibmQgZGluIGNhcC4KCuKAlCBCYSDDrm5jxIMgZGUgY2VpIGLEg3Ryw6JuaTsgc8SDZ2VhdGEgZGUgbm9hcHRlIMiZaSBkcmFjdWwgY2VsIGRlCmFtaWF6xIN6aSwgcsSDc3B1bnNlIE9jaGlsxIMuIERhciBudSDImWktYSBqdWNhIGVsIG1lbmRyZWxlCsOubmRlbHVuZywgYciZYSBjcmVkIGV1LgoKw45uIHNmw6JyyJlpdCwgZHVyYWktdnVyYWksIHNlYXJhIHZpbmUsIGZhdGEgc2UgY3VsY8SDIMiZaSBIYXJhcEFsYgpzZSBwdW5lIGRlIHN0cmFqxIMgY2hpYXIgbGEgdciZYSBlaSwgaWFyxIMgY2VpbGFsyJtpIHNlIMOubsiZaXLEgyB0b3QKY8OidGUgdW51bC11bnVsIHDDom7EgyBsYSBwb2FydMSDLCBkdXDEgyBwb3J1bmPEgy4KCsiYaSwgY8OibmQgcGUgYXByb2FwZSBkZSBtaWV6dWwgbm9wyJtpaSwgZmF0YSDDrm1wxINyYXR1bHVpIHNlCnByZWZhY2Ugw65udHItbyBwxINzxINyaWPEgyDImWkgemJvYXLEgyBuZXbEg3p1dMSDIHByaW50cmUgY2luY2kgc3RyxINqaS4KRGFyIGPDom5kIGFqdW5nZSBwZSBsYSBzdHLEg2plcnVsIE9jaGlsxIMsIGVsLCBzaXJlaWNhbnVsLCBtaSDIm2ktbwp2ZWRlIMiZaSBkxIMgZGUgyJl0aXJlIGx1aSBQxINzxINyaWzEgywgemljw6JuZDoKCuKAlCBNxINpLCBmZXRpyJlvYXJhIMOubXDEg3JhdHVsdWkgbmUtYSB0cmFzIGJ1dHVjdWwuIEEgZHJhY3VsdWkKemfDonRpZSBkZSBmYXTEgyEgcy1hIHByZWbEg2N1dCDDrm4gcMSDc8SDcmljxIMsIGEgemJ1cmF0IGNhIHPEg2dlYXRhIHBlCmzDom5nxIMgY2VpbGFsyJtpIMiZaSBlaSBoYWJhciBuLWF1IGRlc3ByZSBhc3RhLiBFaSwgYXBvaT8gTGFzxIMtdGUKw65uIHNlYW1hIGxvciBkYWPEgyB2cmVpIHPEgyByxINtw6JpIGbEg3InIGRlIGNhcC4gRGUtYWN1bSwgbnVtYWkgbm9pCm8gcHV0ZW0gZ8SDc2kgyJlpIGFkdWNlIGxhIHVybWEgZWkuIFRhY2kgbW9sY3VtIMiZaSBoYWlkZW0gZHVwxIMKZMOibnNhLiBFdSDIm2ktb2kgYXLEg3RhLW8gcGUgdW5kZSBzZSBhc2N1bmRlLCBpYXLEgyB0dSBzxIMgbWktbwpwcmluemkgY3VtIMibaS1pIG1lyJl0ZciZdWd1bCDImWkgc8SDLWkgc3Ryw6JtYmkgZ8OidHVsIG9sZWFjxIMsIHPEgyBzZQrDrm52ZcibZSBlYSBkZSBhbHTEgyBkYXTEgyBhIG1haSBwdXJ0YSBsdW1lYSBwZSBkZWdldGUuCgrImGkgYXR1bmNpLCBvZGF0xIMgyJlpIHBvcm5lc2MgZWkgZHVwxIMgZMOibnNhLCDImWkgbnUgbWVyZyB0b2NtYWkKbXVsdCDImWkgT2NoaWzEgyB6aWNlOgoK4oCUIE3Eg2kgUMSDc8SDcmlsxIMsIGlhY8SDdMSDLW8sIGlhISBjb2xvLCDDrm4gZG9zdWwgcMSDbcOibnR1bHVpLAp0dXBpbGF0xIMgc3ViIHVtYnJhIGllcHVyZWx1aTsgcHVuZSBtw6JuYSBwZSBkw6Juc2EgyJlpIG4tbyBsxINzYSEKClDEg3PEg3JpbMSDIGF0dW5jaSBzZSBsxIPIm2XImXRlIGPDonQgY2UgcG9hdGUsIMOubmNlcGUgYSBib2pixINpIHByaW4KdG9hdGUgYnVydWllbmlsZSDImWksIGPDom5kIHPEgyBwdW7EgyBtw6JuYSBwZSBkw6Juc2EsIHpiciEgcGUgdsOicmZ1bAp1bnVpIG11bnRlLCDImWkgc2UgYXNjdW5kZSBkdXDEgyBvIHN0w6JuY8SDLgoK4oCUIElhY8SDdMSDLW9pLCBtxINpLCBjb2xvLCDDrm4gdsOicmZ1bCBtdW50ZWx1aSwgZHVwxIMgc3TDom5jYSBjZWVhLAp6aXNlIE9jaGlsxIMuCgpQxINzxINyaWzEgyBhdHVuY2kgc2Ugw65uYWzIm8SDIHB1yJtpbiDImWkgw65uY2VwZSBhIGNvdHJvYsSDaSBwZSBkdXDEgwpzdMOibmNpOyDImWkgY8OibmQgc8SDIHB1bsSDIG3Dom5hIHBlIGTDom5zYSwgemJyISDImWkgZGUgYWNvbG8gyJlpIHNlCmR1Y2UgZGUgc2UgYXNjdW5kZSB0b2NtYWkgZHVwxIMgbHVuxIMuCgrigJQgTcSDaSBQxINzxINyaWzEgywgaWFjxIN0xIMtb2ksIGlhISBjb2xvLCBkdXDEgyBsdW7EgywgemlzZSBPY2hpbMSDOwpjxINjaSBudSBwb3QgZXUgcy1vIGFqdW5nLCBzxIMtaSBkYXUgbyBzY8SDcm3Eg27Eg3R1csSDIGJ1bsSDLgoKQXR1bmNpIFDEg3PEg3JpbMSDIHNlIGRlyJlpcsSDIG9kYXTEgyDImWkgc2Ugw65uYWzIm8SDIHDDom7EgyBsYSBsdW7Egy4gQXBvaSwKY3VwcmluesOibmQgbHVuYSDDrm4gYnJhyJtlLCBnxINidWllyJl0ZSBwxINzxINyaWNhLCBtaSDIm2ktbyDDrm7ImWZhY8SDIGRlCmNvYWTEgyDImWkgY8OidCBwZSBjZSBzxIMtaSBzdWNlYXNjxIMgZ8OidHVsLiBFYSBhdHVuY2kgc2UgcHJlZmFjZSDDrm4KZmF0xIMgyJlpIHN0cmlnxIMgw65uc3DEg2ltw6JudGF0xIM6CgrigJQgRMSDcnVpZciZdGUtbWkgdmlhyJthLCBQxINzxINyaWzEgywgY8SDIHRlLW9pIGTEg3J1aSDImWkgZXUgY3UgbWlsxIMgyJlpCmN1IGRhcnVyaSDDrm1wxINyxIN0ZciZdGksIGHImWEgc8SDIHRyxINpZciZdGkhCgrigJQgQmEgY8SDIGNoaWFyIGPEgyBlcmFpIHPEgyBuZSBkxINydWllyJl0aSBjdSBtaWzEgyDImWkgY3UgZGFydXJpCsOubXDEg3LEg3RlyJl0aSwgZGFjxIMgbnUgdGUgdmVkZWFtIGPDom5kIGFpIHBhyJlsaXQtbywgZmFybWF6b2FuxIMgY2UKZciZdGkhIHppc2UgT2NoaWzEgy4gyJh0aXUgY8SDIGFtIHRyYXMgbyBkdXJkdXLEgyBidW7EgyBjxIN1dMOibmR1LXRlLgpJYSwgbWFpIGJpbmUgaGFpIGxhIGN1bGN1yJksIGPEgyBzZSBmYWNlIHppdcSDIGFjdciZaS4gyJgtYXBvaSwgY2UtYQptYWkgZmkgYSBtYWkgZmkuCgrImGkgb2RhdMSDIG1pIMibaS1vIMOubsiZZmFjxIMgZWksIHVudWwgZGUtbyBtw6JuxIMgyJlpIGFsdHVsIGRlIGNlYWxhbHTEgwrImWkgaGFpISBoYWksIGhhaSEgw65uIHpvcmkgZGUgeml1xIMgYWp1bmcgbGEgcGFsYXQgyJlpLCB0cmVjw6JuZCBjdQpkw6Juc2EgcHJpbnRyZSBzdHLEg2ppLCBvIHNpbGVzYyBzxIMgaW50cmUgw65uIG9kYWlhIGVpLCB0b3QgY3VtIGEKaWXImWl0LgoK4oCUIEVpLCBIYXJhcC1BbGIsIHppc2UgYXR1bmNpIE9jaGlsxIMsIGRhY8SDIG51IGVyYW0gZXUgyJlpIGN1ClDEg3PEg3JpbMSDLCBjZSBmxINjZWHIm2kgdm9pIGFjdW0/IElhY2EgYciZYSwgdG90IG9tdWwgYXJlIHVuIGRhciDImWkKdW4gYW1hcjsgyJlpIHVuZGUgcHJpc29zZciZdGUgZGFydWwgbnUgc2UgbWFpIGJhZ8SDIMOubiBzZWFtxIMKYW1hcnVsLiBBbWFyIGVyYSBzxIMgZmllIGRlIHZvaSwgZGUgbnUgZXJhbSBub2kgYW3Dom5kb2kuIMiYaSBjdQpzdHLEg2p1aXJlYSB2b2FzdHLEgywgZXJhIHZhaSBkZSBwaWVsZWEgbm9hc3RyxIMhCgpIYXJhcC1BbGIgyJlpIGNlaWxhbMibaSwgbmVtYWlhdsOibmQgY2UgemljZSwgcGxlYWPEgyBjYXB1bApydciZaW5hyJtpLCBtdWzIm3VtaW5kIGx1aSBQxINzxINyaWzEgyDImWkgdmVzdGl0dWx1aSBPY2hpbMSDLCBjxINjaQpsZS1hdSBmb3N0IGNhIG5pyJl0ZSBmcmHIm2kuCgrImGkgYXR1bmNpLCBudW1haSBpYWNhIMiZaSDDrm1wxINyYXR1bCB2aW5lIGNhIHVuIGxldS1wYXJhbGV1LCBzxIMtyJlpCmlhIGZhdGEgcGUgc2VhbcSDIMiZaSwgY8OibmQgbyBnxINzZciZdGUgc3ViIHN0cmFqxIMsIGR1cMSDIGN1bSBudSBzZQphyJl0ZXB0YSBlbCwgbnVtYS1pIHNjw6JudGVpYXUgb2NoaWkgw65uIGNhcCBkZSBjaXVkxIMsIGRhciBudSBhdnUKY2UgZmFjZS4KCkF0dW5jaSBIYXJhcC1BbGIgaWFyIHNlIMOubmbEg8ibaciZYXrEgyDDrm5haW50ZWEgw65tcMSDcmF0dWx1aSwgemljw6JuZDoKCuKAlCBMdW1pbmF0ZSDDrm1wxINyYXRlLCBkZS1hY3VtIGNyZWQgY8SDIG1pLcibaSBkYSBmYXRhLCBjYSBzxIMgdsSDCmzEg3PEg20gw65uIHBhY2UgyJlpIHPEgyBuZSBkdWNlbSDDrm4gdHJlYWJhIG5vYXN0csSDLgoK4oCUIEJpbmUsIHZvaW5pY2UsIHppc2Ugw65tcMSDcmF0dWwgcG9zb21vcsOidDsgYSB2ZW5pIGVhIMiZaSB2cmVtZWEKYWNlZWEuIMOObnPEgyBldSBtYWkgYW0gbyBmYXTEgywgbHVhdMSDIGRlIHN1ZmxldCwgdG90IGRlIG8gdsOicnN0xIMKY3UgZmF0YSBtZWE7IMiZaSBudSBlIGRlb3NlYmlyZSDDrm50cmUgZMOibnNlbGUgbmljaSBsYSBmcnVtdXNlyJtlLApuaWNpIGxhIHN0YXQsIG5pY2kgbGEgcHVydGF0LiBIYWksIMiZaSBkYWPEgy1pIGN1bm9hyJl0ZS1vIGNhcmUtaSBhCm1lYSBhZGV2xINyYXTEgywgaWEtyJtpLW8gyJlpIGR1Y2XIm2ktdsSDIGRlIHBlIGNhcHVsIG1ldSwgY8SDIG1pLWHIm2kKc2NvcyBwZXJpIGFsYmksIGRlIGPDom5kIGHIm2kgdmVuaXQuIElhY2EsIG3EgyBkdWMgc8SDIGxlIHByZWfEg3Rlc2MsCnppc2Ugw65tcMSDcmF0dWwuIFR1IHZpbsSDIGR1cMSDIG1pbmUsIMiZaSwgZGFjxIMtaSBnaGljaS1vLCBmZXJpY2UgZGUKdGluZSBhIGZpLiBJYXLEgyBkZSBudSwgbHVhyJtpLXbEgyBjYXRyYWZ1c2VsZSDImWkgw65uY2VwZcibaSBhIHbEgwpjxINyxINixINuaSBkZSBsYSBjYXNhIG1lYSwgY8SDY2kgbnUgdsSDIG1haSBwb3Qgc3VmZXJpIQoKyJhpIGR1Y8OibmR1LXNlIMOubXDEg3JhdHVsLCBwdW5lIGRlIHBpYXB0xINuxIMgyJlpIMOubWJyYWPEgyBsYSBmZWwgcGUKYW3Dom5kb3XEgyBmZXRlbGUgyJlpIGFwb2kgZMSDIHBvcnVuY8SDIHPEgyB2aWUgSGFyYXAtQWxiIHPEgyBnaGljZWFzY8SDCmZhdGEgw65tcMSDcmF0dWx1aS4KCkhhcmFwLUFsYiwgdsSDesOibmR1LXNlIHB1cyDDrm4gw65uY3VyY2FsxIMsIG51IG1haSDImXRpYSBjZSBzxIMgZmFjxIMKyJlpIMOubmNvdHJvIHPEgy1vIGRlYSBjYSBzxIMgbnUgZ3JlyJllYXNjxIMgdG9jbWFpIGFjdW0sIGxhIGR1Y8SDLiDImGksCm1haSBzdMOibmQgZWwgcGUgZ8OibmR1cmkgb2xlYWPEgywgY3VtIGUgb211bCB0dWxidXJhdCwgw67ImWkgYWR1Y2UKYW1pbnRlIGRlIGFyaXBhIGNlYSBkZSBhbGJpbsSDIMiZaSwgc2NvyJvDom5kLW8gZGUgdW5kZS1vIGF2ZWEKc3Ryw6Juc8SDLCBzY2FwxINyxIMgyJlpLWkgZMSDIGZvYyBjdSBvIGJ1Y8SDyJtpY8SDIGRlIGlhc2PEgyBhcHJpbnPEgy4gyJhpCmF0dW5jaSwgbnVtYWkgaWFjYSBzZSBwb21lbmXImXRlIGN1IGNyxINpYXNhIGFsYmluZWxvci4KCuKAlCBDZSBuZXZvaWUgdGUtYSBhanVucyBkZSBtaW5lLCBIYXJhcC1BbGI/IHppc2UgZWEsIHpidXLDom5kIHBlCnVtxINydWwgc8SDdS4gU3B1bmUtbWksIGPEg2NpIHN1bnQgZ2F0YSBzxIMgdGUgc2x1amVzYy4KCkF0dW5jaSBIYXJhcC1BbGIgw65uY2VwZSBhLWkgc3B1bmUgdG9hdGUgY3UgZGUtYW3Eg251bnR1bCDImWkgbwpyb2FnxIMgZGUgdG/Im2kgZHVtbmV6ZWlpIGNhIHPEgy1pIGRlYSBhanV0b3IuCgrigJQgTi1haSBncmlqxIMsIEhhcmFwLUFsYiwgemlzZSBjcsSDaWFzYSBhbGJpbmVsb3I7IGxhcycgY8SDIHRlIGZhYwpldSBzLW8gY3Vub8iZdGkgyJlpIGRpbnRyLW8gbWllLiBIYWksIGludHLEgyDDrm4gY2FzxIMgY3UKw65uZHLEg3puZWFsxIMsIGPEg2NpIGFtIHPEgyBmaXUgyJlpIGV1IHBlLWFjb2xvLiDImGkgY3VtIMOuaSBpbnRyYSwKc3RhaSBwdcibaW4gyJlpIHRlIHVpdMSDIGxhIGZldGU7IMiZaSBjYXJlLWkgdmVkZWEtbyBjxIMgc2UgYXDEg3LEgyBjdQpuxINmcmFtYSwgc8SDIMiZdGlpIGPEgyBhY2VlYSBlc3RlIGZhdGEgw65tcMSDcmF0dWx1aS4KCkF0dW5jaSBIYXJhcC1BbGIgaW50csSDLCBjdSBhbGJpbmEgcGUgdW3Eg3IsIMOubiBvZGFpYSB1bmRlIGVyYQrDrm1wxINyYXR1bCDImWkgY3UgZmV0ZWxlLCBhcG9pIHN0xIMgcHXIm2luIGRlb3BhcnRlIMiZaSDDrm5jZXBlIGEgc2UKdWl0YSBjw6JuZCBsYSB1bmEsIGPDom5kIGxhIGFsdGEuIMiYaSBjdW0gc3RhIGVsIGRyZXB0IGNhIGx1bcOibmFyZWEKyJlpIGxlIHByaXZlYSwgY3UgYsSDZ2FyZSBkZSBzZWFtxIMsIGNyxINpYXNhIGFsYmluZWxvciB6Ym9hcsSDIHBlCm9icmF6dWwgZmV0ZWkgw65tcMSDcmF0dWx1aS4gQXR1bmNpIGVhLCB0cmVzxINyaW5kLCBvZGF0xIMgw65uY2VwZSBhCsibaXBhIMiZaSBhIHNlIGFwxINyYSBjdSBuxINmcmFtYSwgY2EgZGUgdW4gZHXImW1hbi4gTHVpIEhhcmFwLUFsYgphdMOidGEgaS1hIHRyZWJ1aXQ6IMOubmRhdMSDIGZhY2UgY8OiyJtpdmEgcGHImWkgc3ByZSBkw6Juc2EsIG8gYXB1Y8SDCmZydW11yJllbCBkZSBtw6JuxIMgyJlpIHppY2Ugw65tcMSDcmF0dWx1aToKCuKAlCBMdW1pbmFyZWEtdm9hc3RyxIMsIGRlLWFjdW0gY3JlZCBjxIMgbnUgbWktyJtpIG1haSBmYWNlIG5pY2kgbwrDrm1waWVkaWNhcmUsIHBlbnRydSBjxIMgYW0gYWR1cyDDrm50cnUgw65uZGVwbGluaXJlIHRvdCBjZWVhIGNlCm5lLWHIm2kgcG9ydW5jaXQuCgrigJQgRGluIHBhcnRlYSBtZWEgcG/Im2kgcy1vIGllaSBkZS1hY3VtLCBIYXJhcC1BbGIsIHppc2UKw65tcMSDcmF0dWwsIG92aWxpdCDImWkgc2FyYsSDZCBsYSBmYcibxIMgZGUgc3VwxINyYXJlIMiZaSBydciZaW5lOyBkYWPEgwpuLWEgZm9zdCBlYSB2cmVkbmljxIMgc8SDIHbEgyByxINwdWllIGNhcHVsLCBmaWkgbcSDY2FyIHR1IHZyZWRuaWMKcy1vIHN0xINww6JuZciZdGksIGPEg2NpIGFjdW0gyJtpLW8gZGF1IGN1IHRvYXTEgyBpbmltYS4KCkhhcmFwLUFsYiBtdWzIm3VtZciZdGUgYXR1bmNpIMOubXDEg3JhdHVsdWkgyJlpIGFwb2kgemljZSBmZXRlaTog4oCUCkRlLWFjdW0gcHV0ZW0gc8SDIG1lcmdlbSwgY8SDY2kgc3TEg3DDom51LW1ldSwgbHVtaW5hcmVhLXNhIG5lcG90dWwKw65tcMSDcmF0dWx1aSBWZXJkZSwgYSBmaSDDrm1ixIN0csOibml0IGHImXRlcHTDom5kdS1txIMuCgrigJQgSWEgbWFpIMOubmfEg2R1aWXImXRlIHB1yJtpbiwgbmVyxINiZMSDdG9ydWxlLCB6aXNlIGZhdGEKw65tcMSDcmF0dWx1aSwgbHXDom5kIG8gdHVydHVyaWPEgyDDrm4gYnJhyJtlLCBzcHVuw6JuZHUtaSBudSDImXRpdSBjZQpsYSB1cmVjaGUgyJlpIHPEg3J1dMOibmQtbyBjdSBkcmFnOyBudSB0ZSBncsSDYmkgYciZYSwgSGFyYXAtQWxiLCBjxIMKdGUtaSBwcmlwaS4gU3RhaSwgY8SDIG1haSBhaSDImWkgY3UgbWluZSBvbGVhY8SDIGRlIHZvcmLEgzogw65uYWludGUKZGUgcG9ybmlyZSwgdHJlYnVpZSBzxIMgbWVhcmfEgyBjYWx1bCB0xIN1IMiZaSBjdSB0dXJ0dXJpY2EgbWVhCnPEgy1taSBhZHVjxIMgdHJlaSBzbWljZWxlIGRlIG3Eg3IgZHVsY2UgyJlpIGFwxIMgdmllIMiZaSBhcMSDIG1vYXJ0xIMKZGUgdW5kZSBzZSBiYXQgbXVuyJtpaSDDrm4gY2FwZXRlLiDImGkgZGUtYSB2ZW5pIHR1cnR1cmljYSBtZWEKw65uYWludGUgY3Ugc21pY2VsZWxlIMiZaSBhcGEsIGlhLcibaSBuxINkZWpkZWEgZGVzcHJlIG1pbmUsIGPEg2NpIG51Cm1lcmcsIGZlcmVhc2PEgyBEdW1uZXpldSEgSWFyxIMgZGUtaSBhdmVhIG5vcm9jIMiZaS1hIHZlbmkgY2FsdWwKdMSDdSBtYWkgw65udMOiaSDImWkgbWktbyBhZHVjZSBjZWxlIHBvcnVuY2l0ZSwgc8SDIMiZdGlpIGPEgyBtZXJnIGN1CnRpbmUsIG9yaXVuZGUgbWktaSBkdWNlOyBzLWEgbcOibnR1aXQgc29jb3RlYWxhLgoKyJhpIGF0dW5jaSwgb2RhdMSDIHBvcm5lc2MgyJlpIHR1cnR1cmljYSDImWkgY2FsdWwsIGZ1Z2luZCBwZQrDrm50cmVjdXRlLCBjw6JuZCBwZSBzdXMsIGPDom5kIHBlIGpvcywgZHVwxIMgY3VtIGNlcmVhIHRyZWJ1aW7Im2EuCgpEYXIgdHVydHVyaWNhLCBmaWluZCBtYWkgdciZb2FyxIMsIGFqdW5nZSBtYWkgw65uYWludGU7IMiZaSBww6JuZGluZAp0b2NtYWkgY8OibmQgZXJhIHNvYXJlbGUgw65uIGNydWNlLCBkZSBzZSBvZGlobmVhdSBtdW7Im2lpIG51bWFpCnBlbnRydSBvIGNsaXBpdMSDLCBzZSByZXBlZGUgY2EgcHJpbiBmb2MgyJlpIGlhIHRyZWkgc21pY2VsZSBkZQptxINyIGR1bGNlIMiZaSBhcMSDIHZpZSDImWkgYXDEgyBtb2FydMSDLCDImWkgYXBvaSBjYSBmdWxnZXJ1bCBzZQrDrm50b2FyY2Ugw65uYXBvaS4gyJhpLCBjw6JuZCBwZSBsYSBwb2FydGEgbXVuyJtpbG9yLCBjYWx1bCDDrmkgaWVzZQrDrm5haW50ZSwgbyBwcm9wZciZdGUgw65uIGNhbGUgyJlpIG8gaWEgY3UgbcSDZ3VsZWxpbGUsIHppY8OibmR1LWk6CgrigJQgVHVydHVyaWPEgy1yaWPEgywgZHJhZ8SDIHDEg3PEg3JpY8SDLCBhZMSDIGxhIG1pbmUgY2VsZSB0cmVpIHNtaWNlbGUKZGUgbcSDciBkdWxjZSwgYXBhIGNlYSB2aWUgyJlpIGNlYSBtb2FydMSDLCDImWkgdHUgZHUtdGUgw65uYXBvaQpkZS3Im2kgaWEgYWx0ZWxlIMiZaSBtaS1pIGFqdW5nZSBwZSBkcnVtLCBjxINjaSBlyJl0aSBtYWkgc3ByaW50ZW7EgwpkZWPDonQgbWluZS4gSGFpLCBudSBtYWkgc3RhIGxhIMOubmRvaWFsxIMgyJlpIGTEgy1taS1sZSwgY8SDY2kgYXR1bmNpCmFyZSBzxIMgZmllIGJpbmUgyJlpIGRlIHN0xINww6JudS1tZXUsIMiZaSBkZSBzdMSDcMOibsSDLXRhLCDImWkgZGUgbWluZSwKyJlpIGRlIHRpbmU7IGlhcsSDIGRlIG51IG1pIGxpLWkgZGEsIHN0xINww6JudS1tZXUgSGFyYXAtQWxiIGVzdGUgw65uCnByaW1lamRpZSwgyJlpIGRlIG5vaSDDrm5jxIMgbi1hcmUgc8SDIGZpZSBiaW5lLgoKVHVydHVyaWNhIHBhcmPEgyBuLWFyIGZpIHZvaXQuIERhciBjYWx1bCBuLW8gbWFpIMOubnRyZWFixIMgZGUgY2UtaQplIGNvam9jdWw7IHNlIHJlcGVkZSDImWktaSBpYSBhcGEgyJlpIHNtaWNlbGVsZSBjdSBoYXBjYSDImWkgYXBvaQpmdWdlIGN1IGTDom5zZWxlIGxhIGZhdGEgw65tcMSDcmF0dWx1aSDImWkgaSBsZSBkxIMsIGRlIGZhyJvEgyBjdQpIYXJhcC1BbGIuIEF0dW5jaSBsdWkgSGFyYXAtQWxiIGkgcy1hIHVtcGx1dCBpbmltYSBkZSBidWN1cmllLgoKVmluZSBlYSDImWkgdHVydHVyaWNhIG1haSBwZSB1cm3EgywgZGFyIGNlLcibaSBlIGJ1bsSDPyDigJQgQWxlaSwKyJtvbGluxIMgY2UtbWkgZciZdGksIHppc2UgZmF0YSDDrm1wxINyYXR1bHVpOyBkYScgYmluZSBtLWFpIHbDom5kdXQuCkRhY8SDIGUgYciZYSwgaGFpLCBwb3JuZciZdGUgY2hpYXIgYWN1bSBsYSDDrm1wxINyYXR1bCBWZXJkZSDImWkKdmVzdGXImXRlLWkgY8SDIHZlbmltIMiZaSBub2kgw65uIHVybcSDLgoKQXR1bmNpIHR1cnR1cmljYSBwb3JuZciZdGUuIElhcsSDIGZhdGEgw65tcMSDcmF0dWx1aSDDrm5nZW51bmNoZQpkaW5haW50ZWEgdMSDdMOibmUtc8SDdSDImWkgemljZToKCuKAlCBCaW5lY3V2w6JudGVhesSDLW3EgywgdGF0xIMsIMiZaSByxINtw6JpIHPEg27Eg3RvcyEgU2UgdmVkZSBjxIMgYciZYSBtaS1hCmZvc3Qgc29ydGl0IMiZaSBuLWFtIGNlIGZhY2U7IHRyZWJ1aWUgc8SDIG1lcmcgY3UgSGFyYXBBbGIsIMiZaQpwYWNlIGJ1bsSDIQoKRHVwxIMgYWNlYXN0YSwgw67ImWkgaWEgY2VsZSB0cmVidWl0b2FyZSBsYSBkcnVtLCBhcG9pIMOubmNhbGVjxIMgyJlpCmVhIHBlIHVuIGNhbCBuxIN6ZHLEg3ZhbiDImWkgc3TEgyBnYXRhIGRlIHBvcm5pcmUuIElhcsSDIEhhcmFwQWxiLApsdcOibmR1LciZaSBvYW1lbmlpIHPEg2ksIMOubmNhbGVjxIMgyJlpIGVsIMiZaSBwb3JuZXNjIHNwcmUgw65tcMSDcsSDyJtpZSwKRHVtbmV6ZXUgc8SDIG5lIMibaWUsIGPEgyBjdXbDom50dWwgZGluIHBvdmVzdGUsIMOubmFpbnRlIG11bHQgbWFpCmVzdGUuCgpNZXJzLWF1IGVpIMiZaSB6aSDImWkgbm9hcHRlLCBudSBzZSDImXRpZSBjw6J0IGF1IG1lcnM7IMiZaSwgZGUgbGEgdW4KbG9jLCBHZXJpbMSDLCBGbMSDbcOibnppbMSDIMiZaSBTZXRpbMSDLCBQxINzxINyaS1MxIPIm2ktTHVuZ2lsxIMgyJlpCm7Eg3pkcsSDdmFudWwgT2NoaWzEgyBzZSBvcHJlc2MgY3UgdG/Im2lpIMOubiBjYWxlLCBzZSBvcHJlc2MgyJlpIHppYwpjdSBqYWxlOgoK4oCUIEhhcmFwLUFsYiwgbWVyZ2kgc8SDbsSDdG9zISBEZS1hbSBmb3N0IHLEg2ksIHR1IG5pLWkgaWVydGEsIGPEg2NpCsiZaSByxIN1bCBjw6J0ZW9kYXTEgyBwcmluZGUgYmluZSBsYSBjZXZhLgoKSGFyYXAtQWxiIGxlIG11bMibdW1lyJl0ZSDImS1hcG9pIHBsZWFjxIMgbGluaciZdGl0LiBGYXRhIHZlc2VsIMOuaQp6w6JtYmXImXRlLCBsdW5hLW4gY2VyIGEgYXNmaW7Im2l0LiBEYXIgw65uIHBpZXB0dWwgbG9yIHLEg3NhcmUuLi4gQ2UKcsSDc2FyZT8gSWEsIHVuIGRvcjsgc29hcmUgbcOibmRydSwgbHVtaW5vcyDImWkgw65uIHNpbmUgYXJ6xIN0b3IsIGNlCnNlIG5hyJl0ZSBkaW4gc2PDom50ZWlhIHVudWkgb2NoaSBmZXJtZWPEg3RvciEKCsiYaSBtYWkgbWVyZyBlaSBjw6J0IG1haSBtZXJnLCDImWkgZGUgY2UgbWVyZ2VhdSDDrm5haW50ZSwgZGUgY2UgbHVpCkhhcmFwLUFsYiBpIHNlIHR1bGJ1cmF1IG1pbsibaWxlLCB1aXTDom5kdS1zZSBsYSBmYXTEgyDImWkgdsSDesOibmQtbwpjw6J0IGVyYSBkZSB0w6JuxINyxIMsIGRlIGZydW1vYXPEgyDImWkgcGxpbsSDIGRlIHZpbsSDLW5jb2FjZS4KClPEg2zEg8ibaWxlIGRpbiBHcsSDZGluYSBVcnN1bHVpLCBwaWVsZWEgyJlpIGNhcHVsIGNlcmJ1bHVpIGxlLWEgZHVzCmxhIHN0xINww6JudS1zxIN1IGN1IHRvYXTEgyBpbmltYS4gRGFyIHBlIGZhdGEgw65tcMSDcmF0dWx1aSBSb8iZIG1haQpudS1pIHZlbmVhIHMtbyBkdWPEgywgZmlpbmQgbmVidW4gZGUgZHJhZ29zdGVhIGVpLiBDxINjaSBlcmEgYm9ib2MKZGUgdHJhbmRhZmlyIGRpbiBsdW5hIGx1aSBtYWksIHNjxINsZGF0IMOubiByb3VhIGRpbWluZcibaWksCmRlem1pZXJkYXQgZGUgY2VsZSDDrm50w6JpIHJhemUgYWxlIHNvYXJlbHVpLCBsZWfEg25hdCBkZSBhZGllcmVhCnbDom50dWx1aSDImWkgbmVhdGlucyBkZSBvY2hpaSBmbHV0dXJpbG9yLiBTYXUsIGN1bSBzLWFyIG1haSB6aWNlCmxhIG5vaSDDrm4gyJvEg3LEg25lyJl0ZSwgZXJhIGZydW1vYXPEgyBkZSBtYW1hIGZvY3VsdWk7IGxhIHNvYXJlIHRlCnB1dGVhaSB1aXRhLCBpYXIgbGEgZMOibnNhIGJhLiDImGkgZGUtYWNlZWEgSGFyYXAtIEFsYiBvIHByxINwxINkZWEKZGluIG9jaGkgZGUgZHJhZ8SDIGNlLWkgZXJhLiBOdS1pIHZvcmLEgywgyJlpIGVhIGZ1cmEgY3Ugb2NoaWksIGRpbgpjw6JuZCDDrm4gY8OibmQsIHBlIEhhcmFwLUFsYiwgyJlpIMOubiBpbmltYSBlaSBwYXJjxIMgc2UgcGV0cmVjZWEgbnUKyJl0aXUgY2UuLi4gcG9hdGUgdnJldW4gZG9yIGFzY3VucywgY2FyZSBudS1pIHZlbmVhIGEtbCBzcHVuZS4KVm9yYmEgY8OibnRlY3VsdWk6CgpGdWdpIGRlLWFjb2xlLCB2aW7Egy1uY29hY2UhCsiYZXppIGJpbmnImW9yLCBudS1taSBkYSBwYWNlIQpzYXUgbWFpIMiZdGl1IGV1IGN1bSBzxIMgemljLCBjYSBzxIMgbnUgZ3JlyJllc2M/IERhciDImXRpdSBhdMOidGEsIGPEgwplaSBtZXJnZWF1IGbEg3LEgyBhIHNpbcibaSBjxIMgbWVyZywgcMSDcsOibmR1LWxpLXNlIGNhbGVhIHNjdXJ0xIMgyJlpCnZyZW1lYSDImWkgbWFpIHNjdXJ0xIM7IHppdWEgY2VhcyDImWkgY2Vhc3VsIGNsaXDEgzsgZMSDLCBjdW0gZSBvbXVsCmPDom5kIG1lcmdlIGxhIGRydW0gY3UgZHJhZ29zdGVhIGFsxIN0dXJlYS4KCk51IMiZdGlhIHPEg3JtYW51bCBIYXJhcC1BbGIgY2UtbCBhyJl0ZWFwdMSDIGFjYXPEgywgY8SDY2kgbnUgcy1hciBtYWkKZmkgZ8OibmRpdCBsYSBkZS1hbGRlIGFjZXN0ZWEuCgrDjm5zxIMgdm9yYmEgY8OibnRlY3VsdWk6CgpEZS1hciDImXRpIG9tdWwgY2UtYXIgcMSDyJtpLApEaW5haW50ZSBzLWFyIHDEg3ppIQpEYXIgaWFjYSBjZSBtLWFtIGFwdWNhdCBkZSBzcHVzLiBNYWkgYmluZSB2xIMgc3B1bmVhbSBjxIMKdHVydHVyaWNhIGFqdW5zZXNlIGxhIMOubXDEg3JhdHVsIFZlcmRlIMiZaS1sIMOubsiZdGlpbsibYXNlIGPEgyB2aW5lCsiZaSBIYXJhcC1BbGIgY3UgZmF0YSDDrm1wxINyYXR1bHVpIFJvyJkuCgpBdHVuY2kgw65tcMSDcmF0dWwgVmVyZGUgYSDImWkgw65uY2VwdXQgYSBmYWNlIHByZWfEg3RpcmUsIGNhIHBlbnRydQpvIGZhdMSDIGRlIMOubXDEg3JhdCwgZMOibmQgyJlpIHBvcnVuY8SDIHPEgyBsZSBpYXPEgyDDrm50cnUgw65udMOibXBpbmFyZS4KSWFyxIMgU3DDom51bCBpY25lYSDDrm4gc2luZSDImWkgc2UgZ8OibmRlYSBudW1haSBsYSByxIN6YnVuYXJlLgoKw45uIHNmw6JyyJlpdCwgbWFpIG1lcmdlIEhhcmFwLUFsYiBjdSBmYXRhIMOubXDEg3JhdHVsdWkgY8OidCBtYWkKbWVyZ2UsIMiZaSBkZSBsYSBvIHZyZW1lIGFqdW5nIMiZaSBlaSBsYSDDrm1wxINyxIPIm2llLgoKyJhpLCBjw6JuZCBjb2xvLCBudW1haSBpYWNhIGNlIGxlIGllcyDDrm5haW50ZSDDrm1wxINyYXR1bCBWZXJkZSwKZmV0ZWxlIHNhbGUsIFNww6JudWwgyJlpIHRvYXTEgyBjdXJ0ZWEgw65tcMSDcsSDdGVhc2PEgywgY2Egc8SDLWkKcHJpbWVhc2PEgy4gyJhpIHbEg3rDom5kIFNww6JudWwgY8OidCBlIGRlIGZydW1vYXPEgyBmYXRhIMOubXDEg3JhdHVsdWkKUm/ImSwgb2RhdMSDIHNlIHJlcGVkZSBzxIMgbyBpYSDDrm4gYnJhyJtlIGRlIHBlIGNhbC4gRGFyIGZhdGEgw65pCnB1bmUgYXR1bmNpIG3Dom5hIHBlIHBpZXB0LCDDrmwgYnLDom5jZciZdGUgY8OidCBjb2xvIMiZaSB6aWNlOgoK4oCUIExpcHNlyJl0ZSBkaW5haW50ZWEgbWVhLCBTcMOibnVsZSEgRG9hciBuLWFtIHZlbml0IHBlbnRydSB0aW5lLArImS1hbSB2ZW5pdCBwZW50cnUgSGFyYXAtQWxiLCBjxINjaSBlbCBlc3RlIGFkZXbEg3JhdHVsIG5lcG90IGFsCsOubXDEg3JhdHVsdWkgVmVyZGUuCgpBdHVuY2kgw65tcMSDcmF0dWwgVmVyZGUgyJlpIGZldGVsZSBzYWxlIGF1IHLEg21hcyDDrm5jcmVtZW5pyJtpIGRlCmNlZWEgY2UgYXUgYXV6aXQuIElhciBTcMOibnVsLCB2xIN6w6JuZCBjxIMgaSBzLWEgZGF0IHZpY2xlyJl1Z3VsIHBlCmZhyJvEgywgc2UgcmVwZWRlIGNhIHVuIGPDomluZSB0dXJiYXQgbGEgSGFyYXAtQWxiIMiZaS1pIHpib2FyxIMKY2FwdWwgZGludHItbyBzaW5ndXLEgyBsb3ZpdHVyxIMgZGUgcGFsb8iZLCB6aWPDom5kOgoK4oCUIE5hISBhyJlhIHRyZWJ1aWUgc8SDIHDEg8ibZWFzY8SDIGNpbmUgY2FsY8SDIGp1csSDbcOibnR1bCEgRGFyIGNhbHVsCmx1aSBIYXJhcC1BbGIgw65uZGF0xIMgc2UgcmVwZWRlIMiZaSBlbCBsYSBTcMOibiDImWktaSB6aWNlOgoK4oCUIFDDom4tYWljaSwgU3DDom51bGUhIMiYaSBvZGF0xIMgbWkgyJtpLWwgw65uyJlmYWPEgyBjdSBkaW7Im2lpIGRlIGNhcCwKemJvYXLEgyBjdSBkw6Juc3VsIMOubiDDrm5hbHR1bCBjZXJ1bHVpLCDImWkgYXBvaSwgZMOibmR1LWkgZHJ1bXVsCmRlLWFjb2xvLCBzZSBmYWNlIFNww6JudWwgcMOibsSDIGpvcyBwcmFmIMiZaSBwdWxiZXJlLiBJYXLEgyBmYXRhCsOubXDEg3JhdHVsdWkgUm/ImSwgw65uIHbEg2xtxIPImWFndWwgYWNlc3RhLCByZXBlZGUgcHVuZSBjYXB1bCBsdWkKSGFyYXAtQWxiIGxhIGxvYywgw65sIMOubmNvbmp1csSDIGRlIHRyZWkgb3JpIGN1IGNlbGUgdHJlaSBzbWljZWxlCmRlIG3Eg3IgZHVsY2UsIHRvYXJuxIMgYXDEgyBtb2FydMSDLCBzxIMgc3RlYSBzw6JuZ2VsZSDImWkgc8SDIHNlIHByaW5kxIMKcGllbGVhLCBhcG9pIMOubCBzdHJvcGXImXRlIGN1IGFwxIMgdmllLCDImWkgYXR1bmNpIEhhcmFwLUFsYiDDrm5kYXTEgwrDrm52aWUgyJlpLCDImXRlcmfDom5kdS1zZSBjdSBtw6JuYSBwZSBsYSBvY2hpLCB6aWNlIHN1c3BpbsOibmQ6CgrigJQgRWksIGRhJyBkaW4gZ3JldSBtYWkgYWRvcm1pc2VtISDigJQgRG9ybWVhaSB0dSBtdWx0IMiZaSBiaW5lLApIYXJhcC1BbGIsIGRlIG51IGVyYW0gZXUsIHppc2UgZmF0YSDDrm1wxINyYXR1bHVpIFJvyJksIHPEg3J1dMOibmR1LWwKY3UgZHJhZyDImWkgZMOibmR1LWkgaWFyIHBhbG/ImXVsIMOubiBzdMSDcMOibmlyZS4KCsiYaSBhcG9pLCDDrm5nZW51bmNoaW5kIGFtw6JuZG9pIGRpbmFpbnRlYSDDrm1wxINyYXR1bHVpIFZlcmRlLCDDrsiZaQpqdXLEgyBjcmVkaW7Im8SDIHVudWwgYWx0dWlhLCBwcmltaW5kIGJpbmVjdXbDom50YXJlIGRlIGxhIGTDom5zdWwgyJlpCsOubXDEg3LEg8ibaWEgdG90b2RhdMSDLgoKRHVwxIMgYWNlYXN0YSBzZSDDrm5jZXBlIG51bnRhLCDImS1hcG9pLCBkxIMgRG9hbW5lIGJpbmUhCgpMdW1lYSBkZSBwZSBsdW1lIHMtYSBzdHLDom5zIGRlIHByaXZlYSwKU29hcmVsZSDImWkgbHVuYSBkaW4gY2VyIGxlIHLDomRlYS4KyJgtYXBvaSBmb3N0LWF1IGZvc3QgcG9mdGnIm2kgbGEgbnVudMSDOiBDcsSDaWFzYSBmdXJuaWNpbG9yLApDcsSDaWFzYSBhbGJpbmVsb3IgyJlpIENyxINpYXNhIHrDom5lbG9yLCBtaW51bmVhIG1pbnVuaWxvciBkaW4Kb3N0cm92dWwgZmxvcmlsb3IhCgrImGkgbWFpIGZvc3QtYXUgcG9mdGnIm2kgw65uY8SDOiBjcmFpLCBjcsSDaWVzZSDImWktbXDEg3JhyJtpLCBvYW1lbmkgw65uCnNlYW3EgyBixINnYcibaSwgyJktdW4gcMSDY2F0IGRlIHBvdmVzdGFyLCBmxINyxIMgYmFuaSDDrm4gYnV6dW5hci4KVmVzZWxpZSBtYXJlIMOubnRyZSB0b8ibaSBlcmEsIGNoaWFyIMiZaSBzxINyxINjaW1lYSBvc3DEg3RhIMiZaSBiZWEhCgrImGkgYSDIm2ludXQgdmVzZWxpYSBhbmkgw65udHJlZ2ksIMiZaSBhY3VtIG1haSDIm2luZSDDrm5jxIM7IGNpbmUgc2UKZHVjZSBhY29sbyBiZWEgyJlpIG3Eg27Dom5jxIMuIElhciBwZSBsYSBub2ksIGNpbmUgYXJlIGJhbmkgYmVhIMiZaQptxINuw6JuY8SDLCBpYXLEgyBjaW5lIG51LCBzZSB1aXTEgyDImWkgcmFiZMSDLgpFT1QiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjoxO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAcmVhZE9ubHkiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBtZXRhZGF0YSI7YTowOnt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAYXR0cmlidXRlcyI7YTowOnt9fX1zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbWV0aG9kcyI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHVzZWRUcmFpdHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI0NjU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MjY6IlxGYWtlclxQcm92aWRlclxyb19NRFxUZXh0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NDoiVGV4dCI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcGFyZW50IjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MjA6IlxGYWtlclxQcm92aWRlclxUZXh0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NDoiVGV4dCI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwByZWFkT25seSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGF0dHJpYnV0ZXMiO2E6MDp7fX19czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiIwZWViZTcxMjUyZTc3MWY5MWYxYzk3ODk1Mzk2MzhlMiI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjU1OiJ2ZW5kb3IvZmFrZXJwaHAvZmFrZXIvc3JjL0Zha2VyL1Byb3ZpZGVyL3JvX01EL1RleHQucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxMzA3MzA6Ijw/cGhwCgpuYW1lc3BhY2UgRmFrZXJcUHJvdmlkZXJccm9fTUQ7CgpjbGFzcyBUZXh0IGV4dGVuZHMgXEZha2VyXFByb3ZpZGVyXFRleHQKewogICAgLyoqCiAgICAgKiBGcm9tIHJvLndpa2lzb3VyY2Uub3JnCiAgICAgKgogICAgICogQWNlc3QgdGV4dCBlc3RlIGRpc3BvbmliaWwgc3ViIGxpY2VuyJthIENyZWF0aXZlIENvbW1vbnMgY3UgYXRyaWJ1aXJlCiAgICAgKiDImWkgZGlzdHJpYnVpcmUgw65uIGNvbmRpyJtpaSBpZGVudGljZTsgcG90IGV4aXN0YSDImWkgY2xhdXplIHN1cGxpbWVudGFyZS4KICAgICAqIFZlZGXIm2kgZGV0YWxpaSBsYSBUZXJtZW5paSBkZSB1dGlsaXphcmUuCiAgICAgKgogICAgICoKICAgICAqIFRpdGxlOiBQb3Zlc3RlYSBsdWkgSGFyYXAtQWxiCiAgICAgKgogICAgICogQXV0aG9yOiBJb24gQ3JlYW5nxIMKICAgICAqCiAgICAgKiBQb3N0aW5nIERhdGU6IEZlYnJ1YXJ5IDYsIDIwMDUKICAgICAqIFtMYXN0IHVwZGF0ZWQ6IERlY2VtYmVyIDEzLCAyMDE2XQogICAgICoKICAgICAqIExhbmd1YWdlOiBSb21hbmlhbgogICAgICoKICAgICAqIEBzZWUgICAgIGh0dHBzOi8vd2lraW1lZGlhZm91bmRhdGlvbi5vcmcvd2lraS9UZXJtc19vZl9Vc2UvCiAgICAgKiBAc2VlICAgIGh0dHBzOi8vcm8ud2lraXNvdXJjZS5vcmcvd2lraS9Qb3Zlc3RlYV9sdWlfSGFyYXAtQWxiCiAgICAgKgogICAgICogQHZhciBzdHJpbmcKICAgICAqLwogICAgcHJvdGVjdGVkIHN0YXRpYyAkYmFzZVRleHQgPSA8PDwnRU9UJwpBbXUgY2ljxIMgZXJhIG9kYXTEgyDDrm50ci1vIMibYXLEgyB1biBjcmFpLCBjYXJlIGF2ZWEgdHJlaSBmZWNpb3JpLgrImGkgY3JhaXVsIGFjZWxhIG1haSBhdmVhIHVuIGZyYXRlIG1haSBtYXJlLCBjYXJlIGVyYSDDrm1wxINyYXQKw65udHItbyBhbHTEgyDIm2FyxIMsIG1haSBkZXDEg3J0YXTEgy4gyJhpIMOubXDEg3JhdHVsLCBmcmF0ZWxlIGNyYWl1bHVpLApzZSBudW1lYSBWZXJkZS3Drm1wxINyYXQ7IMiZaSDDrm1wxINyYXR1bCBWZXJkZSBudSBhdmVhIGZlY2lvcmksIGNpCm51bWFpIGZldGUuIE11bMibaSBhbmkgdHJlY3VyxIMgbGEgbWlqbG9jIGRlIGPDom5kIGFjZciZdGkgZnJhyJtpIG1haQphdnVyxIMgcHJpbGVqIGEgc2Ugw65udMOibG5pIGFtw6JuZG9pLiBJYXLEgyB2ZXJpaSwgYWRpY8SDIGZlY2lvcmlpCmNyYWl1bHVpIMiZaSBmZXRlbGUgw65tcMSDcmF0dWx1aSwgbnUgc2UgdsSDenVzZSBuaWNpb2RhdMSDIGRlIGPDom5kCmVyYXUgZWkuIMiYaSBhyJlhIHZlbmkgw65tcHJlanVyYXJlYSBkZSBuaWNpIMOubXDEg3JhdHVsIFZlcmRlIG51CmN1bm/ImXRlYSBuZXBvyJtpaSBzxINpLCBuaWNpIGNyYWl1bCBuZXBvYXRlbGUgc2FsZTogcGVudHJ1IGPEgyDIm2FyYQrDrm4gY2FyZSDDrm1wxINyxIPIm2VhIGZyYXRlbGUgY2VsIG1haSBtYXJlIGVyYSB0b2NtYWkgbGEgbyBtYXJnaW5lIGEKcMSDbcOibnR1bHVpLCDImWkgY3LEg2lhIGlzdHVpbGFsdCBsYSBvIGFsdMSDIG1hcmdpbmUuIMiYaSBhcG9pLCBwZQp2cmVtaWxlIGFjZWxlYSwgbWFpIHRvYXRlIMibxINyaWxlIGVyYXUgYsOibnR1aXRlIGRlIHLEg3pib2FpZQpncm96YXZlLCBkcnVtdXJpbGUgcGUgYXBlIMiZaSBwZSB1c2NhdCBlcmF1IHB1yJtpbiBjdW5vc2N1dGUgyJlpCmZvYXJ0ZSDDrm5jdXJjYXRlIMiZaSBkZSBhY2VlYSBudSBzZSBwdXRlYSBjxINsxIN0b3JpIGHImWEgZGUgdciZb3IgyJlpCmbEg3LEgyBwcmltZWpkaWkgY2Egw65uIHppdWEgZGUgYXN0xIN6aS4gyJhpIGNpbmUgYXB1Y2EgYSBzZSBkdWNlIHBlCmF0dW5jaSDDrm50ci1vIHBhcnRlIGEgbHVtaWkgYWRlc2VvcmkgZHVzIHLEg23Dom5lYSBww6JuxIMgbGEgbW9hcnRlLgoKRGFyIGlhIHPEgyBudSBuZSBkZXDEg3J0xINtIGN1IHZvcmJhIMiZaSBzxIMgw65uY2VwIGEgZGVwxINuYSBmaXJ1bApwb3ZlyJl0aWkuCgpBbXUgY2ljxIMgw65tcMSDcmF0dWwgYWNlbGEsIGFwcm9hcGUgZGUgYsSDdHLDom5lyJtlLCBjxIN6w6JuZCBsYQp6xINjYXJlLCBhIHNjcmlzIGPEg3RyZSBmcsSDyJtpbmUtc8SDdSBjcmFpdWx1aSwgc8SDLWkgdHJpbWl0xIMgZ3JhYm5pYwpwZSBjZWwgbWFpIHZyZWRuaWMgZGludHJlIG5lcG/Im2ksIGNhIHPEgy1sIGxhc2Ugw65tcMSDcmF0IMOubiBsb2N1bApzxIN1IGR1cMSDIG1vYXJ0ZWEgc2EuIENyYWl1bCwgcHJpbWluZCBjYXJ0ZWEsIMOubmRhdMSDIGNoZW3Egwp0dXN0cmVpIGZlY2lvcmlpIMOubmFpbnRlYSBzYSDImWkgbGUgemlzZToKCuKAlCBJYWNhIGNlLW1pIHNjcmllIGZyYXRlLW1ldSDImWkgbW/ImXVsIHZvc3RydS4gQ2FyZSBkaW50cmUgdm9pIHNlCnNpbXRlIGRlc3RvaW5pYyBhIMOubXDEg3LEg8ibaSBwZXN0ZSBvIMibYXLEgyBhyJlhIGRlIG1hcmUgyJlpIGJvZ2F0xIMsCmNhIGFjZWVhLCBhcmUgdm9pZSBkaW4gcGFydGVhIG1lYSBzxIMgc2UgZHVjxIMsIGNhIHPEgyDDrm1wbGluZWFzY8SDCnZvaW7Im2EgY2VhIG1haSBkZSBwZSB1cm3EgyBhIG1vyJl1bHVpIHZvc3RydS4KCkF0dW5jaSBmZWNpb3J1bCBjZWwgbWFpIG1hcmUgaWEgw65uZHLEg3puZWFsxIMgyJlpIHppY2UgOgoK4oCUIFRhdMSDLCBldSBjcmVkIGPEgyBtaWUgbWkgc2UgY3V2aW5lIGFjZWFzdMSDIGNpbnN0ZSwgcGVudHJ1IGPEgwpzdW50IGNlbCBtYWkgbWFyZSBkaW50cmUgZnJhyJtpOyBkZSBhY2VlYSB0ZSByb2cgc8SDLW1pIGRhaSBiYW5pCmRlIGNoZWx0dWlhbMSDLCBzdHJhaWUgZGUgcHJpbWVuZWFsxIMsIGFybWUgyJlpIGNhbCBkZSBjxINsxINyaWUsIGNhCnPEgyDImWkgcG9ybmVzYywgZsSDcsSDIHrEg2JhdsSDLgoK4oCUIEJpbmUsIGRyYWd1bCB0YXRlaSwgZGFjxIMgdGUgYml6dWllyJl0aSBjxIMtaSBwdXRlYSByxIN6YmF0ZSBww6JuxIMKYWNvbG8gyJlpIGNyZXppIGPEgyBlyJl0aSDDrm4gc3RhcmUgYSBjw6JybXVpIMiZaSBwZSBhbMibaWksIGFsZWdlLcibaQp1biBjYWwgZGluIGhlcmdoZWxpZSwgY2FyZS1pIHZyZWEgdHUsIGlhLcibaSBiYW5pIGPDonQgyJtpLW9yCnRyZWJ1aSwgaGFpbmUgY2FyZSDIm2ktb3IgcGzEg2NlYSwgYXJtZSBjYXJlLWkgY3JlZGUgY8SDLcibaSB2aW4gbGEKc29jb3RlYWzEgyDImWkgbWVyZ2kgY3UgYmluZSwgZsSDdHVsIG1ldS4KCkF0dW5jaSBmZWNpb3J1bCBjcmFpdWx1aSDDrsiZaSBpYSBjZWxlIHRyZWJ1aXRvYXJlLCBzxINydXTEgyBtw6JuYQp0xIN0w6JuZS1zxIN1LCBwcmltaW5kIGNhcnRlIGRlIGxhIGTDom5zdWwgY8SDdHJlIMOubXDEg3JhdHVsLCB6aWNlCnLEg21hcyBidW4gZnJhyJtpbG9yIHPEg2kgyJlpIGFwb2kgw65uY2FsZWPEgyDImWkgcG9ybmXImXRlIGN1IGJ1Y3VyaWUKc3ByZSDDrm1wxINyxIPIm2llLgoKQ3JhaXVsIMOubnPEgywgdnLDom5kIHPEgy1sIGlzcGl0ZWFzY8SDLCB0YWNlIG1vbGN1bSDImWksIHBlIMOubnNlcmF0ZSwKc2Ugw65tYnJhY8SDIHBlIGFzY3VucyDDrm50ci1vIHBpZWxlIGRlIHVycywgYXBvaSDDrm5jYWxlY8SDIHBlIGNhbCwKaWVzZSDDrm5haW50ZWEgZmVjaW9ydS1zxIN1IHBlIGFsdMSDIGNhbGUgyJlpIHNlIGJhZ8SDIHN1YiB1biBwb2QuIMiYaQpjw6JuZCBzxIMgdHJlYWPEgyBmaXUtc8SDdSBwZSBhY29sbywgbnVtYWkgaWFjYSBsYSBjYXDEg3R1bCBwb2R1bHVpCsOubCDImWkgw65udMOibXBpbsSDIHVuIHVycyBtb3JuxINpbmQuIEF0dW5jaSBjYWx1bCBmaXVsdWkgZGUgY3JhaQrDrm5jZXBlIGEgc8SDcmkgw65uIGRvdcSDIHBpY2lvYXJlLCBmb3LEg2luZCwgyJlpIGPDonQgcGUgY2Ugc8SDCml6YmVhc2PEgyBwZSBzdMSDcMOibnUtc8SDdS4gyJhpIGZpdWwgY3JhaXVsdWksIG5lbWFpcHV0w6JuZCBzdHJ1bmkKY2FsdWwgyJlpIG5lw65uZHLEg3puaW5kIGEgbWFpIG1lcmdlIMOubmFpbnRlLCBzZSDDrm50b2FybsSDIHJ1yJlpbmF0CsOubmFwb2kgbGEgdGF0dS1zxIN1LiBQw6JuxIMgc8SDIGFqdW5nxIMgZWwsIGNyYWl1bCBwZSBkZSBhbHTEgyBwYXJ0ZQrImWkgYWp1bnNlc2UgYWNhc8SDLCBkxINkdXNlIGRydW11bCBjYWx1bHVpLCDDrm5kb3Npc2UgcGllbGVhIGNlYSBkZQp1cnMgyJlpIGHImXRlcHRhIGFjdW0gc8SDIHZpbsSDIGZlY2lvcnUtc8SDdS4gyJhpIG51bWFpIGlhY2Egw65sIMiZaQp2ZWRlIHZlbmluZCByZXBlZGUsIGRhciBudSBhyJlhIGR1cMSDIGN1bSBzZSBkdXNlc2UuCgrigJQgRGEnIGNlLWFpIHVpdGF0LCBkcmFndWwgdGF0ZWksIGRlIHRlLWFpIMOubnRvcnMgw65uYXBvaT8gemlzZQpjcmFpdWwgY3UgbWlyYXJlLiBBaXN0YSBudS1pIHNlbW4gYnVuLCBkdXDEgyBjw6J0IMiZdGl1IGV1LgoK4oCUIERlIHVpdGF0LCBuLWFtIHVpdGF0IG5pbWljYSwgdGF0xIMsIGRhciBpYSwgcHJpbiBkcmVwdHVsIHVudWkKcG9kLCBtaS1hIGllyJlpdCDDrm5haW50ZSB1biB1cnMgZ3JvemF2LCBjYXJlIG0tYSB2w6Jyw6J0IMOubiB0b8ibaQpzcMSDcmllyJtpaS4gyJhpIGN1IG1hcmUgY2Ugc2PEg3DDom5kIGRpbiBsYWJlbGUgbHVpLCBhbSBnxINzaXQgY3UKY2FsZSBzxIMgbcSDIMOubnRvcmMgbGEgZC10YSBhY2FzxIMgZGVjw6J0IHPEgyBmaXUgcHJhZGEgZmlhcmVsb3IKc8SDbGJhdGljZS4gyJhpIGRlLWFjdW0gw65uYWludGUsIGR1Y8SDLXNlLCBkaW4gcGFydGVhIG1lYSwgY2luZQrImXRpZSwgY8SDIG1pZSB1bnVpYSBudS1taSB0cmVidWllIG5pY2kgw65tcMSDcsSDyJtpZSwgbmljaSBuaW1pY2E7CmRvYXIgbi1hbSBhIHRyxINpIGPDonQgbHVtZWEsIGNhIHPEgyBtb8iZdGVuZXNjIHDEg23Dom50dWwuCgrigJQgRGVzcHJlIGFjZWFzdGEgYmluZSBhaSBjaGl0aXQtbywgZHJhZ3VsIHRhdGVpLiBTZSB2ZWRlIGx1Y3J1CmPEgyBuaWNpIHR1IG51IGXImXRpIGRlIMOubXDEg3JhdCwgbmljaSDDrm1wxINyxIPIm2lhIHBlbnRydSB0aW5lOyDImWkKZGVjw6J0IHPEgyDDrm5jdXJjaSBudW1haSBhyJlhIGx1bWVhLCBtYWkgYmluZSBzxIMgyJllemkgZGVwYXJ0ZSwgY3VtCnppY2ksIGPEg2NpLCBtaWxhIERvbW51bHVpOiAiTGFjIGRlLWFyIGZpLCBicm9hyJl0ZSBzdW50IGRlc3R1bGUiLgpOdW1haSBhyJkgdnJlYSBzxIMgyJl0aXUsIGN1bSByxINtw6JuZSBjdSBtb8iZdS10xIN1LiBByJlhLWkgY8SDIG5lLWFtCsOubmN1cmNhdCDDrm4gc2zEg2LEg2NpdW5lPwoK4oCUIFRhdMSDLCB6aXNlIGF0dW5jaSBmZWNpb3J1bCBjZWwgbWlqbG9jaXUsIHPEgyBtxIMgZHVjIGV1LCBkYWPEgwp2cmVpLgoK4oCUIEFpIHRvYXTEgyB2b2lhIGRlIGxhIG1pbmUsIGbEg3R1bCBtZXUsIGRhciBtYXJlIGx1Y3J1IHPEgyBmaWUgZGUKbnUgyJtpIHMtb3IgdMSDaWEgyJlpIMibaWUgY8SDcsSDcmlsZS4gTWFpIMiZdGlpIHDEg2NhdHVsLCBwb2F0ZSBzxIMtyJtpCmlhc8SDIMOubmFpbnRlIHZyZXVuIGllcHVyZSwgY2V2YS4uLiDImWkgcG9ww6JjISBtLW9pIHRyZXppIGN1IHRpbmUKYWNhc8SDLCBjYSDImWkgY3UgZnJhdGUtdMSDdSwgyJktYXBvaSBhdHVuY2kgcnXImWluZWEgdGEgbi1hIGZpCnByb2FzdMSDLiBEYXIgZMSDLCBjZWFyY8SDIMiZaSB0dSwgc8SDIHZlemkgY3VtIMibaS1hIHNsdWppIG5vcm9jdWwuClZvcmJhIGNlZWE6ICJGaWVjYXJlIHBlbnRydSBzaW5lLCBjcm9pdG9yIGRlIHDDomluZSIuIERlLWkKaXpidXRpLCBiaW5lLWRlLWJpbmUsIGlhcsSDIGRlIG51LCBhdSBtYWkgcMSDyJtpdCDImWkgYWzIm2kgdm9pbmljaQpjYSB0aW5lLi4uCgpBdHVuY2kgZmVjaW9ydWwgY2VsIG1pamxvY2l1LCBwcmVnxIN0aW5kdS3ImWkgY2VsZSB0cmVidWl0b2FyZSDImWkKcHJpbWluZCDImWkgZWwgY2FydGUgZGluIG3Dom5hIHRhdMSDLXPEg3UgY8SDdHJlIMOubXDEg3JhdHVsLCDDrsiZaSBpYQp6aXVhIGJ1bsSDIGRlIGxhIGZyYcibaSwgyJlpIGEgZG91YSB6aSBwb3JuZciZdGUgyJlpIGVsLiDImGkgbWVyZ2UsIMiZaQptZXJnZSwgcMOibsSDIHNlIMOubm5vcHRlYXrEgyBiaW5lLiDImGkgY8OibmQgcHJpbiBkcmVwdHVsIHBvZHVsdWksCm51bWFpIGlhY2EgyJlpIHVyc3VsOiBtb3IhIG1vciEgbW9yISBDYWx1bCBmaXVsdWkgZGUgY3JhaSDDrm5jZXBlCmF0dW5jaSBhIGZvcsSDaSwgYSBzxINyaSDDrm4gZG91xIMgcGljaW9hcmUgyJlpIGEgZGEgw65uYXBvaS4gyJhpIGZpdWwKY3JhaXVsdWksIHbEg3rDom5kIGPEgyBudS1pIGx1Y3J1IGRlIMiZYWfEgywgc2UgbGFzxIMgyJlpIGVsIGRlCsOubXDEg3LEg8ibaWUgyJlpLCBjdSBydciZaW5lYSBsdWksIHNlIMOubnRvYXJjZSDDrm5hcG9pIGxhIHRhdMSDLXPEg3UKYWNhc8SDLiBDcmFpdWwsIGN1bSDDrmwgdmVkZSwgemljZToKCuKAlCBFaSwgZHJhZ3VsIHRhdGVpLCBhyJlhLWkgY8SDIHMtYSDDrm1wbGluaXQgdm9yYmEgY2VlYTogIkFwxINyxIMtbcSDCmRlIGfEg2luaSwgY8SDIGRlIGPDomluaSBudSBtxIMgdGVtIi4KCuKAlCBDZSBmZWwgZGUgdm9yYsSDLWkgYXN0YSwgdGF0xIM/ISB6aXNlIGZpdS1zxIN1IHJ1yJlpbmF0OyBsYSBkLXRhCnVyyJlpaSBzZSBjaGVhbcSDIGfEg2luaT8gQmEsIGlhIGFjdW0gY3JlZCBldSBmcsSDyJtpbmUtbWV1LCBjxIMgYciZYQp1cnMgb8iZdGlyZWEgw65udHJlYWfEgyBlc3RlIMOubiBzdGFyZSBzxIMgbyB6ZHJ1bWljZS4uLiDDjm5jxIMgbcSDIG1pcgpjdW0gYW0gc2PEg3BhdCBjdSB2aWHIm8SDOyBsZWhhbWl0ZSDImWkgZGUgw65tcMSDcsSDyJtpZSDImWkgZGUgdG90LCBjxIMKZG9hciwgc2xhdsSDIERvbW51bHVpLCBhbSBjZSBtw6JuY2EgbGEgY2FzYSBkLXRhbGUuCgrigJQgQ2UgbcOibmNhIHbEg2QgZXUgYmluZSBjxIMgYWksIGRlc3ByZSBhc3RhIG51IGUgdm9yYsSDLCBmxIN0dWwgbWV1LAp6aXNlIGNyYWl1bCBwb3NvbW9yw6J0LCBkYXIgaWEgc3B1bmXIm2ktbWk6IHJ1yJlpbmVhIHVuZGUgbyBwdW5lyJtpPwpEaW4gdHJlaSBmZWNpb3JpIGPDosibaSBhcmUgdGF0YSwgbmljaSB1bnVsIHPEgyBudSBmaWUgYnVuIGRlCm5pbWljYT8hCgpBcG9pLCBkcmVwdCBzxIMgdsSDIHNwdW4sIGPEgyBhdHVuY2kgZGVnZWFiYSBtYWkgc3RyaWNhyJtpIG3Dom5jYXJlYSwKZHJhZ2lpIG1laS4uLiBTxIMgdW1ibGHIm2kgbnVtYWkgYciZYSwgZnJ1bnphIGZyxINzaW5lbHVsdWksIHRvYXTEgwp2aWHIm2Egdm9hc3RyxIMgyJlpIHPEgyB2xIMgbMSDdWRhyJtpIGPEgyBzdW50ZcibaSBmZWNpb3JpIGRlIGNyYWksIGFzdGEKbnUgbWlyb2FzZSBhIG5hcyBkZSBvbS4uLiBDdW0gdsSDZCBldSwgZnJhdGUtbWV1IHNlIHBvYXRlIGN1bGNhCnBlIG8gdXJlY2hlIGRpbiBwYXJ0ZWEgdm9hc3RyxIM7IGxhIHNmw6JudHVsIEHImXRlYXB0xIMgcy1hIMOubXBsaW5pCmRvcmluyJthIGx1aS4gSGFsYWwgZGUgbmVwb8ibaSBjZSBhcmUhIFZvcmJhIGNlZWE6CgpMYSBwbMSDY2ludGUsIMOubmFpbnRlCsiYaSBsYSByxIN6Ym9pLCDDrm5hcG9pLgpGaXVsIGNyYWl1bHVpIGNlbCBtYWkgbWljLCBmxINjw6JuZHUtc2UgYXR1bmNpIHJvyJkgY3VtIMOuaSBnb3RjYSwKaWVzZSBhZmFyxIMgw65uIGdyxINkaW7EgyDImWkgw65uY2VwZSBhIHBsw6JuZ2Ugw65uIGluaW1hIHNhLCBsb3ZpdApmaWluZCDDrm4gYWTDom5jdWwgc3VmbGV0dWx1aSBkZSBhcMSDc8SDdG9hcmVsZSBjdXZpbnRlIGFsZQpwxINyaW50ZWx1aSBzxIN1LiDImGkgY3VtIHN0YSBlbCBwZSBnw6JuZHVyaSDImWkgbnUgc2UgZHVtZXJlYSBjZSBzxIMKZmFjxIMgcGVudHJ1IGEgc2PEg3BhIGRlIHJ1yJlpbmUsIG51bWFpIGlhY2Egc2UgdHJlemXImXRlIGRpbmFpbnRlYQpsdWkgY3UgbyBiYWLEgyBnw6JyYm92aXTEgyBkZSBixIN0csOibmXIm2UsIGNhcmUgdW1ibGEgZHVwxIMgbWlsb3N0ZW5pZS4KCuKAlCBEYScgY2Ugc3RhaSBhyJlhIHBlIGfDom5kdXJpLCBsdW1pbmF0ZSBjcsSDaciZb3I/IHppc2UgYmFiYTsKYWx1bmfEgyBtw6JobmlyZWEgZGluIGluaW1hIHRhLCBjxINjaSBub3JvY3VsIMOuyJtpIHLDomRlIGRpbiB0b2F0ZQpwxINyyJtpbGUgyJlpIG51IGFpIGRlIGNlIGZpIHN1cMSDcmF0LiBJYSwgbWFpIGJpbmUgbWlsdWllyJl0ZSBiYWJhCmN1IGNldmEuCgrigJQgSWEgbGFzxIMtbcSDLW5jb2xvLCBtxIN0dciZxIMsIG51IG3EgyBzdXDEg3JhLCB6aXNlIGZpdWwgY3JhaXVsdWk7CmFjdW0gYW0gYWx0ZWxlIGxhIGNhcHVsIG1ldS4KCuKAlCBGZWNpb3IgZGUgY3JhaSwgdmVkZWEtdGUtYciZIMOubXDEg3JhdCEgU3B1bmUgYmFiZWkgY2UgdGUKY2hpbnVpZciZdGU7IGPEgywgZGUgdW5kZSDImXRpaSwgcG9hdGUgc8SDLcibaSBhanV0ZSDImWkgZWEgY2V2YS4KCuKAlCBNxIN0dciZxIMsIMiZdGlpIGNlPyBVbmEtaSB1bmEgyJlpIGRvdcSDLXMgbWFpIG11bHRlOyBsYXPEgy1txIMtbgpwYWNlLCBjxIMgbnUtbWkgdsSDZCBsdW1lYSDDrm5haW50ZWEgb2NoaWxvciBkZSBuZWNhei4KCuKAlCBMdW1pbmF0ZSBjcsSDaciZb3IsIHPEgyBudSBixINudWllyJl0aSwgZGFyIG51IHRlIGl1yJtpIGHImWEgZGUgdGFyZSwKY8SDIG51IMiZdGlpIGRlIHVuZGUtyJtpIHBvYXRlIHZlbmkgYWp1dG9yLgoK4oCUIENlIHZvcmJlyJl0aSDDrm4gZG9kaWksIG3Eg3R1yJnEgz8gVG9jbWFpIGRlIGxhIHVuYSBjYSBkLXRhIMibaS1haQpnxINzaXQgc8SDIGHImXRlcHQgZXUgYWp1dG9yPwoK4oCUIFBvYXRlIMibaS1pIGRlyJlhbsibIGRlIHVuYSBjYSBhY2Vhc3RhPyB6aXNlIGJhYmEuIEhlaSwgbHVtaW5hdGUKY3LEg2nImW9yISBDZWwtZGUtc3VzIHZhcnPEgyBkYXJ1bCBzxIN1IHBlc3RlIGNlaSBuZXB1dGluY2lvyJlpOyBzZQp2ZWRlIGPEgyBhyJlhIHBsYWNlIHNmaW7Im2llaS1zYWxlLiBOdSBjxIN1dGEgY8SDIG3EgyB2ZXppIGfDonJib3bEgyDImWkKc3RyZW3Im3Vyb2FzxIMsIGRhciwgcHJpbiBwdXRlcmVhIGNlLW1pIGVzdGUgZGF0xIMsIMiZdGl1IGRpbmFpbnRlCmNlZWEgY2UgYXUgZGUgZ8OibmQgc8SDIGl6dm9kZWFzY8SDIHB1dGVybmljaWkgcMSDbcOibnR1bHVpIMiZaQphZGVzZW9yaSByw6JkIGN1IGhvaG90IGRlIG5lcHJpY2VwZXJlYSDImWkgc2zEg2JpY2l1bmVhIGxvci4gQciZYS1pCmPEgyBudS3Im2kgdmluZSBhIGNyZWRlLCBkYXIgc8SDIHRlIGZlcmVhc2PEgyBEdW1uZXpldSBkZSBpc3BpdMSDIQpDxINjaSBtdWx0ZSBhdSBtYWkgdsSDenV0IG9jaGlpIG1laSBkZS1hdMOidGEgYW1hciBkZSB2ZWFjdXJpIGPDonRlCnBvcnQgcGUgdW1lcmlpIGFjZciZdGlhLiBPZiEgY3LEg2nImW9ydWxlISBjcmVkZS1txIMsIGPEgyBzxIMgYWliaSB0dQpwdXRlcmVhIG1lYSwgYWkgdsOibnR1cmEgyJvEg3JpbGUgyJlpIG3Eg3JpbGUsIHDEg23Dom50dWwgbC1haSBkYSBkZS1hCmR1cmEsIGx1bWVhIGFjZWFzdGEgYWkgcHVydGEtbywgdWl0ZSBhyJlhLCBwZSBkZWdldGUsIMiZaSB0b2F0ZSBhcgpmaSBkdXDEgyBnw6JuZHVsIHTEg3UuIERhciB1aXRlIGNlIHZvcmJlyJl0ZSBnw6JyYm92YSDImWkKbmVwdXRpbmNpb2FzYSEgSWFydMSDLW3EgywgRG9hbW5lLCBjxIMgbnUgyJl0aXUgY2UgbWktYSBpZciZaXQgZGluCmd1csSDISBMdW1pbmF0ZSBjcsSDaciZb3IsIG1pbHVpZciZdGUgYmFiYSBjdSBjZXZhIQoKRml1bCBjcmFpdWx1aSwgZmVybWVjYXQgZGUgdm9yYmVsZSBiYWJlaSwgc2NvYXRlIGF0dW5jaSB1biBiYW4KyJlpIHppY2U6CgrigJQgyJppbmUsIG3Eg3R1yJnEgywgZGUgbGEgbWluZSBwdcibaW4gyJlpIGRlIGxhIER1bW5lemV1IG11bHQuCgrigJQgRGUgdW5kZSBkYWksIG1pbG9zdGl2dWwgRHVtbmV6ZXUgc8SDLcibaSBkZWEsIHppc2UgYmFiYSwgyJlpIG11bHQKc8SDIHRlIMOubnppbGVhc2PEgywgbHVtaW5hdGUgY3LEg2nImW9yLCBjxIMgbWFyZSBub3JvY2lyZSB0ZQphyJl0ZWFwdMSDLiBQdcibaW4gbWFpIGVzdGUsIMiZaSBhaSBzxIMgYWp1bmdpIMOubXDEg3JhdCwgY2FyZSBuLWEgbWFpCnN0YXQgYWx0dWwgcGUgZmHIm2EgcMSDbcOibnR1bHVpIGHImWEgZGUgaXViaXQsIGRlIHNsxIN2aXQgyJlpIGRlCnB1dGVybmljLiBBY3VtLCBsdW1pbmF0ZSBjcsSDaciZb3IsIGNhIHPEgyB2ZXppIGPDonQgcG9hdGUgc8SDLcibaQphanV0ZSBtaWxvc3RlbmlhLCBzdGFpIGxpbmnImXRpdCwgdWl0xIMtdGUgZHJlcHQgw65uIG9jaGlpIG1laSDImWkKYXNjdWx0xIMgY3UgbHVhcmUtYW1pbnRlIGNlIMibaS1vaSBzcHVuZTogZHUtdGUgbGEgdGF0xIMtdMSDdSDImWkKY2VyZSBzxIMtyJtpIGRlYSBjYWx1bCwgYXJtZWxlIMiZaSBoYWluZWxlIGN1IGNhcmUgYSBmb3N0IGVsIG1pcmUsCsiZaSBhdHVuY2kgYWkgc8SDIHRlIHBvyJtpIGR1Y2UgdW5kZSBuLWF1IHB1dHV0IG1lcmdlIGZyYcibaWkgdMSDaTsKcGVudHJ1IGPEgyDIm2llIGEgZm9zdCBzY3JpcyBkZSBzdXMgc8SDLcibaSBmaWUgZGF0xIMgYWNlYXN0xIMgY2luc3RlLgpUYXR1LXTEg3Ugcy1hIMOubXBvdHJpdmkgyJlpIG4tYSB2cmVhIHPEgyB0ZSBsYXNlLCBkYXIgdHUgc3TEg3J1aWXImXRlCnBlIGzDom5nxIMgZMOibnN1bCBjdSBydWfEg21pbnRlLCBjxIMgYWkgc8SDLWwgw65uZHVwbGVjaS4gSGFpbmVsZQpkZXNwcmUgY2FyZSDIm2ktYW0gdm9yYml0IHN1bnQgdmVjaGkgyJlpIHBvbm9zaXRlLCDImWkgYXJtZWxlCnJ1Z2luaXRlLCBpYXLEgyBjYWx1bCBhaSBzxIMtbCBwb8ibaSBhbGVnZSBwdW7Dom5kIMOubiBtaWpsb2N1bApoZXJnaGVsaWVpIG8gdGF2w6AgcGxpbsSDIGN1IGrEg3JhdGljLCDImWkgY2FyZSBkaW50cmUgY2FpIGEgdmVuaSBsYQpqxINyYXRpYyBzxIMgbcSDbsOibmNlLCBhY2VsYSBhcmUgc8SDIHRlIGR1Y8SDIGxhIMOubXDEg3LEg8ibaWUgyJlpIGFyZSBzxIMKdGUgc2NhcGUgZGluIG11bHRlIHByaW1lamRpaS4gyJppbmUgbWludGUgY2UtyJtpIHNwdW4gZXUsIGPEgyBwb2F0ZQpzxIMgbmUgbWFpIMOubnTDomxuaW0gbGEgdnJ1biBjYXDEg3QgZGUgbHVtZTogY8SDY2kgZGVhbCBjdSBkZWFsIHNlCmFqdW5nZSwgZGFyIMOubmPEgyBvbSBjdSBvbSEKCsiYaSBwZSBjw6JuZCB2b3JiZWEgYmFiYSBhY2VzdGUsIG8gdmVkZSDDrm52xINsdWl0xIMgw65udHItdW4gaG9ib3QKYWxiLCByaWRpY8OibmR1LXNlIMOubiB2xIN6ZHVoLCBhcG9pIMOubsSDbMibw6JuZHUtc2UgdG90IG1haSBzdXMsIMiZaQpkdXDEgyBhY2VlYSBuLW8gbWFpIHrEg3JpIGRlZmVsLiBBdHVuY2kgbyDDrm5maW9yYXJlIGN1cHJpbmRlIHBlCmZpdWwgY3JhaXVsdWksIHLEg23Dom7Dom5kIHVpbWl0IGRlIHNwYWltxIMgyJlpIG1pcmFyZSwgZGFyIHBlIHVybcSDLAp2ZW5pbmR1LWkgaW5pbWEgbGEgbG9jIMiZaSBwbGluIGRlIMOubmNyZWRlcmUgw65uIHNpbmUgY8SDIHZhIGl6YnV0aQpsYSBjZWVhIGNlIGfDom5kZWEsIHNlIMOubmbEg8ibaciZYXrEgyDDrm5haW50ZWEgdGF0xIMtc8SDdSwgemljw6JuZDoKCuKAlCBExIMtbWkgdm9pZSBjYSBzxIMgbcSDIGR1YyDImWkgZXUgcGUgdXJtYSBmcmHIm2lsb3IgbWVpLCBudSBkZQphbHRhLCBkYXIgY2Egc8SDLW1pIMOubmNlcmMgbm9yb2N1bC4gyJhpIG9yaSBvaSBwdXRlYSBpemJ1dGksIG9yaQpudSwgZGFyIMOuyJtpIGbEg2fEg2R1aWVzYyBkaW5haW50ZSBjxIMsIG9kYXTEgyBwb3JuaXQgZGluIGNhc2EKZC10YWxlLCDDrm5hcG9pIG51IG0tb2kgbWFpIMOubnRvYXJjZSwgc8SDIMiZdGl1IGJpbmUgY8SDIG0tb2kKw65udMOibG5pIMiZaSBjdSBtb2FydGVhIMOubiBjYWxlLgoK4oCUIEx1Y3J1IG5lZ8OibmRpdCwgZHJhZ3VsIHRhdGVpLCBzxIMgYXVkIGHImWEgdm9yYmUgdG9jbWFpIGRpbiBndXJhCnRhLCB6aXNlIGNyYWl1bC4gRnJhyJtpaSB0xINpIGF1IGRvdmVkaXQgY8SDIG51IGF1IGluaW3EgwrDrm50ci3Drm7ImWlpLCDImWkgZGluIHBhcnRlYSBsb3IgbWktYW0gbHVhdCB0b2F0xIMgbsSDZGVqZGVhLiBEb2FyIHR1CnPEgyBmaWkgbWFpIHZpdGVheiwgZGFyIHBhcmPEgyB0b3QgbnUtbWkgdmluZSBhIGNyZWRlLiDDjm5zxIMsIGRhY8SDCnZyZWkgyJlpIHZyZWkgbnVtYWlkZWPDonQgc8SDIHRlIGR1Y2ksIGV1IG51IHRlIG9wcmVzYywgZGFyIG1pLWkgbnUKY3VtdmEgc8SDIHRlIMOubnTDomxuZciZdGkgY3Ugc2PDonJiYSDDrm4gZHJ1bSDImWkgc8SDIGRhaSDImWkgdHUgY2luc3RlYQpwZSBydciZaW5lLCBjLWFwb2kgYXR1bmNpIGN1cmF0IMOuyJtpIHNwdW4gY8SDIG51IG1haSBhaSBjZSBjxIN1dGEgbGEKY2FzYSBtZWEuCgrigJQgQXBvaSBkxIMsIHRhdMSDLCBvbXVsIGUgZGF0b3Igc8SDIHNlIMOubmNlcmNlLiBBbSBzxIMgcG9ybmVzYyDImWkgZXUKw65udHItdW4gbm9yb2MgyJlpIGN1bSBhIGRhIER1bW5lemV1ISBOdW1haSwgdGUgcm9nLCBkxIMtbWkgY2FsdWwsCmFybWVsZSDImWkgaGFpbmVsZSBjdSBjYXJlIGFpIGZvc3QgZC10YSBtaXJlLCBjYSBzxIMgbcSDIHBvdCBkdWNlLgoKQ3JhaXVsLCBhdXppbmQgYWNlYXN0YSwgcGFyY8SDIG51IGktYSBwcmVhIHZlbml0IGxhIHNvY290ZWFsxIMgyJlpLArDrm5jcmXIm2luZCBkaW4gc3Byw6JuY2VuZSwgYSB6aXM6CgrigJQgSGVpLCBoZWkhIGRyYWd1bCB0YXRlaSwgY3Ugdm9yYmEgYWNlYXN0YSBtaS1haSBhZHVzIGFtaW50ZSBkZQpjw6JudGVjdWwgY2VsYToKClZvaW5pYyB0w6JuxINyLCBjYWwgYsSDdHLDom4sCkdyZXUgc2UtbmfEg2R1aWUgbGEgZHJ1bSEKRC1hcG9pIGNhbHVsIG1ldSBkZSBwZSBhdHVuY2kgY2luZSBtYWkgyJl0aWUgdW5kZSBpLW9yIGZpCnB1dHJlemluZCBjaW9sYW5lbGUhIEPEgyBkb2FyIG51IGVyYSBzxIMgdHLEg2lhc2PEgyB1biB2ZWFjIGRlIG9tIQpDaW5lIMibaS1hIHbDonLDonQgw65uIGNhcCDImWkgdW5hIGNhIGFjZWFzdGEsIGFjZWxhIMOubmPEgy1pIHVudWwuLi4KT3JpIHZvcmJhIGNlZWE6IFBlc2VtbmUgdW1ibGkgZHVwxIMgY2FpIG1vcsibaSBzxIMgbGUgaWVpCnBvdGNvYXZlbGUuCgrigJQgVGF0xIMsIGF0w6J0YSBjZXIgyJlpIGV1IGRlIGxhIGQtdGEuIEFjdW0sIG9yaSBjLWEgZmkgdHLEg2luZApjYWx1bCwgb3JpIGPEgyBuLWEgZmkgdHLEg2luZCwgYWNlYXN0YSBtxIMgcHJpdmXImXRlIHBlIG1pbmU7IG51bWFpCnZyZWF1IHPEgyDImXRpdSBkYWPEgyBtaS1sIGRhaSBvcmkgYmEuCgrigJQgRGluIHBhcnRlYSBtZWEsIGRhdCBzxIMtyJtpIGZpZSwgZHJhZ3VsIHRhdGVpLCBkYXIgbWktaSBkZS1hCm1pcmFyZWEgZGUgdW5kZSBhaSBzxIMtbCBpZWksIGRhY8SDIG4tYXJlIGZpaW7Im8SDIHBlIGx1bWUuCgrigJQgRGVzcHJlIGFjZWFzdGEgbnUgbcSDIHBsw6JuZyBldSwgdGF0xIMsIGJpbmUgY8SDIG1pIGwtYWkgZGF0OyBkZQp1bmRlLWEgZmksIGRlIHVuZGUgbi1hIGZpLCBkYWPEgyBsLW9pIGfEg3NpLCBhbCBtZXUgc8SDIGZpZS4KCsiYaSBhdHVuY2ksIG9kYXTEgyBzZSBzdWllIMOubiBwb2QgyJlpIGNvYm9hcsSDIGRlLWFjb2xvIHVuIGPEg3DEg3N0cnUsCnVuIGZyw6J1LCB1biBiaWNpIMiZaSBvIMiZYSwgdG9hdGUgY29sYsSDaXRlLCBzZmFyb2dpdGUgyJlpIHZlY2hpIGNhCnDEg23Dom50dWwuIEFwb2kgbWFpIHNjb2F0ZSBkaW50ci11biBnaGVyZ2hpcml1IG5pyJl0ZSBzdHJhaWUKZm9hcnRlIHZlY2hpLCB1biBhcmMsIG5pyJl0ZSBzxINnZcibaSwgdW4gcGFsb8iZIMiZaSB1biBidXpkdWdhbiwKdG9hdGUgcGxpbmUgZGUgcnVnaW7EgywgyJlpIHNlIGFwdWPEgyBkZSBsZSBncmlqZciZdGUgYmluZSDImWkgbGUKcHVuZSBkZW9wYXJ0ZS4gUGUgdXJtxIMgdW1wbGUgbyB0YXZhIGN1IGrEg3JhdGljLCBzZSBkdWNlIGN1IGTDom5zYQpsYSBoZXJnaGVsaWUgyJlpIG8gcHVuZSBqb3Mgw65udHJlIGNhaS4gyJhpIGF0dW5jaSwgbnVtYWkgaWFjYSBjZQppZXNlIGRpbiBtaWpsb2N1bCBoZXJnaGVsaWVpIG8gcsSDcGNpdWfEgyBkZSBjYWwsIGdyZWLEg25vcywKZHVwdXJvcyDImWkgc2xhYiwgZGUtaSBudW3Eg3JhaSBjb2FzdGVsZTsgyJlpIHZlbmluZCBkZS1hIGRyZXB0dWwKbGEgdGF2YSwgYXB1Y8SDIG8gZ3VyxIMgZGUgasSDcmF0aWMuIEZpdWwgY3JhaXVsdWkgw65pIMiZaSB0cmFnZQphdHVuY2kgY3UgZnLDonVsIMOubiBjYXAsIHppY8OibmQ6CgrigJQgR2hpam9hZ8SDIHVyw6JjaW9hc8SDIGNlIGXImXRpISBkaW4gdG/Im2kgY2FpaSwgdG9jbWFpIHR1IHRlLWFpCmfEg3NpdCBzxIMgbcSDbsOibmNpIGrEg3JhdGljPyBEZSB0ZS1hIMOubXBpbmdlIHDEg2NhdHVsIHPEgyBtYWkgdmlpIG8KZGF0xIMsIHZhaSBkZSBzdGVhdWEgdGEgYXJlIHPEgyBmaWUhCgpBcG9pIMOubmNlcGUgYSBwdXJ0YSBjYWlpIMOubmNvbG8gyJlpIMOubmNvYWNlLCDImWkgbnVtYWkgaWFjYQpzbMSDYsSDdHVyYSBjZWEgZGUgY2FsIGlhciBzZSByZXBlZGUgyJlpIGFwdWPEgyBvIGd1csSDIGRlIGrEg3JhdGljLgpGaXVsIGNyYWl1bHVpIMOuaSBtYWkgdHJhZ2UgyJlpIGF0dW5jaSB1biBmcsOidSDDrm4gY2FwLCBjw6J0IGNlCnBvYXRlLCDImWkgYXBvaSBpYXIgw65uY2VwZSBhIHB1cnRhIGNhaWkgZGUgY29sbyBww6JuxIMgY29sbywgc8SDCnZhZMSDLCBudSBjdW12YSBhIHZlbmkgYWx0IGNhbCBzxIMgbcSDbsOibmNlIGrEg3JhdGljLiDImGkgbnVtYWkgaWFjYSwKyJlpIGEgdHJlaWEgb2FyxIMsIHRvdCBnbG9hYmEgY2VhIGRlIGNhbCB2aW5lIMiZaSDDrm5jZXBlIGEgbcOibmNhIGxhCmrEg3JhdGljLCBkZSBuLWEgbWFpIHLEg21hcy4gQXR1bmNpIGZpdWwgY3JhaXVsdWksIG3Dom5pb3MsIMOuaSBtYWkKdHJhZ2UgdW4gZnLDonUsIGlhciBjw6J0IGNlIHBvYXRlLCBhcG9pIMOubCBwcmluZGUgw65uIGPEg3DEg3N0cnUgyJlpLApwdW7Dom5kdS1pIGZyw6J1bCDDrm4gY2FwLCB6aWNlIMOubiBnw6JuZHVsIHPEg3U6ICJTxIMtbCBpYXUsIG9yaSBzxIMtaQpkYXUgZHJ1bXVsPyBNxIMgdGVtIGPEgyBtLW9pIGZhY2UgZGUgcsOicy4gRGVjw6J0IGN1IGHImWEgY2FsLCBtYWkKYmluZSBwZWRlc3RydSIuCgrImGkgY3VtIHN0YSBlbCDDrm4gY3VtcGVuZSwgc8SDLWwgaWEsIHPEgyBudS1sIGlhLCBjYWx1bCBzZSDImWkKc2N1dHVyxIMgZGUgdHJlaSBvcmksIMiZaSDDrm5kYXTEgyByxINtw6JuZSBjdSBwxINydWwgbGlucy1wcmVsaW5zIMiZaQp0w6JuxINyIGNhIHVuIHRyZXRpbiwgZGUgbnUgZXJhIGFsdCBtw6Juem9jIG1haSBmcnVtb3Mgw65uIHRvYXTEgwpoZXJnaGVsaWEuIMiYaSBhcG9pLCB1aXTDom5kdS1zZSDIm2ludMSDIMOubiBvY2hpaSBmaXVsdWkgZGUgY3JhaSwKemljZToKCuKAlCBTdWkgcGUgbWluZSwgc3TEg3DDom5lLCDImWkgyJtpbmUtdGUgYmluZSEgRml1bCBjcmFpdWx1aSwKcHVuw6JuZHUtaSB6YWJhbGEgw65uIGd1csSDLCDDrm5jYWxlY8SDLCDImWkgYXR1bmNpIGNhbHVsIG9kYXTEgyB6Ym9hcsSDCmN1IGTDom5zdWwgcMOibsSDIGxhIG5vdXJpIMiZaSBhcG9pIHNlIGxhc8SDIMOubiBqb3MgY2EgbyBzxINnZWF0xIMuCkR1cMSDIGFjZWVhIG1haSB6Ym9hcsSDIMOubmPEgyBvIGRhdMSDIHDDom7EgyBsYSBsdW7EgyDImWkgaWFyIHNlIGxhc8SDIMOubgpqb3MgbWFpIGl1dGUgZGVjw6J0IGZ1bGdlcnVsLiDImGkgdW5kZSBudSBtYWkgemJvYXLEgyDImWkgYSB0cmVpYQpvYXLEgyBww6JuxIMgbGEgc29hcmUgyJlpLCBjw6JuZCBzZSBsYXPEgyBqb3MsIMOubnRyZWFixIM6CgrigJQgRWksIHN0xINww6JuZSwgY3VtIMibaSBzZSBwYXJlPyBHw6JuZGl0LWFpIHZyb2RhdMSDIGPEgyBhaSBzxIMKYWp1bmdpOiBzb2FyZWxlIGN1IHBpY2lvYXJlbGUsIGx1bmEgY3UgbcOibmEgyJlpIHByaW4gbm91cmkgc8SDCmNhdcibaSBjdW51bmE/CgrigJQgQ3VtIHPEgyBtaSBzZSBwYXLEgywgZHJhZ3VsIG1ldSB0b3ZhcsSDyJk/IElhLCBtLWFpIGLEg2dhdCDDrm4gdG9hdGUKZ3JvemlsZSBtb3LIm2lpLCBjxINjaSwgY3VwcmlucyBkZSBhbWXIm2VhbMSDLCBudSBtYWkgyJl0aWFtIHVuZGUgbcSDCmfEg3Nlc2MgyJlpIGPDonQgcGUgY2UgZXJhaSBzxIMgbcSDIHByxINwxINkZciZdGkuCgrigJQgSWEsIGHImWEgYW0gYW1lyJtpdCDImWkgZXUsIHN0xINww6JuZSwgY8OibmQgbWktYWkgZGF0IGN1IGZyw6J1bCDDrm4KY2FwLCBzxIMgbcSDIHByxINwxINkZciZdGksIMiZaSBjdSBhc3RhIGFtIHZydXQgc8SDLW1pIHLEg3N0b3JjIGNlbGUKdHJlaSBsb3ZpdHVyaS4gVm9yYmEgY2VlYTogdW5hIHBlbnRydSBhbHRhLiBBY3VtIGNyZWQgY8SDIG3EgwpjdW5vyJl0aSDImWkgZGUgdXLDonQgyJlpIGRlIGZydW1vcywgyJlpIGRlIGLEg3Ryw6JuIMiZaSBkZSB0w6JuxINyLCDImWkgZGUKc2xhYiDImWkgZGUgcHV0ZXJuaWM7IGRlLWFjZWVhIG3EgyBmYWMgaWFyIGN1bSBtLWFpIHbEg3p1dCDDrm4KaGVyZ2hlbGllLCDImWkgZGUtYWN1bSDDrm5haW50ZSBzdW50IGdhdGEgc8SDIHRlIMOubnRvdsSDcsSDyJllc2MKb3JpdW5kZSBtaS1pIHBvcnVuY2ksIHN0xINww6JuZS4gTnVtYWkgc8SDLW1pIHNwdWkgZGluYWludGUgY3VtIHPEgwp0ZSBkdWM6IGNhIHbDom50dWwgb3JpIGNhIGfDom5kdWw/CgrigJQgRGUgbWktaSBkdWNlIGNhIGfDom5kdWwsIHR1IG1pLWkgcHLEg3DEg2RpLCBpYXIgZGUgbWktaSBkdWNlIGNhCnbDom50dWwsIHR1IG1pLWkgZm9sb3NpLCBjxINsdcibdWwgbWV1LCB6aXNlIGZpdWwgY3JhaXVsdWkuCgrigJQgQmluZSwgc3TEg3DDom5lLiBBY3VtIHN1aSBwZSBtaW5lIGbEg3LEgyBncmlqxIMgyJlpIGhhaSBzxIMgdGUgZHVjCnVuZGUgdnJlaS4KCkZpdWwgY3JhaXVsdWksIMOubmPEg2xlY8OibmQsIMOubCBuZXRlemXImXRlIHBlIGNvYW3EgyDImWkgemljZTog4oCUIEhhaSwKY8SDbHXIm3VsIG1ldSEgQXR1bmNpIGNhbHVsIHpib2FyxIMgbGluIGNhIHbDom50dWwsIMiZaSBjw6JuZCB2w6JudHVsIGEKYWJ1cml0LCBpYWNhIMiZaSBlaSBsYSBjcmFpIMOubiBvZ3JhZMSDIGF1IHNvc2l0LgoK4oCUIEJ1biBzb3NpdCBsYSBub2ksIHZvaW5pY2UhIHppc2UgY3JhaXVsLCBjYW0gY3UganVtxIN0YXRlIGRlCmd1csSDLiBEYXIgYWlzdGEgY2FsIMibaSBsLWFpIGFsZXM/Li4uCgrigJQgQXBvaSBkxIMsIHRhdMSDLCBjdW0gYSBkYXQgdMOicmd1bCDImWkgbm9yb2N1bDsgYW0gZGUgdHJlY3V0IHByaW4KbXVsdGUgbG9jdXJpIMiZaSBudSB2cmVhdSBzxIMgbcSDIGlhIG9hbWVuaWkgbGEgb2NoaS4gTS1vaSBkdWNlIMiZaQpldSBjw6J0IGPEg2xhcmUsIGPDonQgcGUgam9zLCBjdW0gb2kgcHV0ZWEuCgrImGkgemljw6JuZCBhY2VzdGUsIHB1bmUgdGFybmnIm2EgcGUgY2FsLCBhbmluxIMgYXJtZWxlIGxhIG9ibMOibmMsCsOuyJlpIGlhIG1lcmluZGUgyJlpIGJhbmkgZGUgYWp1bnMsIHNjaGltYnVyaSDDrm4gZGVzYWdpIMiZaSBvIHBsb3NjxIMKcGxpbsSDIGN1IGFwxIMuIEFwb2kgc8SDcnV0xIMgbcOibmEgdGF0xIMtc8SDdSwgcHJpbWluZCBjYXJ0ZSBkZSBsYQpkw6Juc3VsIGPEg3RyZSDDrm1wxINyYXR1bCwgemljZSByxINtYXMgYnVuIGZyYcibaWxvciBzxINpIMiZaSBhIHRyZWlhCnppIGPEg3RyZSBzZWFyxIMgcG9ybmXImXRlIMiZaSBlbCwgbWVyZ8OibmQgZGluIHBhc3VsIGNhbHVsdWkuIMiYaQptZXJnZSBlbCwgyJlpIG1lcmdlLCBww6JuxIMgc2Ugw65ubm9wdGVhesSDIGJpbmUuIMiYaSwgcHJpbiBkcmVwdHVsCnBvZHVsdWksIG51bWFpIGlhY2Egw65pIGllc2UgyJlpIGx1aSB1cnN1bCDDrm5haW50ZSwgbW9ybsSDaW5kCsOubmZyaWNvyJlhdC4gQ2FsdWwgYXR1bmNpIGTEgyBuxIN2YWzEgyBhc3VwcmEgdXJzdWx1aSwgyJlpIGZpdWwKY3JhaXVsdWksIHJpZGljw6JuZCBidXpkdWdhbnVsIHPEgyBkZWEsIG51bWFpIGlhY2EgY2UgYXVkZSBnbGFzIGRlCm9tIHppY8OibmQ6CgrigJQgRHJhZ3VsIHRhdGVpLCBudSBkYSwgY8SDIGV1IHN1bnQuIEF0dW5jaSBmaXVsIGNyYWl1bHVpCmRlc2NhbGVjxIMsIMiZaSB0YXTEgy1zxIN1LCBjdXByaW56w6JuZHUtbCDDrm4gYnJhyJtlLCDDrmwgc8SDcnV0xIMgyJlpLWkKemljZToKCuKAlCBGxIN0dWwgbWV1LCBidW4gdG92YXLEg8iZIMibaS1haSBhbGVzOyBkZSB0ZS1hIMOubnbEg8ibYXQgY2luZXZhLApiaW5lIMibaS1hIHByaWl0LCBpYXLEgyBkZS1haSBmxINjdXQtbyBkaW4gY2FwdWwgdMSDdSwgYnVuIGNhcCBhaQphdnV0LiBNZXJnaSBkZS1hY3VtIHRvdCDDrm5haW50ZSwgY8SDIHR1IGXImXRpIHZyZWRuaWMgZGUgw65tcMSDcmF0LgpOdW1haSDIm2luZSBtaW50ZSBzZmF0dWwgY2UtyJtpIGRhdTogw65uIGPEg2zEg3RvcmlhIHRhIGFpIHPEgyBhaQp0cmVidWluyJvEgyDImWkgZGUgcsSDaSwgyJlpIGRlIGJ1bmksIGRhciBzxIMgdGUgZmVyZciZdGkgZGUgb211bCByb8iZLAppYXLEgyBtYWkgYWxlcyBkZSBjZWwgc3DDom4sIGPDonQgw65pIHB1dGVhOyBzxIMgbi1haSBkZS1hIGZhY2UgY3UKZMOibsiZaWksIGPEg2NpIHN1bnQgZm9hcnRlIMiZdWd1YmXIm2kuIMiYaSwgbGEgdG9hdMSDIMOubnTDom1wbGFyZWEsCmNhbHVsLCB0b3ZhcsSDyJl1bCB0xIN1LCB0ZS1hIG1haSBzZsSDdHVpIMiZaSBlbCBjZSBhaSBzxIMgZmFjaSwgY8SDIGRlCm11bHRlIHByaW1lamRpaSBtLWEgc2PEg3BhdCDImWkgcGUgbWluZSDDrm4gdGluZXJlyJtpbGUgbWVsZSEgTmEtyJtpCmFjdW0gyJlpIHBpZWxlYSBhc3RhIGRlIHVycywgY8SDIMibaS1hIHByaW5kZSBiaW5lIHZyZW9kYXTEgy4KCkFwb2ksIGRlem1pZXJkw6JuZCBjYWx1bCwgw65pIG1haSBzxINydXTEgyBkZSBjw6J0ZXZhIG9yaSBwZSBhbcOibmRvaQrImWkgbGUgemljZToKCuKAlCBNZXJnZcibaSDDrm4gcGFjZSwgZHJhZ2lpIG1laS4gRGUtYWN1bSDDrm5haW50ZSwgRHVtbmV6ZXUgyJl0aWUKY8OibmQgbmUtb20gbWFpIHZlZGVhIS4uLgoKRml1bCBjcmFpdWx1aSBhdHVuY2kgw65uY2FsZWPEgywgyJlpIGNhbHVsLCBzY3V0dXLDom5kdS1zZSwgbWFpCmFyYXTEgy1zZSBvIGRhdMSDIHTDom7Eg3IsIGN1bSDDrmkgcGzEg2NlYSBjcmFpdWx1aSwgYXBvaSBmYWNlIG8Kc8SDcml0dXLEgyDDrm5hcG9pIMiZaSB1bmEgw65uYWludGUgyJlpIHNlIGNhbSBtYWkgZHVjIGxhIMOubXDEg3LEg8ibaWUsCkR1bW5lemV1IHPEgyBuZSDIm2llLCBjxIMgY3V2w6JudHVsIGRpbiBwb3Zlc3RlLCDDrm5haW50ZSBtdWx0IG1haQplc3RlLiDImGkgbWVyZyBlaSBvIHppLCBtZXJnIGRvdcSDLCDImWkgbWVyZyBwYXRydXplY2kgyJlpIG5vdcSDLApww6JuxIMgY2UgZGUgbGEgbyB2cmVtZSBsZSBpbnRyxIMgY2FsZWEgw65uIGNvZHJ1IMiZaSBhdHVuY2kgbnVtYWkKaWFjYSBjZSBsZSBpZXNlIMOubmFpbnRlIHVuIG9tIHNww6JuIMiZaSB6aWNlIGN1IMOubmRyxIN6bmVhbMSDIGZpdWx1aQpkZSBjcmFpOgoK4oCUIEJ1biDDrm50w6JsbmnImXVsLCB2b2luaWNlISBOdSBhaSB0cmVidWluyJvEgyBkZSBzbHVnxIMgbGEgZHJ1bT8KUHJpbiBsb2N1cmlsZSBpZXN0ZWEgZSBjYW0gZ3JldSBkZSBjxINsxIN0b3JpdCBzaW5ndXI7IG51IGN1bXZhCnPEgy3Im2kgaWFzxIMgdnJvIGRpaGFuaWUgY2V2YSDDrm5haW50ZSDImWkgc8SDLcibaSBzY3VydGV6ZSBjxINyxINyaWxlLgpFdSBjdW5vc2MgYmluZSBwZS1haWNpLCDImWkgcG9hdGUgbWFpIMOubmNvbG8gc8SDIGFpIG5ldm9pZSBkZSB1bnVsCmNhIG1pbmUuCgrigJQgUG9hdGUgc8SDIGFtLCBwb2F0ZSBzxIMgbi1hbSwgemlzZSBmaXVsIGNyYWl1bHVpLCB1aXTDom5kdS1zZQrIm2ludMSDIMOubiBvY2hpaSBTcMOibnVsdWksIGRhciBhY3VtIGRlb2RhdMSDIG3EgyBsYXMgw65uIHZvaWEKw65udMOibXBsxINyaWksIMiZaSBhcG9pLCBkw6JuZCBwaW50ZW5pIGNhbHVsdWksIHBvcm5lyJl0ZS4KCk1haSBtZXJnZSBlbCDDrm5haW50ZSBwcmluIGNvZHJ1IGPDonQgbWVyZ2UsIMiZaSwgbGEgbyBzdHLDom10b2FyZSwKbnVtYWkgaWFjYSBjZSBTcMOibnVsIGlhciDDrmkgaWVzZSDDrm5haW50ZSwgcHJlZsSDY3V0IMOubiBhbHRlCnN0cmFpZSwgyJlpIHppY2UgY3UgZ2xhcyBzdWLIm2lyYXRpYyDImWkgbmVjdW5vc2N1dDoKCuKAlCBCdW7EgyBjYWxlYSwgZHJ1bWXIm3VsZSEg4oCUIEJ1bsSDIHPEgy3Im2kgZmllIGluaW1hLCBjdW0gyJtpLWkKY8SDdXTEg3R1cmEsIHppc2UgZml1bCBjcmFpdWx1aS4g4oCUIEPDonQgZGVzcHJlIGluaW1hIG1lYSwgcy1vIGRlYQpEdW1uZXpldSBvcmljdWksIHppc2UgU3DDom51bCBvZnTDom5kLi4uIE51bWFpIGNlIGZvbG9zPyBPbXVsIGJ1bgpuLWFyZSBub3JvYzsgYXN0YS1pIMiZdGl1dMSDOyByb2d1LXRlLCBzxIMgbnUtyJtpIGZpZSBjdSBzdXDEg3JhcmUsCmRydW1lyJt1bGUsIGRhciBmaWluZGPEgyBhIHZlbml0IHZvcmJhIGRlLWHImWEsIMOuyJtpIHNwdW4sIGNhIGxhIHVuCmZyYXRlLCBjxIMgZGluIGNydWRhIGNvcGlsxINyaWUgc2x1amVzYyBwcmluIHN0csSDaW5pLCDImWkgw65uY2FsdGVhCm51IG1pLWFyIGZpIGNpdWTEgywgY8OibmQgbi1hyJkgdnJhIHPEgyBtxIMgZGF1IGxhIHRyZWFixIMsIGPEg2NpIGN1Cm11bmNhIG0tYW0gdHJleml0LiBEYXIgYciZYSwgbXVuY2VzYywgbXVuY2VzYywgyJlpIG51IHMtYWxlZ2UKbmltaWNhIGRlIG1pbmU7IHBlbnRydSBjxIMgdG90IGRlIHN0xINww6JuaSBjYWxpY2kgbWktYW0gYXZ1dApwYXJ0ZS4gyJhpIHZvcmJhIGNlZWE6IExhIGNhbGljIHNsdWplyJl0aSwgY2FsaWMgcsSDbcOiaS4gQ8OibmQgYciZIGRhCm9kYXTEgyBwZXN0ZSB1biBzdMSDcMOibiBjdW0gZ8OibmRlc2MgZXUsIG4tYciZIMiZdGkgY2Ugc8SDIGZhYyBzxIMgbnUtbApzbWludGVzYy4gTnUgY3VtdmEgYWkgdHJlYnVpbsibxIMgZGUgc2x1Z8SDLCB2b2luaWNlPyBDdW0gdGUgdsSDZCwKc2FtZW5pIGEgYXZlYSBzZXUgbGEgcsSDcnVuY2hpLiBEZSBjZSB0ZSBzY3VtcGXImXRpIHBlbnRydSBuaW1pY2EKdG9hdMSDIMiZaSBudS3Im2kgaWVpIG8gc2x1Z8SDIHZyZWRuaWPEgywgY2Egc8SDLcibaSBmaWUgbcOibsSDIGRlIGFqdXRvcgpsYSBkcnVtPyBMb2N1cmlsZSBhaWVzdGVhIHN1bnQgyJl1Z3ViZcibZTsgZGUgdW5kZSDImXRpaSBjdW0gdmluZQrDrm50w6JtcGxhcmVhLCDImWksIERvYW1uZSBmZXJlyJl0ZSwgc8SDIG51LcibaSBjYWTEgyBncmV1IHNpbmd1ci4KCuKAlCBBY3VtIGRlb2RhdMSDIMOubmPEgyB0b3QgbnUsIHppc2UgZml1bCBjcmFpdWx1aSBjdSBtw6JuYSBwZQpidXpkdWdhbjsgbS1vaSBtYWkgc2x1amkgyJlpIGV1IHNpbmd1ciwgY3VtIG9pIHB1dGVhLCDImWkgZMOibmQgaWFyCnBpbnRlbmkgY2FsdWx1aSwgcG9ybmXImXRlIG1haSByZXBlZGUuCgrImGkgbWVyZ8OibmQgZWwgdG90IMOubmFpbnRlIHByaW4gY29kcmkgw65udHVuZWNvyJlpLCBkZSBsYSB1biBsb2Mgc2UKw65uY2hpZGUgY2FsZWEgyJlpIMOubmNlcCBhIGkgc2Ugw65uY3VyY2EgY8SDcsSDcmlsZSwgw65uY8OidCBudSBzZSBtYWkKcHJpY2VwZSBmaXVsIGNyYWl1bHVpIGFjdW0gw65uY290cm8gc8SDIGFwdWNlIMiZaSBwZSB1bmRlIHPEgyBtZWFyZ8SDLgoK4oCUIFB0aXUsIGRyYWNlISBpYWNhIMOubiBjZSDDrm5jdXJjxIN0dXLEgyBhbSBpbnRyYXQhIEFzdGEtaSBtYWkgcsSDdQpkZWPDonQgcG9mdGltIGxhIG1hc8SDLCB6aXNlIGVsLiBOaWNpIHR1IHNhdCwgbmljaSB0dSB0w6JyZywgbmljaQp0dSBuaW1pY2EuIERlIGNlIG1lcmdpIMOubmFpbnRlLCBudW1haSBwZXN0ZSBwdXN0aWV0xIPIm2kgZGFpOwpwYXJjxIMgYSBwaWVyaXQgc8SDbcOibsibYSBvbWVuZWFzY8SDIGRlIHBlIGZhyJthIHDEg23Dom50dWx1aS4gw45taSBwYXJlCnLEg3UgY8SDIG4tYW0gbHVhdCBtxINjYXIgc3DDom51bCBjZWwgZGUtYWwgZG9pbGVhIGN1IG1pbmUuIERhY8SDIHMtYQphcnVuY2F0IMOubiBwYXJ0ZWEgbcOibmUtc2EsIGNlLWkgdmlub3ZhdCBlbD8gVGF0YSBhyJlhIGEgemlzLCDDrm5zxIMKbGEgbWFyZSBuZXZvaWUgY2UtaSBkZSBmxINjdXQ/IHZvcmJhIGNlZWE6IFLEg3UtaSBjdSByxIN1LCBkYXIgZQptYWkgcsSDdSBmxINyJyBkZSByxIN1LiDImGkgdG90IGhvcmjEg2luZCBlbCBjw6JuZCBwZSBvIGPEg3JhcmUsIGPDom5kCnBlIHVuIGRydW0gcMSDcsSDc2l0LCBudW1haSBpYWNhIGNlIGlhciDDrmkgaWVzZSBTcMOibnVsIMOubmFpbnRlLArDrm1icsSDY2F0IGFsdGZlbCDImWkgY8SDbGFyZSBwZSB1biBjYWwgZnJ1bW9zLCDImWksIHByZWbEg2PDom5kdS3ImWkKZ2xhc3VsLCDDrm5jZXBlIGEgY8SDaW5hIHBlIGZpdWwgY3JhaXVsdWksIHppY8OibmQ6CgrigJQgU8SDcm1hbmUgb211bGUsIHLEg3UgZHJ1bSBhaSBhcHVjYXQhIFNlIHZlZGUgY8SDIGXImXRpIHN0csSDaW4gyJlpCm51IGN1bm/ImXRpIGxvY3VyaWxlIHBlIGFpY2kuIEFpIGF2dXQgbWFyZSBub3JvYyBkZSBtaW5lLCBkZSBuLWFpCmFwdWNhdCBhIGNvYm9yw64gcHJpcG9ydWwgaXN0YSwgY8SDIGVyYWkgcHLEg3DEg2RpdC4gSWEsIGNvbG8KZGV2YWxlLCDDrm4gw65uZnVuZMSDdHVyYSBjZWVhLCB1biB0YXVyIGdyb3phdiBsYSBtdWzIm2kgYmV6bWV0aWNpCmxlLWEgY3VybWF0IHppbGVsZS4gyJhpIGV1LCBtYWkgZGV1bsSDemksIGPDonQgbcSDIHZlemkgZGUgdm9pbmljLApkZS1hYmlhIGFtIHNjxINwYXQgZGUgZMOibnN1bCwgY2EgcHJpbiB1cmVjaGlsZSBhY3VsdWkuCsOObnRvYXJjZS10ZSDDrm5hcG9pLCBvcmksIGRhY8SDIGFpIGRlIGR1cyDDrm5haW50ZSwgaWEtyJtpIHVuIGFqdXRvcgpwZSBjaW5ldmEuIENoaWFyIMiZaSBldSBtLWHImSB0b2NtaSBsYSBkLXRhLCBkYWPEgyDIm2ktYSBmaSBjdQpwbMSDY2VyZS4KCuKAlCBByJlhIGFyIHRyZWJ1aSBzxIMgdXJtZXosIG9tIGJ1biwgemlzZSBmaXVsIGNyYWl1bHVpLCBkYXIgyJtpLW9pCnNwdW5lIGRyZXB0OiB0YXRhIG1pLWEgZGF0IMOubiBncmlqxIMsIGPDom5kIGFtIHBvcm5pdCBkZS1hY2FzxIMsIGNhCnPEgyBtxIMgZmVyZXNjIGRlIG9tdWwgcm/ImSwgaWFyxIMgbWFpIGFsZXMgZGUgY2VsIHNww6JuLCBjw6J0IG9pCnB1dGVhOyBzxIMgbi1hbSBkZSBhIGZhY2UgY3UgZMOibsiZaWkgbmljaSDDrm4gY2xpbiwgbmljaSDDrm4gbcOubmVjxIM7CsiZaSBkYWPEgyBuLWFpIGZpIHNww6JuLCBidWN1cm9zIHRlLWHImSB0b2NtaS4KCuKAlCBIZWksIGhlaSEgY8SDbMSDdG9ydWxlLiBEYWPEgyDIm2ktaSB2b3JiYSBkZS1hyJlhLCBhaSBzxIMtyJtpIHJ1cGkKY2lvY2hpbmVsZSB1bWJsw6JuZCDImWkgdG90IG4tYWkgc8SDIGfEg3NlyJl0aSBzbHVnxIMgY3VtIGNhdcibaSBkLXRhLApjxIMgcGUtYWljaSBzdW50IG51bWFpIG9hbWVuaSBzcMOibmkuIMiYLWFwb2ksIGPDom5kIGVzdGUgbGEKYWRpY8SDbGVhLCB0ZS1hyJkgw65udHJlYmE6IGNhJyBjZSBmZWwgZGUgesSDdGljbmVhbMSDIGFpIHB1dGVhIHPEgwrDrm50w6JtcGluaSBkaW4gcHJpY2luYSBhc3RhPyBQZXNlbW5lIG4tYWkgYXV6aXQgdm9yYmEgY2VlYTogY8SDIGRlCnDEg3IgyJlpIGRlIGNvYXRlLWdvYWxlIG51IHNlIHBsw6JuZ2UgbmltZW5lLiDImGkgY8OibmQgbnUgc3VudCBvY2hpCm5lZ3JpLCBzxINydcibaSDImWkgYWxiYciZdHJpISBByJlhIMiZaSBkLXRhOiBtdWzIm3VtZciZdGUgbHVpIER1bW5lemV1CmPEgyBtLWFpIGfEg3NpdCDImWkgdG9jbWXImXRlLW3Egy4gyJhpIGRhY8SDLWkgYXB1Y2Egb2RhdMSDIGEgdGUKZGVwcmluZGUgY3UgbWluZSwgyJl0aXUgYmluZSBjxIMgbi1hbSBzxIMgcG90IHNjxINwYSB1yJlvciBkZSBkLXRhLApjxINjaSBhyJlhIHN1bnQgZXUgw65uIGZlbHVsIG1ldSwgyJl0aXUgdW5hIMiZaSBidW7Egzogc8SDLW1pIHNsdWplc2MKc3TEg3DDom51bCBjdSBkcmVwdGF0ZS4gSGFpLCBudSBtYWkgc3RhIGxhIMOubmRvaWFsxIMsIGPEgyBtxIMgdGVtIHPEgwpudSBuZS1hcHVjZSBub2FwdGVhIHBlIGFpY2kuIMiYaSBjw6JuZCBhaSBhdmVhIMOubmNhbHRlYSB1biBjYWwKYnVuLCBjYWxlYS12YWxlYSwgZGFyIGN1IHNtw6JyyJtvZ3VsIGlzdGEgw67Im2kgZHVjIHZlcmdpbGUuCgrigJQgQXBvaSBkxIMsIFNww6JudWxlLCBudSDImXRpdSBjdW0gc8SDIGZhYywgemlzZSBmaXVsIGNyYWl1bHVpLiBEaW4KY29waWzEg3JpYSBtZWEgc3VudCBkZXByaW5zIGEgYXNjdWx0YSBkZSB0YXTEgyDImWksIHRvY21pbmR1LXRlIHBlCnRpbmUsIHBhcmPEgy1taSB2aW5lIG51IMiZdGl1IGN1bS4gRGFyLCBmaWluZGPEgyBtaS1hdSBtYWkgaWXImWl0CnDDom7EgyBhY3VtIMOubmFpbnRlIMOubmPEgyBkb2kgc3DDom5pLCDImWkgY3UgdGluZSBhbCB0cmVpbGVhLCBhcG9pCm1haS1taSB2aW5lIGEgY3JlZGUgY8SDIGFzdGEtaSDIm2FyYSBzcMOibmlsb3IgyJlpIG4tYW0gw65uY290cm87Cm1vcnQtY29wdCwgdHJlYnVpZSBzxIMgdGUgaWF1IGN1IG1pbmUsIGRhY8SDIHppY2kgY8SDIMiZdGlpIGJpbmUKbG9jdXJpbGUgcGUgYWljaS4KCsiYaSwgZGluIGRvdcSDIHZvcmJlLCBmaXVsIGNyYWl1bHVpIMOubCB0b2NtZciZdGUgyJlpIGR1cMSDIGFjZWVhCnBvcm5lc2Mgw65tcHJldW7EgyBzxIMgaWFzxIMgbGEgZHJ1bSwgcGUgdW5kZSBhcmF0xIMgU3DDom51bC4gyJhpCm1lcmfDom5kIGVpIG8gYnVjYXTEgyBidW7EgywgU3DDom51bCBzZSBwcmVmYWNlIGPEgy1pIGUgc2V0ZSDImWkgY2VyZQpwbG9zY2EgY3UgYXDEgyBkZSBsYSBzdMSDcMOibnUtc8SDdS4gRml1bCBjcmFpdWx1aSBpLW8gZMSDLCDImWkKU3DDom51bCwgY3VtIG8gcHVuZSBsYSBndXLEgywgcGUgbG9jIG8gyJlpIGlhLCBvyJvEg3LDom5kdS1zZSwgyJlpCnZhcnPEgyB0b2F0xIMgYXBhIGRpbnRyLcOubnNhLiBGaXVsIGNyYWl1bHVpIHppY2UgYXR1bmNpIHN1cMSDcmF0OgoK4oCUIERhciBiaW5lLCBTcMOibnVsZSwgZGUgY2UgdGUgYXB1Y2k/IE51IHZlemkgY8SDIHBlIGFpY2kgZSBtYXJlCmxpcHPEgyBkZSBhcMSDPyDImGkgcGUgYXLImWnIm2EgYXN0YSBvIHPEgyBuZSB1c2PEg20gZGUgc2V0ZS4KCuKAlCBTxIMgYXZlbSBpZXJ0YXJlLCBzdMSDcMOibmUhIEFwYSBlcmEgYsOiaGxpdMSDIMiZaSBuZS1hbSBmaSBwdXR1dApib2xuxIN2aS4gQ8OidCBkZXNwcmUgYXBhIGJ1bsSDLCBudSB2xIMgw65uZ3JpamnIm2k7IGFjdciZIGF2ZW0gc8SDIGTEg20KcGVzdGUgbyBmw6JudMOibsSDIGN1IGFwxIMgZHVsY2UgyJlpIHJlY2UgY2EgZ2hlYcibYS4gQWNvbG8gdm9tIHBvcG9zaQpwdcibaW4sIG9pIGNsxIN0xINyaSBwbG9zY2EgYmluZSDImS1vaSB1bXBsZS1vIGN1IGFwxIMgcHJvYXNwxIN0xIMsIGNhCnPEgyBhdmVtIGxhIGRydW0sIGPEg2NpIG1haSDDrm5jb2xvIG51IHByZWEgc3VudCBmw6JudMOibmksIMiZaSwgZGluCnBhcnRlYSBhcGVpLCBtaSBzZSBwYXJlIGPEgyBpLW9tIGR1Y2UgZG9ydWwuIMiYaSBjw6JybmluZCBwZSBvCmPEg3JhcmUsIG1haSBtZXJnIGVpIG9sZWFjxIMgw65uYWludGUsIHDDom7EgyBjZSBhanVuZyDDrm50ci1vIHBvaWFuxIMKyJlpIG51bWFpIGlhY2EgY2UgZGF1IGRlIG8gZsOibnTDom7EgyBjdSBnaGl6ZGVsZSBkZSBzdGVqYXIgyJlpIGN1IHVuCmNhcGFjIGRlc2NoaXMgw65uIGzEg3R1cmkuIEbDom50w6JuYSBlcmEgYWTDom5jxIMgyJlpIG51IGF2ZWEgbmljaQpyb2F0xIMsIG5pY2kgY3VtcMOibsSDLCBjaSBudW1haSBvIHNjYXLEgyBkZSBjb2JvcsOidCBww6JuxIMgbGEgYXDEgy4KCuKAlCBFaSwgZWkhIFNww6JudWxlLCBhY3VtIHPEgyB0ZSB2xINkIGPDonQgZciZdGkgZGUgdnJlZG5pYywgemlzZSBmaXVsCmNyYWl1bHVpLiBTcMOibnVsIGF0dW5jaSB6w6JtYmXImXRlIHB1yJtpbiDImWksIGNvYm9yw6JuZHUtc2Ugw65uCmbDom50w6JuxIMsIHVtcGxlIMOubnTDomkgcGxvc2NhIMiZaSBvIHB1bmUgbGEgyJlvbGQuIEFwb2ksIG1haSBzdMOibmQKYWNvbG8gw65uIGZ1bmQgcGUgc2NhcsSDLCBhcHJvYXBlIGRlIGZhyJthIGFwZWksIHppY2U6CgrigJQgRWksIGRhJyBjZSByxINjb2FyZS1pIGFpY2khICJDaGltYSByxIN1bHVpIHBlIG1hbHVsIHDDonLEg3VsdWkhIgrDjm1pIHZpbmUgc8SDIG51IG1haSBpZXMgYWZhcsSDLiBEdW1uZXpldSBzxIMgdciZdXJlemUgcMSDY2F0ZWxlIGNlbHVpCmN1IGbDom50w6JuYSwgY8SDIGJ1biBsdWNydSBhIG1haSBmxINjdXQuIFBlIGFyyJlpyJtlbGUgaWVzdGUsIG8KcsSDY29yZWFsxIMgY2EgYXN0YSBtdWx0IHBsxIN0ZciZdGUhCgpNYWkgyJllZGUgZWwgYWNvbG8gcHXIm2luIMiZaSBhcG9pIGllc2UgYWZhcsSDLCB6aWPDom5kOiDigJQgRG9hbW5lLApzdMSDcMOibmUsIG51IMiZdGlpIGPDonQgbcSDIHNpbcibZXNjIGRlIHXImW9yOyBwYXJjxIMgw65taSB2aW5lIHPEgyB6Ym9yLApudSBhbHTEg2NldmEhIElhIHbDonLEgy10ZSDImWkgZC10YSBvbGVhY8SDLCBzxIMgdmV6aSBjdW0gYWkgc8SDIHRlCnLEg2NvcmXImXRpOyBhyJlhIGFyZSBzxIMtyJtpIHZpbsSDIGRlIMOubmRlbcOibsSDIGR1cMSDIGFzdGEsIGRlIGFyZSBzxIMKyJtpIHNlIHBhcsSDIGPEgyBlyJl0aSB1yJlvciBjdW0gw65pIHBhbmEuLi4KCkZpdWwgY3JhaXVsdWksIGJvYm9jIMOubiBmZWx1bCBzxIN1IGxhIHRyZWJpIGRlIGFpZXN0ZSwgc2UKcG90cml2ZciZdGUgU3DDom51bHVpIMiZaSBzZSBiYWfEgyDDrm4gZsOibnTDom7EgywgZsSDcsSDIHPEgy1pIHRyxINzbmVhc2PEgwpwcmluIG1pbnRlIGNlIGkgc2UgcG9hdGUgw65udMOibXBsYS4gyJhpIGN1bSBzdGEgyJlpIGVsIGFjb2xvIGRlIHNlCnLEg2NvcmVhLCBTcMOibnVsIGZhY2UgdHJhbmMhIGNhcGFjdWwgcGUgZ3VyYSBmw6JudMOibmlpLCBhcG9pIHNlCnN1aWUgZGVhc3VwcmEgbHVpIMiZaSB6aWNlIGN1IGdsYXMgcsSDdXTEg2Npb3M6CgrigJQgQWxlbGVpISBmZWNpb3IgZGUgb20gdmljbGVhbiBjZSB0ZSBnxINzZciZdGk7IHRvY21haSBkZSBjZWVhIGNlCnRlLWFpIHDEg3ppdCBuLWFpIHNjxINwYXQuIEVpLCBjxIMgYmluZSBtaSB0ZS1hbSBjxINwdHXImWl0ISBBY3VtCnPEgy1taSBzcHVpIHR1IGNpbmUgZciZdGksIGRlIHVuZGUgdmlpIMiZaSDDrm5jb3RybyB0ZSBkdWNpLCBjxIMsIGRlCm51LCBhY29sbyDDrsibaSBwdXRyZXplc2MgY2lvbGFuZWxlIQoKRml1bCBjcmFpdWx1aSBjZSBlcmEgc8SDIGZhY8SDPyDDjmkgc3B1bmUgY3UgZGUtYW3Eg251bnR1bCwgY8SDY2ksCmTEgywgY2FyZSBvbSBudSDIm2luZSBsYSB2aWHIm8SDIMOubmFpbnRlIGRlIHRvYXRlPwoK4oCUIEJpbmUsIGF0w6J0YSBhbSB2cnV0IHPEgyBhZmx1IGRpbiBndXJhIHRhLCBwdWkgZGUgdmlwZXLEgyBjZQptaS1haSBmb3N0LCB6aWNlIGF0dW5jaSBTcMOibnVsOiBudW1haSBjYXTEgyBzxIMgZmllIGHImWEsIGPEgywgZGUKdGUtb2kgcHJpbmRlIGN1IG9jYSBtaWPEgywgZ3JldSBhcmUgc8SDLcibaSBjYWTEgy4gQ2hpYXIgYWN1bSBhyJkKcHV0ZWEgc8SDIHRlIG9tb3IsIMOubiB2b2lhIGNlYSBidW7EgywgZGFyIG1pLWkgbWlsxIMgZGUgdGluZXJlyJtpbGUKdGFsZS4uLiBEYWPEgyB2cmVpIHPEgyBtYWkgdmV6aSBzb2FyZWxlIGN1IG9jaGlpIMiZaSBzxIMgbWFpIGNhbGNpCnBlIGlhcmLEgyB2ZXJkZSwgYXR1bmNpIGp1csSDLW1pLXRlIHBlIGFzY3XIm2nImXVsIHBhbG/ImXVsdWkgdMSDdSBjxIMKbWktaSBkYSBhc2N1bHRhcmUgyJlpIHN1cHVuZXJlIMOubnRydSB0b2F0ZSwgY2hpYXIgyJlpLW4gZm9jIGRlCsibaS1hyJkgemljZSBzxIMgdGUgYXJ1bmNpLiDImGksIGRlIGF6aSDDrm5haW50ZSwgZXUgbyBzxIMgZml1IMOubgpsb2N1bCB0xIN1IG5lcG90dWwgw65tcMSDcmF0dWx1aSwgZGVzcHJlIGNhcmUgbWktYWkgdm9yYml0LCBpYXLEgyB0dQrigJQgc2x1Z2EgbWVhOyDImWkgYXTDonRhIHZyZW1lIHPEgyBhaSBhIG3EgyBzbHVqaSwgcMOibsSDIGPDom5kIMOuaSBtdXJpCsiZaSBpYXIgw65pIMOubnZpYS4gyJhpIG9yaXVuZGUgdmVpIG1lcmdlIGN1IG1pbmUsIG51IGNhcmUgY3VtdmEgc8SDCmJsZciZdGXImXRpIGRpbiBndXLEgyBjxIN0cmUgY2luZXZhIGRlc3ByZSBjZWVhIGNlIGEgdXJtYXQgw65udHJlCm5vaSwgY8SDIHRlLWFtIMiZdGVycyBkZSBwZSBmYcibYSBwxINtw6JudHVsdWkuIMOOyJtpIHBsYWNlIGHImWEgc8SDIG1haQp0csSDaWXImXRpLCBiaW5lLWRlLWJpbmU7IGlhcsSDIGRlIG51LCBzcHVuZS1taSB2ZXJkZSDDrm4gb2NoaSwgY2EKc8SDIMiZdGl1IGNlIGxlYWMgdHJlYnVpZSBzxIMtyJtpIGZhYy4uLgoKRml1bCBjcmFpdWx1aSwgdsSDesOibmR1LXNlIHByaW5zIMOubiBjbGXImXRlIMiZaSBmxINyxIMgbmljaSBvIHB1dGVyZSwKw65pIGp1csSDIGNyZWRpbsibxIMgyJlpIHN1cHVuZXJlIMOubnRydSB0b2F0ZSwgbMSDc8OibmR1LXNlIMOubiDImXRpcmVhCmx1aSBEdW1uZXpldSwgY3VtIGEgdnJlYSBlbCBzxIMgZmFjxIMuIEF0dW5jaSBTcMOibnVsIHB1bmUgbcOibmEgcGUKY2FydGVhLCBwZSBiYW5paSDImWkgcGUgYXJtZWxlIGZpdWx1aSBkZSBjcmFpIMiZaSBsZSBpYSBsYSBzaW5lOwphcG9pIMOubCBzY29hdGUgZGluIGbDom50w6JuxIMgyJlpLWkgZMSDIHBhbG/ImXVsIHPEgy1sIHPEg3J1dGUsIGNhIHNlbW4KZGUgcGVjZXRsdWlyZSBhIGp1csSDbcOibnR1bHVpLCB6aWPDom5kOgoK4oCUIERlLWFjdW0gw65uYWludGUgc8SDIMiZdGlpIGPEgyB0ZSBjaGVhbcSDIEhhcmFwLUFsYjsgYWlzdGEgyJtpLWkKbnVtZWxlLCDImWkgYWx0dWwgbnUuCgpEdXDEgyBhY2Vhc3RhIMOubmNhbGVjxIMsIGZpZWNhcmUgcGUgY2FsdWwgc8SDdSwgyJlpIHBvcm5lc2MsIFNww6JudWwKw65uYWludGUsIGNhIHN0xINww6JuLCBIYXJhcC1BbGIgw65uIHVybcSDLCBjYSBzbHVnxIMsIG1lcmfDom5kIHNwcmUKw65tcMSDcsSDyJtpZSwgRHVtbmV6ZXUgc8SDIG5lIMibaWUsIGPEgyBjdXbDom50dWwgZGluIHBvdmVzdGUsIMOubmFpbnRlCm11bHQgbWFpIGVzdGUuCgrImGkgbWVyZyBlaSwgyJlpIG1lcmcsIGNhbGUgbHVuZ8SDIHPEgyBsZS1hanVuZ8SDLCB0cmVjw6JuZCBwZXN0ZSBub3XEgwptxINyaSwgcGVzdGUgbm91xIMgyJvEg3JpIMiZaSBwZXN0ZSBub3XEgyBhcGUgbWFyaSwgyJlpIMOubnRyLW8gdMOicnppZQp2cmVtZSBhanVuZyBsYSDDrm1wxINyxIPIm2llLgoKyJhpIGN1bSBhanVuZywgU3DDom51bCBzZSDDrm5mxIPIm2nImWF6xIMgw65uYWludGVhIMOubXDEg3JhdHVsdWkgY3UgY2FydGUKZGluIHBhcnRlYSBjcmFpdWx1aS4gyJhpIMOubXDEg3JhdHVsIFZlcmRlLCBjaXRpbmQgY2FydGVhLCBhcmRlIGRlCmJ1Y3VyaWUgY8SDIGktYSB2ZW5pdCBuZXBvdHVsLCDImWkgcGUgZGF0xIMgw65sIMiZaSBmYWNlIGN1bm9zY3V0CmN1csibaWkgyJlpIGZldGVsb3Igc2FsZSwgY2FyZSDDrmwgcHJpbWVzYyBjdSB0b2F0xIMgY2luc3RlYQpjdXZlbml0xIMgdW51aSBmaXUgZGUgY3JhaSDImWkgbW/ImXRlbml0b3IgYWwgw65tcMSDcmF0dWx1aS4KCkF0dW5jaSBTcMOibnVsLCB2xIN6w6JuZCBjxIMgaSBzLWF1IHByaW5zIG1pbmNpdW5pbGUgZGUgYmluZSwgY2hlYW3EgwpsYSBzaW5lIHBlIEhhcmFwLUFsYiDImWktaSB6aWNlIGN1IGFzcHJpbWU6CgrigJQgVHUgc8SDIMiZZXppIGxhIGdyYWpkIG5lZGV6bGlwaXQgyJlpIHPEgyDDrm5ncmlqZciZdGkgZGUgY2FsdWwgbWV1CmNhIGRlIG9jaGlpIGRpbiBjYXAsIGPEgyBkZS1vaSB2ZW5pIHBlLWFjb2xvIMiZaSBuLW9pIGfEg3NpIHRyZWJpbGUKZsSDY3V0ZSBkdXDEgyBwbGFjLCB2YWkgZGUgcGllbGVhIHRhIGFyZSBzxIMgZmllLiBEYXIgcMOibsSDIGF0dW5jaSwKbmEtyJtpIG8gcGFsbcSDLCBjYSBzxIMgyJtpaSBtaW50ZSBjZSDIm2ktYW0gc3B1cy4gQmFnYXQtYWkgw65uIGNhcAp2b3JiZWxlIG1lbGU/CgrigJQgRGEsIHN0xINww6JuZSwgemlzZSBIYXJhcC1BbGIsIGzEg3PDom5kIG9jaGlpIMOubiBqb3MuIMiYaSwgaWXImWluZCwKcG9ybmXImXRlIGxhIGdyYWpkLiBDdSBhc3RhIGEgdm9pdCBTcMOibnVsIHPEgy3ImWkgYXJhdGUgYXJhbWEgyJlpIHPEgwpmYWPEgyBwZSBIYXJhcEFsYiBjYSBzxIMtaSBpYSDImWkgbWFpIG11bHQgZnJpY2EuCgpGZXRlbGUgw65tcMSDcmF0dWx1aSDDrm50w6JtcGzDom5kdS1zZSBkZSBmYcibxIMgY8OibmQgYSBsb3ZpdCBTcMOibnVsIHBlCkhhcmFwLUFsYiwgbGkgcy1hIGbEg2N1dCBtaWzEgyBkZSBkw6Juc3VsIMiZaSBhdSB6aXMgU3DDom51bHVpIGN1CmJpbmnImW9ydWw6CgrigJQgVmVyZSwgbnUgZmFjaSBiaW5lIGNlZWEgY2UgZmFjaS4gRGFjxIMgZXN0ZSBjxIMgYSBsxINzYXQgRHVtbmV6ZXUKc8SDIGZpbSBtYXJpIHBlc3RlIGFsyJtpaSwgYXIgdHJlYnVpIHPEgyBhdmVtIG1pbMSDIGRlIGTDom7ImWlpLCBjxIMgyJlpCmVpLCBzxINybWFuaWksIHN1bnQgb2FtZW5pIQoK4oCUIEhlaSwgZHJhZ2VsZSBtZWxlIHZlcmUsIHppY2UgU3DDom51bCBjdSB2aWNsZW5pYSBsdWkKb2JpY2ludWl0xIM7IGQtdm9hc3RyxIMgw65uY8SDIG51IMiZdGnIm2kgY2UtaSBwZSBsdW1lLiBEYWPEgwpkb2JpdG9hY2VsZSBuLWFyIGZpIGZvc3Qgw65uZnLDom5hdGUsIGRlIGRlbXVsdCBhciBmaSBzZsOiyJlpYXQgcGUKb20uIMiYaSB0cmVidWllIHPEgyDImXRpyJtpIGPEgyDImWkgw65udHJlIG9hbWVuaSBjZWEgbWFpIG1hcmUgcGFydGUKc3VudCBkb2JpdG9hY2UsIGNhcmUgdHJlYnVpZXNjIMibaW51yJtpIGRpbiBmcsOidSwgZGFjxIMgyJtpLWkgdm9pYQpzxIMgZmFjaSB0cmVhYsSDIGN1IGTDom7ImWlpLgoKRWksIGFwb2kuLi4gemkgY8SDIG51LWkgbHVtZWEgZGUtYXBvaSEgU8SDIHRlIGZlcmVhc2PEgyBEdW1uZXpldQpjw6JuZCBwcmluZGUgbcSDbcSDbGlnYSBjb2FqxIMuIFZvcmJhIGNlZWE6CgpExIMtbWksIERvYW1uZSwgY2Ugbi1hbSBhdnV0LApTxIMgbcSDIG1pZXIgY2UgbS1hIGfEg3NpdC4KRmV0ZWxlIGF0dW5jaSBhdSBsdWF0IGFsdMSDIHZvcmLEgywgZGFyIGRpbiBpbmltYSBsb3IgbnUgcy1hIMiZdGVycwpwdXJ0YXJlYSBuZWN1dmlpbmNpb2FzxIMgYSBTcMOibnVsdWksIGN1IHRvYXRlIMOubmRyZXB0xINyaWxlIMiZaQrDrm5ydWRpcmVhIGx1aSwgcGVudHJ1IGPEgyBidW7Eg3RhdGVhIG51IGFyZSBkZS1hIGZhY2UgY3UgcsSDdXRhdGVhLgpWb3JiYSBjZWVhOgoKVmnIm2EtZGUtdmllLCB0b3Qgw65uIHZpZSwKSWFyxIMgdmnIm2EtZGUtYm96LCB0b3QgcsSDZ296LgrImGkgZGluIGNlYXN1bCBhY2VsYSBhdSDDrm5jZXB1dCBhIHZvcmJpIGVsZSDDrm5kZSBlbGUsIGPEgyBTcMOibnVsCmRlZmVsIG51IHNhbcSDbsSDIMOubiBwYXJ0ZWEgbG9yLCBuaWNpIGxhIGNoaXAsIG5pY2kgbGEgYnVuxIN0YXRlOwrImWkgY8SDIEhhcmFwLUFsYiwgc2x1Z2EgbHVpLCBhcmUgbyDDrm5mxIPIm2nImWFyZSBtdWx0IG1haSBwbMSDY3V0xIMgyJlpCnNlYW3Eg27EgyBhIGZpIG11bHQgbWFpIG9tZW5vcy4gUGVzZW1uZSBpbmltYSBsZSBzcHVuZWEgY8SDIFNww6JudWwKbnUgbGUgZXN0ZSB2xINyLCDImWkgZGUgYWNlZWEgbnUtbCBwdXRlYXUgbWlzdHVpLiBByJlhIMOubCB1csOic2UgZWxlCmRlIHRhcmUgYWN1bSwgY8SDLCBkYWPEgyBhciBmaSBmb3N0IMOubiBiYW5paSBsb3IsIHMtYXIgZmkgbGVwxINkYXQKZGUgU3DDom4gY2EgZGUgVWNpZ8SDLWwtY3J1Y2VhLiBEYXIgbnUgYXZlYXUgY2Ugc2UgZmFjZSBkZQrDrm1wxINyYXR1bCwgY2Egc8SDIG51LWkgYWR1Y8SDIHN1cMSDcmFyZS4KCkFtdSwgw65udHItdW5hIGRpbiB6aWxlLCBjdW0gyJllZGVhIFNww6JudWwgbGEgb3NwxIPImyDDrm1wcmV1bsSDIGN1Cm1vyJl1LXPEg3UsIGN1IHZlcmVsZSBzYWxlIMiZaSBjdSBhbMibaWksIGPDosibaSBzZSDDrm50w6JtcGxhc2UsIGxpCnMtYXUgYWR1cyBtYWkgbGEgdXJtxIMgw65uIG1hc8SDIMiZaSBuaciZdGUgc8SDbMSDyJtpIGZvYXJ0ZSBtaW51bmF0ZS4KQXR1bmNpIMOubXDEg3JhdHVsIHppY2UgU3DDom51bHVpIDoKCuKAlCBOZXBvYXRlLCBtYWkgbcOibmNhdC1haSBzxINsxIPIm2kgZGUgYWNlc3RlIGRlIGPDom5kIGXImXRpPyDigJQgQmEgbnUsCm1vyJl1bGUsIHppY2UgU3DDom51bDsgdG9jbWFpIGVyYW0gc8SDIHbEgyDDrm50cmViIGRlIHVuZGUgbGUgYXZlyJtpLApjxIMgdGFyZS1zIGJ1bmUhLi4uIE8gaGFyYWJhIMOubnRyZWFnxIMgYciZIGZpIMOubiBzdGFyZSBzxIMgbcSDbsOibmMsCsiZaSBwYXJjxIMgdG90IG51IG0tYciZIHPEg3R1cmEuCgrigJQgVGUgY3JlZGUgbW/ImXVsLCBuZXBvYXRlLCBkYXIgY8OibmQgYWkgyJl0aSBjdSBjZSBncmV1dGF0ZSBzZQpjYXDEg3TEgyEgcGVudHJ1IGPEgyBudW1haSDDrm4gR3LEg2RpbmEgVXJzdWx1aSwgZGFjxIMtaSBmaSBhdXppdCBkZQpkw6Juc2EsIHNlIGFmbMSDIHPEg2zEg8ibaSBkZSBhY2VzdGUsIMiZaSBtYWkgcmFyIG9tIGNhcmUgc8SDIHBvYXTEgyBsdWEKZGludHItw65uc2VsZSDImWkgc8SDIHNjYXBlIGN1IHZpYcibxIMuIMOObnRyZSB0b8ibaSBvYW1lbmlpIGRpbgrDrm1wxINyxIPIm2lhIG1lYSwgbnVtYWkgdW4gcMSDZHVyYXIgc2UgYml6dWllyJl0ZSBsYSB0cmVhYmEgYXN0YS4gyJhpCmFjZWxhLCBlbCDImXRpZSBjZSBmYWNlLCBjZSBkcmVnZSwgZGUtbWkgYWR1Y2UgZGluIGPDom5kIMOubiBjw6JuZAphyJlhLCBjw6J0ZSBwdcibaW5lLCBkZSBwb2Z0xIMuCgpTcMOibnVsLCB2b2luZCBzxIMgcGlhcmTEgyBhY3VtIHBlIEhhcmFwLUFsYiBjdSBvcmljZSBwcmXImywgemlzZQrDrm1wxINyYXR1bHVpOgoK4oCUIERvYW1uZSwgbW/ImXVsZSwgZGUgbnUgbWktYSBhZHVjZSBzbHVnYSBtZWEgc8SDbMSDyJtpIGRlIGFjZXN0ZSDImWkKZGluIHBpYXRyYSBzZWFjxIMsIG1hcmUgbHVjcnUgc8SDIGZpZSEKCuKAlCBDZSB2b3JiZciZdGksIG5lcG9hdGUhIHppc2Ugw65tcMSDcmF0dWw7IHVudWwgY2EgZMOibnN1bCwgyJlpIMOubmPEgwpuZWN1bm9zY8SDdG9yIGRlIGxvY3VyaWxlIGFjZXN0ZWEsIGN1bSBjcmV6aSBjxIMgYXIgcHV0ZWEgZmFjZQphY2Vhc3TEgyBzbHVqYsSDPyBEb2FyIGRlIMibaS1pIGdyZXUgZGUgdmlhyJthIGx1aS4KCuKAlCBJYSBsYXMnLCBtb8iZdWxlLCBudS1pIGR1Y2UgZ3JpamE7IHB1biByxINtxIPImWFnIGPEgyBhcmUgc8SDLW1pCmFkdWPEgyBzxINsxIPIm2kgw65udG9jbWFpIGNhIGFjZXN0ZSwgyJlpIMOubmPEgyBtdWx0ZSwgY8SDIMiZdGl1IGV1IGNlCnBvYXRlIGVsLgoKyJgtb2RhdMSDIGNoZWFtxIMgU3DDom51bCBwZSBIYXJhcC1BbGIgyJlpLWkgemljZSByxINzdGl0OiDigJQgQWN1bQpkZWdyYWLEgyBzxIMgdGUgZHVjaSBjdW0gw65pIMiZdGkgdHUgyJlpIHPEgy1taSBhZHVjaSBzxINsxIPIm2kgZGUgYWNlc3RlCmRpbiBHcsSDZGluYSBVcnN1bHVpLiBIYWksIGllyJlpIHJlcGVkZSDImWkgcG9ybmXImXRlLCBjxIMgbnUtaSB2cmVtZQpkZSBwaWVyZHV0LiBEYXIgbnUgY3VtdmEgc8SDIGZhY2kgZGUgYWx0ZmVsLCBjxIMgbmljaSDDrm4gYm9ydGEKyJlvYXJlY3VsdWkgbnUgZciZdGkgc2PEg3BhdCBkZSBtaW5lIQoKSGFyYXAtQWxiIGllc2UgbcOiaG5pdCwgc2UgZHVjZSDDrm4gZ3JhamQgyJlpIMOubmNlcGUgYS3ImWkgbmV0ZXppCmNhbHVsIHBlIGNvYW3Egywgemljw6JuZDoKCuKAlCBFaSwgY8SDbHXIm3VsIG1ldSwgY8OibmQgYWkgyJl0aSB0dSDDrm4gY2UgbmVjYXogYW0gaW50cmF0ISBTZsOibnQKc8SDIGZpZSByb3N0dWwgdMSDdMOibmUtbWV1LCBjxIMgYmluZSBtLWEgw65udsSDyJthdCEgQciZYS1pIGPEgywgZGFjxIMKbi1hbSDIm2ludXQgc2VhbcSDIGRlIHZvcmJlbGUgbHVpLCBhbSBhanVucyBzbHVnxIMgbGEgZMOicmxvYWfEgyDImWkKYWN1bSwgdnLDom5kLW5ldnLDom5kLCB0cmVidWllIHMtYXNjdWx0LCBjxIMgbWktaSBjYXB1bCDDrm4KcHJpbWVqZGllPwoK4oCUIFN0xINww6JuZSwgemlzZSBhdHVuY2kgY2FsdWw7IGRlLWFjdW0gw65uYWludGUsIG9yaSBjdSBjYXB1bCBkZQpwaWF0csSDLCBvcmkgY3UgcGlhdHJhIGRlIGNhcCwgdG90IGF0w6J0YS1pOiBmaWkgb2RhdMSDIGLEg3JiYXQgyJlpCm51LcibaSBmYWNlIHZvaWUgcmVhLiDDjm5jYWxlY8SDIHBlIG1pbmUgyJlpIGhhaSEgyJh0aXUgZXUgdW5kZSB0ZS1vaQpkdWNlLCDImWkgbWFyZS1pIER1bW5lemV1LCBuZS1hIHNjxINwYSBlbCDImWkgZGluIGFjZWFzdGEhCgpIYXJhcC1BbGIsIG1haSBwcmluesOibmQgb2xlYWPEgyBsYSBpbmltxIMsIMOubmNhbGVjxIMgyJlpIHNlIGxhc8SDIMOubgp2b2lhIGNhbHVsdWksIHVuZGUgdnJlYSBlbCBzxIMtbCBkdWPEgy4KCkF0dW5jaSBjYWx1bCBwb3JuZciZdGUgbGEgcGFzLCBww6JuxIMgY2UgaWVzZSBtYWkgw65uY29sbywgY2Egc8SDCm51LWkgdmFkxIMgbmltZW5lLiBBcG9pIMOuyJlpIGFyYXTEgyBwdXRlcmlsZSBzYWxlLCB6aWPDom5kOgoK4oCUIFN0xINww6JuZSwgyJtpbmUtdGUgYmluZSBwZSBtaW5lLCBjxIMgYW0gc8SDIHpib3IgbGluIGNhIHbDom50dWwsIHPEgwpjdXRyZWllcsSDbSBwxINtw6JudHVsLiBNYXJlLWkgRHVtbmV6ZXUgyJlpIG1lyJl0ZXJ1LWkgZHJhY3VsLgpIZWxiZXQhIHZvbSBwdXRlYSB2ZW5pIGRlIGhhYyDImWkgU3DDom51bHVpIGNlbHVpYSwgbnUtaSBlIHZyZW1lYQp0cmVjdXTEgy4KCsiYaSBvZGF0xIMgemJvYXLEgyBjYWx1bCBjdSBIYXJhcC1BbGIgcMOibsSDIGxhIG5vdXJpOyBhcG9pIG8gaWEgZGUtYQpjdXJtZXppyJl1bCBwxINtw6JudHVsdWk6IHBlIGRlYXN1cHJhIGNvZHJpbG9yLCBwZXN0ZSB2w6JyZnVsCm11bsibaWxvciwgcGVzdGUgYXBhIG3Eg3JpbG9yIMiZaSBkdXDEgyBhY2VlYSBzZSBsYXPEgyDDrm5jZXQtIMOubmNldArDrm50ci11biBvc3Ryb3YgbcOibmRydSBkaW4gbWlqbG9jdWwgdW5laSBtxINyaSwgbMOibmfEgyBvIGPEg3N1yJvEgwpzaW5ndXJhdGljxIMsIHBlIGNhcmUgZXJhIGNyZXNjdXQgbmnImXRlIG11yJljaGkgcGxldG9zIGRlIG8gcG9kaW7EgwpkZSBncm9zLCBtb2FsZSBjYSBtxIN0YXNhIMiZaSB2ZXJkZSBjYSBidXJhdGljdWwuCgpBdHVuY2kgSGFyYXAtQWxiIGRlc2NhbGVjxIMsIMiZaSBzcHJlIG1haSBtYXJlIG1pcmFyZWEgbHVpLCBudW1haQppYWNhIMOubCDDrm50w6JtcGluxIMgw65uIHByYWd1bCB1yJlpaSBjZXLImWV0b2FyZWEgY8SDcmVpYSDDrmkgZMSDZHVzZSBlbAp1biBiYW4gZGUgcG9tYW7Egywgw65uYWludGUgZGUgcG9ybmlyZWEgbHVpIGRlIGFjYXPEgy4KCuKAlCBFaSwgSGFyYXAtQWxiLCBhyJlhLWkgY8SDIGFpIHZlbml0IGxhIHZvcmJlbGUgbWVsZSwgY8SDIGRlYWwgY3UKZGVhbCBzZSBhanVuZ2UsIGRhciDDrm5jxIMgb20gY3Ugb20/IEFmbMSDIGFjdW0gY8SDIGV1IHN1bnQgU2bDom50YQpEdW1pbmljxIMgyJlpIMiZdGl1IGNlIG5ldm9pZSB0ZS1hIGFkdXMgcGUgbGEgbWluZS4gU3DDom51bCB2cmVhCnPEgy3Im2kgcsSDcHVuxIMgY2FwdWwgY3Ugb3JpY2UgY2hpcCDImWkgZGUtYWNlZWEgdGUtYSB0cmltaXMgc8SDLWkKYWR1Y2kgc8SDbMSDyJtpIGRpbiBHcsSDZGluYSBVcnN1bHVpLCBkYXIgaS1vciBkYSBlbGUgb2RhdMSDIHBlCm5hcy4uLiBSxINtw6JpIGFpY2kgw65uIGFzdMSDLW5vYXB0ZSwgY2Egc8SDIHbEg2QgY2UtaSBkZSBmxINjdXQuCgpIYXJhcC1BbGIgcsSDbcOibmUgYnVjdXJvcywgbXVsyJt1bWluZCBTZmludGVpIER1bWluaWNpIHBlbnRydSBidW5hCmfEg3pkdWlyZSDImWkgw65uZ3JpamlyZWEgY2UgYXJlIGRlIGVsLgoK4oCUIEZpaSDDrm5jcmVkaW7Im2F0IGPEgyBudSBldSwgY2kgcHV0ZXJlYSBtaWxvc3RlbmllaSDImWkgaW5pbWEgdGEKY2VhIGJ1bsSDIHRlIGFqdXTEgywgSGFyYXAtQWxiLCB6aWNlIFNmw6JudGEgRHVtaW5pY8SDIGllyJlpbmQgyJlpCmzEg3PDom5kdS1sIMOubiBwYWNlIHPEgyBzZSBsaW5pyJl0ZWFzY8SDLgoKyJhpIGN1bSBpZXNlIFNmw6JudGEgRHVtaW5pY8SDIGFmYXLEgywgb2RhdMSDIMiZaSBwb3JuZciZdGUgZGVzY3VsyJvEgwpwcmluIHJvdcSDLCBkZSBjdWxlZ2UgbyBwb2FsxIMgZGUgc29tbm9yb2FzxIMsIHBlIGNhcmUgbyBmaWVyYmUgbGEKdW4gbG9jIGN1IG8gdmFkcsSDIGRlIGxhcHRlIGR1bGNlIMiZaSBjdSB1bmEgZGUgbWllcmUgyJlpIGFwb2kgaWEKbXVyc2EgYWNlZWEgyJlpIGl1dGUgc2UgZHVjZSBkZSBvIHRvYXJuxIMgw65uIGbDom50w6JuYSBkaW4gR3LEg2RpbmEKVXJzdWx1aSwgY2FyZSBmw6JudMOibsSDIGVyYSBwbGluxIMgY3UgYXDEgyBww6JuxIMgbGEgZ3VyxIMuIMiYaSBtYWkKc3TDom5kIFNmw6JudGEgRHVtaW5pY8SDIG9sZWFjxIMgw65uIHByZWFqbWEgZsOibnTDom5paSwgbnVtYWkgaWFjYSBjZQp2ZWRlIGPEgyB2aW5lIHVyc3VsIGN1IG8gZmFsY8SDIMOubiBjZXIgyJlpIGN1IHVuYSDDrm4gcMSDbcOibnQsCm1vcm7Eg2luZCDDrm5mcmljb8iZYXQuIMiYaSBjdW0gYWp1bmdlIGxhIGbDom50w6JuxIMsIGN1bSDDrm5jZXBlIGEgYmVhCmxhY29tIGxhIGFwxIMgyJlpIGEtyJlpIGxpbmdlIGJ1emVsZSBkZSBkdWxjZWHIm2EgyJlpIGJ1bsSDdGF0ZWEgZWkuCsiYaSBtYWkgc3TEgyBkaW4gYsSDdXQsIMiZaSBpYXIgw65uY2VwZSBhIG1vcm7Eg2k7IMiZaSBpYXIgbWFpIGJlYSBjw6J0ZQp1biByxINzdGltcCwgyJlpIGlhciBtb3JuxINpZciZdGUsIHDDom7EgyBjZSwgZGUgbGEgbyB2cmVtZSwgw65uY2VwIGEtaQpzbMSDYmkgcHV0ZXJpbGUgyJlpLCBjdXByaW5zIGRlIGFtZcibZWFsxIMsIHBlIGxvYyBjYWRlIGpvcyDImWkKYWRvYXJtZSBtb3J0LCBkZSBwdXRlYWkgc8SDIHRhaSBsZW1uZSBwZSBkw6Juc3VsLgoKQXR1bmNpIFNmw6JudGEgRHVtaW5pY8SDLCB2xIN6w6JuZHUtbCBhyJlhLCDDrm50ci1vIGNsaXDEgyBzZSBkdWNlIMiZaSwKZGXImXRlcHTDom5kIHBlIEhhcmFwLUFsYiBjaGlhciDDrm4gbWllenVsIG5vcMibaWksIMOuaSB6aWNlOgoK4oCUIMOObWJyYWPEgy10ZSBpdXRlIMOubiBwaWVsZWEgY2VhIGRlIHVycywgY2FyZSBvIGFpIGRlIGxhIHRhdMSDLQp0xIN1LCBhcHVjxIMgcGUgaWNpIHRvdCDDrm5haW50ZSwgyJlpIGN1bSDDrmkgYWp1bmdlIMOubiByxINzY3J1Y2lsZQpkcnVtdWx1aSwgYWkgc8SDIGRhaSBkZSBHcsSDZGluYSBVcnN1bHVpLiBBdHVuY2kgc2FpIHJlcGVkZQrDrm5sxIN1bnRydSBkZS3Im2kgaWEgc8SDbMSDyJtpIMOubnRyLWFsZXMsIMiZaSBjw6J0ZS1pIHZyZWEgZGUgbXVsdGUsCmPEg2NpIHBlIHVycyBsLWFtIHB1cyBldSBsYSBjYWxlLiBEYXIsIGxhIHRvYXTEgyDDrm50w6JtcGxhcmVhLCBkZS1pCnZlZGVhIMiZaS1pIHZlZGVhIGPEgyBzLWEgdHJleml0IMiZaSBuxIN2xINsZciZdGUgbGEgdGluZSwgenbDonJsZS1pCnBpZWxlYSBjZWEgZGUgdXJzIMiZaSBhcG9pIGZ1Z2kgw65uY29hY2Ugc3ByZSBtaW5lIGPDonQgw65pIHB1dGVhLgoKSGFyYXAtQWxiIGZhY2UgY3VtIMOuaSB6aWNlIFNmw6JudGEgRHVtaW5pY8SDLiDImGkgY3VtIGFqdW5nZSDDrm4KZ3LEg2RpbsSDLCBvZGF0xIMgw65uY2VwZSBhIHNtdWxnZSBsYSBzxINsxIPIm2kgw65udHItYWxlcyDImWkgbGVhZ8SDIG8Kc2FyY2luxIMgbWFyZSwgbWFyZSwgY8OidCBwZSBjZSBzxIMgbi1vIHBvYXTEgyByaWRpY2Egw65uIHNwaW5hcmUuIMiYaQpjw6JuZCBzxIMgaWFzxIMgY3UgZMOibnNhIGRpbiBncsSDZGluxIMsIGlhY2EgdXJzdWwgc2UgdHJlemXImXRlLCDImWkKZHVwxIMgZMOibnN1bCwgR2F2cmlsZSEgSGFyYXAtQWxiLCBkYWPEgyB2ZWRlIHJlYXVhLCBpLWFydW5jxIMKcGllbGVhIGNlYSBkZSB1cnMsIMiZaSBhcG9pIGZ1Z2UgY8OidCBjZSBwb2F0ZSBjdSBzYXJjaW5hIMOubgpzcGF0ZSwgdG90IMOubmFpbnRlIGxhIFNmw6JudGEgRHVtaW5pY8SDLCBzY8SDcMOibmQgY3Ugb2JyYXogY3VyYXQuCgpEdXDEgyBhY2Vhc3RhLCBIYXJhcC1BbGIsIG11bMibdW1pbmQgU2ZpbnRlaSBEdW1pbmljaSBwZW50cnUKYmluZWxlIGNlIGktYSBmxINjdXQsIMOuaSBzxINydXTEgyBtw6JuYSwgYXBvaSDDrsiZaSBpYSBzxINsxIPIm2lsZSDImWksCsOubmPEg2xlY8OibmQsIHBvcm5lyJl0ZSBzcHJlIMOubXDEg3LEg8ibaWUsIER1bW5lemV1IHPEgyBuZSDIm2llLCBjxIMKY3V2w6JudHVsIGRpbiBwb3Zlc3RlLCDDrm5haW50ZSBtdWx0IG1haSBlc3RlLgoKyJhpIG1lcmfDom5kIHRvdCBjdW0gcy1hIGR1cywgZGUgbGEgbyB2cmVtZSBhanVuZ2UgbGEgw65tcMSDcsSDyJtpZSDImWkKZMSDIHPEg2zEg8ibaWxlIMOubiBtw6JuYSBTcMOibnVsdWkuCgrDjm1wxINyYXR1bCDImWkgZmV0ZWxlIHNhbGUsIHbEg3rDom5kIGFjZWFzdGEsIGxlLWEgZm9zdCBkZS1hCm1pcmFyZWEuIEF0dW5jaSBTcMOibnVsIHppY2Ugw65uZ8OibWZhdDoKCuKAlCBFaSwgbW/ImXVsZSwgY2UgbWFpIHppY2k/IOKAlCBDZSBzxIMgemljLCBuZXBvYXRlPyBJYSwgY8OibmQgYciZIGF2w6kKZXUgbyBzbHVnxIMgY2EgYWNlYXN0YSwgbnUgaS1hyJkgdHJlY2UgcGUgZGluYWludGUuCgrigJQgRC1hcG9pIGRlIGNlIG1pIGwtYSBkYXQgdGF0YSBkZS1hY2FzxIM/IG51bWFpIGRlIHZyZWRuaWNpYSBsdWksCnppc2UgU3DDom51bDsgY8SDY2kgYWx0ZmVsIG51LWwgbWFpIGx1YW0gZHVwxIMgbWluZSwgY2Egc8SDLW1pCsOubmN1cmNlIHppbGVsZS4KCkxhIHZybyBjw6J0ZXZhIHppbGUgZHVwxIMgYWNlYXN0YSwgw65tcMSDcmF0dWwgYXJhdMSDIFNww6JudWx1aSBuaciZdGUKcGlldHJlIHNjdW1wZSwgemljw6JuZDoKCuKAlCBOZXBvYXRlLCBtYWkgdsSDenV0LWFpIHBpZXRyZSBuZXN0ZW1hdGUgYciZYSBkZSBtYXJpIMiZaSBmcnVtb2FzZQpjYSBhY2VzdGVhIGRlIGPDom5kIGXImXRpPwoK4oCUIEFtIHbEg3p1dCBldSwgbW/ImXVsZSwgZmVsdXJpdGUgcGlldHJlIHNjdW1wZSwgZGFyIGNhIGFjZXN0ZSwKZHJlcHQgc8SDLcibaSBzcHVuLCBuLWFtIHbEg3p1dC4gT2FyZSBwZSB1bmRlIHNlIHBvdCBnxINzaSBhyJlhCnBpZXRyZT8KCuKAlCBQZSB1bmRlIHPEgyBzZSBnxINzZWFzY8SDLCBuZXBvYXRlISBJYSwgw65uIFDEg2R1cmVhIENlcmJ1bHVpLiDImGkKY2VyYnVsIGFjZWxhIGVzdGUgYsSDdHV0IHRvdCBjdSBwaWV0cmUgc2N1bXBlLCBtdWx0IG1haSBtYXJpIMiZaQptYWkgZnJ1bW9hc2UgZGVjw6J0IGFjZXN0ZS4gTWFpIMOubnTDomksIGNpY8SDIGFyZSB1bmEgw65uIGZydW50ZSwgZGUKc3RyxINsdWNlyJl0ZSBjYSBzb2FyZWxlLiBEYXIgbnUgc2UgcG9hdGUgYXByb3BpYSBuaW1lbmUgZGUgY2VyYiwKY8SDY2kgZXN0ZSBzb2xvbW9uaXQgyJlpIG5pY2kgdW4gZmVsIGRlIGFybcSDIG51LWwgcHJpbmRlOyDDrm5zxIMgZWwsCnBlIGNhcmUgbC1hIHrEg3JpLCBudSBtYWkgc2NhcMSDIGN1IHZpYcibxIMuIERlLWFjZWVhIGZ1Z2UgbHVtZWEgZGUKZMOibnN1bCBkZS3ImWkgc2NvYXRlIG9jaGlpOyDImWkgbnUgbnVtYWkgYXTDonRhLCBkYXIgY2hpYXIgY8OibmQgc2UKdWl0xIMgbGEgY2luZXZhLCBmaWUgb20gc2F1IG9yaWNlIGRpaGFuaWUgYSBmaSwgcGUgbG9jIHLEg23Dom5lCm1vYXJ0xIMuIMiYaSBjaWPEgyBvIG11bMibaW1lIGRlIG9hbWVuaSDImWkgZGUgc8SDbGLEg3TEg2NpdW5pIHphYyBmxINyxIMKc3VmbGFyZSDDrm4gcMSDZHVyZWEgbHVpIG51bWFpIGRpbiBhc3TEgyBwcmljaW7Egzogc2UgdmVkZSBjxIMgZXN0ZQpzb2xvbW9uaXQsIMOubnRvcnMgZGUgbGEgyJvDosibxIMsIHNhdSBkcmFjdWwgbWFpIMiZdGllIGNlIGFyZSBkZS1pCmHImWEgZGUgcHJpbWVqZGlvcy4gRGFyIGN1IHRvYXRlIGFjZXN0ZSwgdHJlYnVpZSBzxIMgyJl0aWksCm5lcG9hdGUsIGPEgyB1bmlpIG9hbWVuaSDDrnMgbWFpIGFsIGRyYWN1bHVpIGRlY8OidCBkcmFjdWw7IG51IHNlCmFzdMOibXDEg3LEgyBuaWNpIMOubiBydXB0dWwgY2FwdWx1aTsgbcSDY2FyIGPEgyBhdSBwxIPIm2l0IG11bHRlLCB0b3QKY2VhcmPEgyBwcmluIHDEg2R1cmVhIGx1aSwgc8SDIHZhZMSDLCBudSBsLW9yIHB1dGVhIGfEg2J1aSBjdW12YT8gyJhpCmNhcmUgZGludHJlIGVpIGFyZSDDrm5kcsSDem5lYWxhIG1hcmUgyJlpIG5vcm9jIMiZaSBtYWkgbWFyZSwKdW1ibMOibmQgcGUgYWNvbG8sIGfEg3NlyJl0ZSBkaW4gw65udMOibXBsYXJlIGPDonRlIG8gcGlhdHLEgyBkZQphY2VzdGUsIHBpY2F0xIMgZGUgcGUgY2VyYiwgY8OibmQgc2Ugc2N1dHVyxIMgZWwgbGEgyJlhcHRlIGFuaSBvCmRhdMSDLCDImWkgYXBvaSBhY2VsdWlhIG9tIG51LWkgdHJlYnVpZSBhbHTEgyBuZWd1c3RvcmllIG1haSBidW7Egy4KQWR1Y2UgcGlhdHJhIGxhIG1pbmUgyJlpIGktbyBwbMSDdGVzYyBjw6J0IG51IGZhY2U7IGJhIMOubmPEgyBzdW50CmJ1Y3Vyb3MgY8SDIG8gcG90IGPEg3DEg3RhLiDImGkgYWZsxIMsIG5lcG9hdGUsIGPEgyBhc2VtZW5lIHBpZXRyZSBmYWMKcG9kb2FiYSDDrm1wxINyxIPIm2llaSBtZWxlLCBudSBzZSBnxINzZXNjIGFsdGVsZSBtYWkgbWFyaSDImWkgbWFpCmZydW1vYXNlIGRlY8OidCBhY2VzdGUgbGEgbmljaSBvIMOubXDEg3LEg8ibaWUsIMiZaSBkZS1hY2VlYSBzLWEgZHVzCnZlc3RlYSBkZXNwcmUgZWxlIMOubiB0b2F0xIMgbHVtZWEuIE11bMibaSDDrm1wxINyYcibaSDImWkgY3JhaSDDrm5hZGlucwp2aW4gc8SDIGxlIHZhZMSDLCDImWkgbGktaSBkZS1hIG1pcmFyZWEgZGUgdW5kZSBsZSBhbS4KCuKAlCBEb2FtbmUsIG1vyJl1bGUhIHppc2UgYXR1bmNpIFNww6JudWw7IHPEgyBudSB0ZSBzdXBlcmksIGRhciBudQrImXRpdSBjZSBmZWwgZGUgb2FtZW5pIGZyaWNvyJlpIGF2ZcibaSBwZSBhaWNpLiBFdSBwdW4gcsSDbcSDyJlhZyBwZQpjZSB2cmVpIGPEgyBzbHVnYSBtZWEgYXJlIHPEgy1taSBhZHVjxIMgcGllbGVhIGNlcmJ1bHVpIGFjZWx1aWEsIGN1CmNhcCBjdSB0b3QsIGHImWEgw65tcG9kb2JpdCBjdW0gZXN0ZS4KCsiYLW9kYXTEgyBjaGVhbcSDIFNww6JudWwgcGUgSGFyYXAtQWxiIMiZaS1pIHppY2U6IOKAlCBEdS10ZSDDrm4gUMSDZHVyZWEKQ2VyYnVsdWksIGN1bSDDrmkgyJl0aSB0dSwgyJlpIG3Eg2NhciBmxIMgcGUgZHJhY3VsIMOubiBwYXRydSwgc2F1Cm9yaWNlLWkgZmFjZSwgZGFyIG51bWFpZGVjw6J0IHPEgy1taSBhZHVjaSBwaWVsZWEgY2VyYnVsdWksIGN1IGNhcApjdSB0b3QsIGHImWEgYsSDdHV0ZSBjdSBwaWV0cmUgc2N1bXBlLCBjdW0gc2UgZ8SDc2VzYy4gyJhpIGRvYXIgdGUtYQrDrm1waW5nZSBwxINjYXR1bCBzxIMgY2xpbnRlyJl0aSB2cmVvIHBpYXRyxIMgZGluIGxvY3VsIHPEg3UsIGlhcsSDIG1haQphbGVzIGFjZWEgbWFyZSBkaW4gZnJ1bnRlYSBjZXJidWx1aSwgYy1hcG9pIGF0w6J0YSDIm2ktaSBsZWFjdWwhCkhhaSwgcG9ybmXImXRlIGl1dGUsIGPEgyBudS1pIHZyZW1lIGRlIHBpZXJkdXQhCgpIYXJhcC1BbGIgdmVkZSBlbCBiaW5lIHVuZGUgbWVyZ2UgdHJlYWJhLCBjxIMgZG9hciBudSBlcmEgZGluCmJ1dHVjaTsgZGFyIG5lYXbDom5kIMOubmNvdHJvLCBpZXNlIG3DomhuaXQsIHNlIGR1Y2UgaWFyIMOubiBncmFqZApsYSBjYWwgyJlpLCBuZXRlemluZHUtbCBwZSBjb2FtxIMsIMOuaSB6aWNlOgoK4oCUIERyYWd1bCBtZXUgY8SDbHXImywgbGEgZ3JlYSBiZWxlYSBtLWEgdsOicsOidCBpYXIgU3DDom51bCEuLi4gRGUtb2kKbWFpIHNjxINwYSDImWkgZGluIGFzdGEgY3UgdmlhyJvEgywgYXBvaSB0b3QgbWFpIGFtIHppbGUgZGUgdHLEg2l0LgpEYXIgbnUgyJl0aXUsIHrEg3UsIGxhIGPDonQgbWktYSBzdGEgbm9yb2N1bCEKCuKAlCBOdS1pIG5pbWljYSwgc3TEg3DDom5lLCB6aXNlIGNhbHVsLiBDYXB1bCBkZS1hciBmaSBzxINuxIN0b3MsIGPEgwpiZWxlbGVsZSBjdXJnIGfDonJsxIMuIFBvYXRlIGFpIHByaW1pdCBwb3J1bmPEgyBzxIMganVwZciZdGkgcGlhdHJhCm1vcmlpIMiZaSBzxIMgZHVjaSBwaWVsZWEgbGEgw65tcMSDcsSDyJtpZS4uLgoK4oCUIEJhIG51LCBjxINsdcibdWwgbWV1OyBhbHRhIMiZaSBtYWkgw65uZnJpY2/ImWF0xIMsIHppc2UgSGFyYXAtIEFsYi4KCuKAlCBWb3JixIMgc8SDIGZpZSwgc3TEg3DDom5lLCBjxIMgdG9jbWVhbGEtaSBnYXRhLCB6aXNlIGNhbHVsLiBOdSB0ZQp0ZW1lLCDImXRpdSBldSBuxIN6ZHLEg3bEg25paSBkZSBhbGUgU3DDom51bHVpOyDImWkgc8SDIGZpIHZydXQsIGRlCmRlbXVsdCBpLWHImSBmaSBmxINjdXQgcGUgb2JyYXosIGRhciBsYXPEgy1sIHPEgy3ImWkgbWFpIGpvYWNlIGNhbHVsLgpDZSBnw6JuZGXImXRpPyDImGkgdW5paSBjYSBhY2XImXRpYSBzdW50IHRyZWJ1aXRvcmkgcGUgbHVtZQpjw6J0ZW9kYXTEgywgcGVudHJ1IGPEgyBmYWMgcGUgb2FtZW5pIHPEgyBwcmluZMSDIGxhIG1pbnRlLi4uIFppIMiZaQpkLXRhIGPEgyBhaSBhdnV0IHPEgyB0cmFnaSB1biBwxINjYXQgc3RyxINtb8iZZXNjLiBWb3JiYSBjZWVhOgoiUMSDcmluyJtpaSBtxINuw6JuY8SDIGFndXJpZMSDLCDImWkgZmlpbG9yIGxpIHNlIHN0cmVwZXplc2MgZGluyJtpaSIuCkhhaSwgbnUgbWFpIHN0YSBsYSBnw6JuZHVyaTsgw65uY2FsZWPEgyBwZSBtaW5lIMiZaSBwdW5lLcibaSBuxINkZWpkZWEKw65uIER1bW5lemV1LCBjxIMgbWFyZS1pIHB1dGVyZWEgTHVpOyBudSBuZS1hIGzEg3NhIGVsIHPEgyBzdWZlcmltCsOubmRlbHVuZy4gQ3VtIHZyZWkuICJDZS1pIGUgc2NyaXMgb211bHVpIMOubiBmcnVudGUtaSBlIHB1cy4iCkRvYXInIG1hcmUtaSBDZWwtZGUtc3VzISBTLW9yIHNmw6JyyJlpIGVsZSDImWkgYWNlc3RlIGRlIGxhIG8KdnJlbWUuLi4KCkhhcmFwLUFsYiBhdHVuY2kgw65uY2FsZWPEgywgyJlpIGNhbHVsIHBvcm5lyJl0ZSBsYSBwYXMsIHDDom7EgyBjZQppZXNlIG1haSDDrm5jb2xvIGRlcGFydGUsIGNhIHPEgyBudS1pIGlhIGx1bWVhIGxhIG9jaGkuIMiYaSBhcG9pLArDrm5jb3Jkw6JuZHUtc2UgyJlpIHNjdXR1csOibmR1LXNlIG8gZGF0xIMgdm9pbmljZciZdGUsIGlhcsSDLciZaSBhcmF0xIMKcHV0ZXJpbGUsIHppY8OibmQ6CgrigJQgyJppbmUtdGUgemRyYXbEg24sIHN0xINww6JuZSwgY8SDIGlhciBhbSBzxIMgemJvcjoKCsOObiDDrm5hbHR1bCBjZXJ1bHVpLApWxIN6ZHVodWwgcMSDbcOibnR1bHVpOwpQZSBkZWFzdXByYSBjb2RyaWxvciwKUGVzdGUgdsOicmZ1bCBtdW7Im2lsb3IsClByaW4gY2VhyJthIG3Eg2d1cmlsb3IsClNwcmUgbm9pYW51bCBtxINyaWxvciwKTGEgY3LEg2lhc2EgesOibmVsb3IsCk1pbnVuZWEgbWludW5pbG9yLApEaW4gb3N0cm92dWwgZmxvcmlsb3IuCsiYaSB6aWPDom5kIGFjZXN0ZSwgb2RhdMSDIMiZaSB6Ym9hcsSDIGN1IEhhcmFwLUFsYgoKw45uIMOubmFsdHVsIGNlcnVsdWksClbEg3pkdWh1bCBwxINtw6JudHVsdWk7CsiZaSBvIGlhIGRlLWEgY3VybWV6aciZOgpEZSBsYSBub3VyaSBjxIN0cmUgc29hcmUsClByaW50cmUgbHVuxIMgyJlpIGx1Y2VmZXJpLApTdGVsZSBtw6JuZHJlIGx1Y2l0b2FyZSwKyJlpIGFwb2kgc2UgbGFzxIMgbGluIGNhIHbDom50dWw6CsOObiBvc3Ryb3Z1bCBmbG9yaWxvciwKTGEgY3LEg2lhc2EgesOibmVsb3IsCk1pbnVuZWEgbWludW5pbG9yLgrImGkgY8OibmQgdsOibnR1bCBhIGFidXJpdCwgaWFjYSDImWkgZWkgbGEgU2bDom50YSBEdW1pbmljxIMgaWFyIGF1CnNvc2l0LiBTZsOibnRhIER1bWluaWPEgyBlcmEgYWNhc8SDIMiZaSwgY3VtIGEgdsSDenV0IHBlIEhhcmFwLUFsYgpwb3Bvc2luZCBsYSB1yJlhIGVpLCBwZSBsb2MgbC1hIMOubnTDom1waW5hdCDImWkgaS1hIHppcyBjdSBibMOibmRlyJtlOgoK4oCUIEVpLCBIYXJhcC1BbGIsIGHImWEtaSBjxIMgaWFyIHRlLWEgYWp1bnMgbmV2b2lhIGRlIG1pbmU/IOKAlCBByJlhCmVzdGUsIG3Eg2ljdcibxIMsIHLEg3NwdW5zZSBIYXJhcC1BbGIsIGN1ZnVuZGF0IMOubiBnw6JuZHVyaSDImWkgZ2FsYmVuCmxhIGZhyJvEgywgZGUgcGFyY8SDLWkgbHVhc2UgcMOibnphIGRlIHBlIG9icmF6LiBTcMOibnVsIHZyZWEgc8SDLW1pCnLEg3B1bsSDIGNhcHVsIGN1IG9yaWNlIHByZcibLiDImGkgZGUtYciZIG11cmkgbWFpIGRlZ3JhYsSDLCBzxIMgc2NhcApvZGF0xIMgZGUgemJ1Y2l1bTogZGVjw6J0IGHImWEgdmlhyJvEgywgbWFpIGJpbmUgbW9hcnRlIGRlIG8gbWllIGRlCm9yaSEKCuKAlCBWYWkgZGUgbWluZSDImWkgZGUgbWluZSwgSGFyYXAtQWxiLCB6aXNlIFNmw6JudGEgRHVtaW5pY8SDOyBwYXJjxIMKbnUgdGUtYciZIGZpIGNyZXp1dCBhyJlhIHNsYWIgZGUgw65uZ2VyLCBkYXIsIGR1cMSDIGPDonQgdsSDZCwgZciZdGkKbWFpIGZyaWNvcyBkZWPDonQgbyBmZW1laWUhIEhhaSwgbnUgbWFpIHN0YSBjYSBvIGfEg2luxIMgcGxvdWF0xIMhCnLEg23DomkgbGEgbWluZSDDrm4gYXN0xIMgbm9hcHRlIMiZaSDIm2ktb2kgZGEgZXUgdnJ1biBhanV0b3IuIE1hcmUtaQpEdW1uZXpldSEgTi1hIG1haSBmaSBlbCBkdXDEgyBnw6JuZHVsIFNww6JudWx1aS4gw45uc8SDIG1haSByYWJkxIMgyJlpCnR1LCBmxIN0dWwgbWV1LCBjxIMgbXVsdCBhaSBhdnV0IGRlIHLEg2JkYXQgyJlpIHB1yJtpbiBtYWkgYWkuClDDom4tYWN1bSDIm2ktYSBmb3N0IG1haSBncmV1LCBkYXIgZGUtYWN1bSDDrm5haW50ZSB0b3QgYciZYSBhcmUKc8SDLcibaSBmaWUsIHDDom7EgyBjZS1pIGllyJlpIGRpbiBzbHVqYmEgU3DDom51bHVpLCBkZSBsYSBjYXJlIGFpIHPEgwp0cmFnaSDDrm5jxIMgbXVsdGUgbmVjYXp1cmksIGRhciBhaSBzxIMgc2NhcGkgZGluIHRvYXRlIGN1IGNhcHVsCnRlYWbEg3IsIHBlbnRydSBjxIMgbm9yb2N1bCB0ZSBhanV0xIMuCgrigJQgUG9hdGUgYciZYSBzxIMgZmllLCBtxINpY3XIm8SDLCB6aXNlIEhhcmFwLUFsYiwgZGFyIHByZWEgbXVsdGUgcy1hdQrDrm5ncsSDbcSDZGl0IGRlb2RhdMSDIHBlIGNhcHVsIG1ldS4KCuKAlCBDw6J0ZSBhIGRhdCBEdW1uZXpldSwgSGFyYXAtQWxiLCB6aXNlIFNmw6JudGEgRHVtaW5pY8SDOyBhyJlhIGEKdHJlYnVpdCBzxIMgc2Ugw65udMOibXBsZSwgyJlpIG4tYWkgY3VpIGLEg251aTogcGVudHJ1IGPEgyBudS1pIGR1cMSDCmN1bSBnw6JuZGXImXRlIG9tdWwsIGNpLWkgZHVwxIMgY3VtIHZyZWEgRG9tbnVsLiBDw6JuZCB2ZWkgYWp1bmdlIMiZaQp0dSBvZGF0xIMgbWFyZSDImWkgdGFyZSwgw65pIGPEg3V0YSBzxIMganVkZWNpIGx1Y3J1cmlsZSBkZS1hCmZpci1hLXDEg3IgyJlpIHZlaSBjcmVkZSBjZWxvciBhc3VwcmnIm2kgyJlpIG5lY8SDamnIm2ksIHBlbnRydSBjxIMKyJl0aWkgYWN1bSBjZSBlIG5lY2F6dWwuIERhciBww6JuxIMgYXR1bmNpLCBtYWkgcmFiZMSDLCBIYXJhcEFsYiwKY8SDY2kgY3UgcsSDYmRhcmVhIMOuaSBmcmlnaSBwaWVsZWEuCgpIYXJhcC1BbGIsIG5lbWFpYXbDom5kIGNlIHppY2UsIG11bMibdW1lyJl0ZSBsdWkgRHVtbmV6ZXUsIMiZaSBkZQpiaW5lLCDImWkgZGUgcsSDdSwgyJlpIFNmaW50ZWkgRHVtaW5pY2kgcGVudHJ1IGJ1bmEgZ8SDemR1aXJlIMiZaQphanV0b3J1bCBmxINnxINkdWl0LgoK4oCUIElhLCBhY3VtIG1haSB2aWkgZGUtYWNhc8SDLCBmxIN0dWwgbWV1ISBaaWPEgyBjaW5lLWEgemljZSDImWkgY3VtCmEgdnJlYSBzxIMgemljxIMsIGRhciBjw6JuZCBlc3RlIHPEgyBkYWkgcGVzdGUgcMSDY2F0LCBkYWPEgy1pCsOubmFpbnRlLCB0ZSBzaWxlyJl0aSBzxIMtbCBhanVuZ2ksIGlhciBkYWPEgy1pIMOubiB1cm3Egywgc3RhaSDImWktbAphyJl0ZXDIm2kuIE3EgyByb2csIGNlIG1haSBsYSBkZWFsLCBsYSB2YWxlPyBhyJlhIGUgbHVtZWEgYXN0YSDImWksCmRlLWFpIGZhY2UgY2UtYWkgZmFjZSwgcsSDbcOibmUgY3VtIGVzdGUgZWE7IG51IHBvyJtpIHMtbyDDrm50b3JjaQpjdSB1bcSDcnVsLCBtxINjYXIgc8SDIHRlIHB1aSDDrm4gcnVwdHVsIGNhcHVsdWkuIFZvcmJhIGNlZWE6ICJaaS1pCmx1bWUgyJlpIHRlIG3Dom50dWllIi4gRGFyIGlhIHPEgyBsxINzxINtIHRvYXRlIGxhIG8gcGFydGUgyJlpLCBww6JuxIMKbGEgdW5hLWFsdGEsIGhhaSBzxIMgdmVkZW0gY2UtaSBkZSBmxINjdXQgY3UgY2VyYnVsLCBjxIMgU3DDom51bAp0ZS1hIGZpIGHImXRlcHTDom5kIGN1IG5lcsSDYmRhcmUuIMiYaSwgZMSDLCBzdMSDcMOibiBudS1pPyB0cmVidWllCnPEgy1sIGFzY3VsyJtpLiBWb3JiYSBjZWVhOiAiTGVhZ8SDIGNhbHVsIHVuZGUgemljZSBzdMSDcMOibnVsIi4KCsiYaSBvZGF0xIMgc2NvYXRlIFNmw6JudGEgRHVtaW5pY8SDIG9icsSDemFydWwgyJlpIHNhYmlhIGx1aQpTdGF0dS1QYWxtxIMtQmFyYsSDLUNvdCwgZGUgdW5kZSBsZSBhdmVhIMiZaSwgZMOibmR1LWxlIGx1aQpIYXJhcC1BbGIsIHppY2U6CgrigJQgyJppbmUgYWNlc3RlLCBjxIMgYXUgc8SDLcibaSBmaWUgZGUgbWFyZSB0cmVidWluyJvEgyB1bmRlIG1lcmdlbS4gyJhpCmNoaWFyIGhhaWRlbSwgY3UgYWp1dG9ydWwgRG9tbnVsdWksIHPEgyBpc3ByxIN2aW0gb2RhdMSDIMiZaQp0cmVidciZb2FyYSBhc3RhLgoKyJhpIHBlIGxhIGPDom50YXR1bCBjdWNvyJlpbG9yIHNlIGlhIFNmw6JudGEgRHVtaW5pY8SDIMOubXByZXVuxIMgY3UKSGFyYXAtQWxiIMiZaSBzZSBkdWMgw65uIFDEg2R1cmVhIENlcmJ1bHVpLiDImGkgY3VtIGFqdW5nIMOubiBwxINkdXJlLApzYXDEgyBvIGdyb2FwxIMgYWTDom5jxIMgZGUgdW4gc3RhdCBkZSBvbSwgbMOibmfEgyB1biBpenZvciwgdW5kZSDDrm4KZmllY2FyZSB6aSBwZSBsYSBhbWlhesSDIHZlbmVhIGNlcmJ1bCBkZSBiZWEgYXDEgywgYXBvaSBzZSBjdWxjYQphY29sbyBwZSBsb2MgyJlpIGRvcm1lYSBjw6J0IHVuIGJlaSwgcMOibsSDIGNlIGFzZmluyJtlYSBzb2FyZWxlLiDImGkKZHVwxIMgYWNlZWEsIHNjdWzDom5kdS1zZSwgbyBsdWEgw65uIHBvcm5lYWzEgyDImWkgbnUgbWFpIGRhIHBlIGxhCml6dm9yIGlhciBww6JuxIMgYSBkb3VhIHppIHBlIGxhIGFtaWF6xIMuCgrigJQgRWksIGVpISBhY3VtIGdyb2FwYSBlc3RlIGdhdGEsIHppc2UgU2bDom50YSBEdW1pbmljxIMuIFR1LApIYXJhcC1BbGIsIHLEg23DomkgYWljaSDDrm50ci3Drm5zYSwgdG9hdMSDIHppdWEsIMiZaSBpYWNhIGNlIGFpIGRlCmbEg2N1dDogcHVuZS3Im2kgb2JyxIN6YXJ1bCBjdW0gc2UgcHVuZSwgaWFyxIMgc2FiaWEgc8SDIG4tbyBzbMSDYmXImXRpCmRpbiBtw6JuxIM7IMiZaSBkZS1hbWlhesSDLCBjw6JuZCBhIHZlbmkgY2VyYnVsIGFpY2kgbGEgaXp2b3Igc8SDIGJlYQphcMSDIMiZaSBzLWEgY3VsY2EgyJktYSBhZG9ybWksIGN1IG9jaGlpIGRlc2NoaciZaSwgY3VtIGktaQpmZWxlyJlhZ3VsLCB0dSwgw65uZGF0xIMgY2UgbC3DrmkgYXV6aSBob3LEg2luZCwgc8SDIGllyJlpIMOubmNldGnImW9yIMiZaQpzxIMgcG90cml2ZciZdGkgYciZYSBjYSBzxIMtaSB6Ym9yaSBjYXB1bCBkaW50ci1vIHNpbmd1csSDIGxvdml0dXLEgwpkZSBzYWJpZSwgyJlpIGFwb2kgcmVwZWRlIHPEgyB0ZSBhcnVuY2kgw65uIGdyb2FwxIMgyJlpIHPEgyDImWV6aSBhY29sbwrDrm50ci3Drm5zYSBww6JuxIMgZHVwxIMgYXNmaW7Im2l0dWwgc29hcmVsdWkuIENhcHVsIGNlcmJ1bHVpIGFyZSBzxIMKdGUgc3RyaWdlIHDDom7EgyBhdHVuY2kgbWVyZXUgcGUgbnVtZSwgY2Egc8SDIHRlIHZhZMSDLCBkYXIgdHUgbnUKY3VtdmEgc8SDIHRlIMOubmR1cGxlY2kgZGUgcnVnxINtaW50ZWEgbHVpIMiZaSBzxIMgdGUgacibZciZdGkgbGEKZMOibnN1bCwgY8SDIGFyZSB1biBvY2hpIG90csSDdml0IMiZaSwgY8OibmQgbC1hIHBpcm9uaSBzcHJlIHRpbmUsIG51Cm1haSB0csSDaWXImXRpLiDDjm5zxIMsIGN1bSBhIGFzZmluyJtpIHNvYXJlbGUsIHPEgyDImXRpaSBjxIMgYSBtdXJpdApjZXJidWwuIMiYaSBhdHVuY2kgc8SDIGllaSBmxINyxIMgZnJpY8SDIHPEgy1pIGp1cGXImXRpIHBpZWxlYSwgaWFyxIMKY2FwdWwgc8SDLWwgaWVpIGHImWEgw65udHJlZywgY3VtIHNlIGfEg3NlyJl0ZSwgyJlpIGFwb2kgc8SDIHZpaSBsYQptaW5lLgoKyJhpIGHImWEsIFNmw6JudGEgRHVtaW5pY8SDIHNlIGlhIMiZaSBzZSDDrm50b2FybsSDIHNpbmd1csSDIGFjYXPEgy4gSWFyxIMKSGFyYXAtQWxiIHLEg23Dom5lIGxhIHDDom5kxIMgw65uIGdyb2FwxIMuIMiYaSwgY8OibmQgcGUgbGEgYW1pYXrEgywKbnVtYWkgaWFjYSBjZSBhdWRlIEhhcmFwLUFsYiB1biBtdWdldCDDrm7Eg2R1yJlpdDogY2VyYnVsIHZlbmVhCmJvbmPEg2x1aW5kLiDImGkgYWp1bmfDom5kIGxhIGl6dm9yLCBvZGF0xIMgyJlpIMOubmNlcGUgYSBiZWEgaMOibHBhdgpsYSBhcMSDIHJlY2U7IGFwb2kgbWFpIGJvbmPEg2x1aWXImXRlLCDImWkgaWFyIG1haSBiZWEgY8OidGUgdW4KcsSDc3RpbXAsIMiZaSBpYXIgbWFpIGJvbmPEg2x1aWXImXRlLCDImWkgaWFyIG1haSBiZWEsIHDDom7EgyBjZSBudSBtYWkKcG9hdGUuIER1cMSDIGFjZWVhIMOubmNlcGUgYS3ImWkgYXJ1bmNhIMibxINybsSDIGR1cMSDIGNhcCwgY2EgYnVoYWl1bCwKyJlpIGFwb2ksIHNjdXJtw6JuZCBkZSB0cmVpIG9yaSBjdSBwaWNpb3J1bCDDrm4gcMSDbcOibnQsIHNlCnRvbG9nZciZdGUgam9zIHBlIHBhamnImXRlLCBhY29sbyBwZSBsb2MsIG1haSBydW1lZ8SDIGVsIGPDonQgbWFpCnJ1bWVnxIMsIMiZaSBwZSB1cm3EgyBzZSBhyJl0ZXJuZSBwZSBzb21uLCDImWkgdW5kZSBudSDDrm5jZXBlIGEgbcOibmEKcG9yY2lpIGxhIGppci4KCkhhcmFwLUFsYiwgY3VtIMOubCBhdWRlIGhvcsSDaW5kLCBpZXNlIGFmYXLEgyDDrm5jZXRpyJlvciDImWksIGPDom5kIMOubApjcm9pZciZdGUgbyBkYXTEgyBjdSBzYWJpYSBwZSBsYSBtaWpsb2N1bCBnw6J0dWx1aSwgw65pIMiZaSB6Ym9hcsSDCmNhcHVsIGPDonQgY29sbyBkZSBsYSB0cnVwIMiZaSBhcG9pIEhhcmFwLUFsYiBzZSBhcnVuY8SDIGbEg3LEgyBzaW5lCsOubiBncm9hcMSDLCBkdXDEgyBjdW0gw65sIHBvdsSDyJt1aXNlIFNmw6JudGEgRHVtaW5pY8SDLiBBdHVuY2kgc8OibmdlbGUKY2VyYnVsdWkgb2RhdMSDIGEgyJlpLW5jZXB1dCBhIGN1cmdlIGfDomxnw6JpbmQgyJlpIGEgc2UgcsSDc3DDom5kaSDDrm4KdG9hdGUgcMSDcsibaWxlLCDDrm5kcmVwdMOibmR1LXNlIMiZaSBuxINib2luZCDDrm4gZ3JvYXDEgyBwZXN0ZQpIYXJhcC1BbGIsIGRlIGPDonQgcGUgY2UgZXJhIHPEgy1sIMOubmVjZS4gSWFyxIMgY2FwdWwgY2VyYnVsdWksCnp2w6JyY29saW5kdS1zZSBkdXJlcm9zLCBzdHJpZ2EgY3UgamFsZSwgemljw6JuZDoKCuKAlCBIYXJhcC1BbGIsIEhhcmFwLUFsYiEgRGUgbnVtZSDIm2ktYW0gYXV6aXQsIGRhciBkZSB2xIN6dXQgbnUKdGUtYW0gdsSDenV0LiBJZciZaSBudW1haSBvbGVhY8SDIHPEgyB0ZSB2xINkIMOubmNhbHRlYSwgdnJlZG5pYyBlyJl0aQpkZSBjb21vYXJhIGNlIMibaS1vIGxhcywgyJlpIGFwb2kgc8SDIG1vciBjdSBwbMSDY2VyZSwgZHJhZ3VsIG1ldSEKCkRhciBIYXJhcC1BbGIgdMSDY2VhIG1vbGN1bSDImWkgZGUtYWJpYSDDrsiZaSBwdXRlYSBkZXNjbGXImXRhCnBpY2lvYXJlbGUgZGluIHPDom5nZWxlIMOubmNoZWdhdCwgY2FyZSBlcmEgbWFpLW1haSBzxIMgdW1wbGUKZ3JvYXBhLiDDjm4gc2bDonLImWl0LCBtYWkgc3RyaWfEgyBlbCwgY2FwdWwgY2VyYnVsdWksIGPDonQgbWFpCnN0cmlnxIMsIMOubnPEgyBIYXJhcC1BbGIgbmljaSBudSByxINzcHVuZGUsIG5pY2kgc2UgYXJhdMSDLCDImWkgZGUgbGEKbyB2cmVtZSBzZSBmYWNlIHTEg2NlcmUuIMiYaSBhyJlhLCBkdXDEgyBhc2ZpbsibaXR1bCBzb2FyZWx1aSwKSGFyYXAtQWxiIGllc2UgZGluIGdyb2FwxIMsIGp1cGXImXRlIHBpZWxlYSBjZXJidWx1aSBjdSBixINnYXJlIGRlCnNlYW3Egywgc8SDIG51IHNtaW50ZWFzY8SDIHZyZW8gcGlhdHLEgyBkaW4gbG9jdWwgZWksIGFwb2kgaWEgY2FwdWwKw65udHJlZywgYciZYSBjdW0gc2UgZ8SDc2VhLCDImWkgc2UgZHVjZSBsYSBTZsOibnRhIER1bWluaWPEgy4KCuKAlCBFaSwgSGFyYXAtQWxiLCB6aXNlIFNmw6JudGEgRHVtaW5pY8SDLCBhyJlhLWkgY8SDIGFtIHNjb3MtbyBsYQpjYXDEg3QgyJlpIGFzdGE/CgrigJQgQciZYTsgY3UgYWp1dG9ydWwgbHVpIER1bW5lemV1IMiZaSBjdSBhbCBzZmluyJtpZWktdm9hc3RyZSwKcsSDc3B1bnNlIEhhcmFwLUFsYiwgYW0gaXpidXRpdCwgbcSDaWN1yJvEgywgc8SDIGZhY2VtIMiZaSBhY3VtIHBlCmNoZWZ1bCBTcMOibnVsdWksIHLEg23Dom5lcmUtYciZIHDEg2d1YmHImSBkZSBkw6Juc3VsIHPEgyByxINtw6JuLCDImWkgc8SDLWwKdsSDZCBjw6JuZCBtaS1vaSB2ZWRlYSBjZWFmYTsgYXR1bmNpLCDImWkgbmljaSBhdHVuY2ksIGPEgyB0YXJlIG1pLWkKbmVncnUgw65uYWludGVhIG9jaGlsb3IhCgrigJQgTGFzxIMtbCwgSGFyYXAtQWxiLCDDrm4gcGxhdGEgbHVpIER1bW5lemV1LCBjxIMgyJlpLWEgZGEgZWwgU3DDom51bApwZXN0ZSBvbSB2cm9kYXTEgzsgcGVudHJ1IGPEgyBudS1pIG5pY2kgbyBmYXB0xIMgZsSDcsSDIHBsYXTEgywgemlzZQpTZsOibnRhIER1bWluaWPEgy4gTWVyZ2kgZGUgaSBsZSBkdSDImWkgYWNlc3RlYSwgY8SDIGktb3IgcsSDbcOibmVhCmVsZSBkZSBjYXAgb2RhdMSDLgoKQXR1bmNpIEhhcmFwLUFsYiwgbXVsyJt1bWluZCBTZmludGVpIER1bWluaWNpLCDDrmkgc8SDcnV0xIMgbcOibmEsCmFwb2kgw65uY2FsZWPEgyBwZSBjYWwgyJlpIHBvcm5lyJl0ZSB0b3QgY3VtIGEgdmVuaXQsIG1lcmfDom5kIHNwcmUKw65tcMSDcsSDyJtpZSwgRHVtbmV6ZXUgc8SDIG5lIMibaWUsIGPEgyBjdXbDom50dWwgZGluIHBvdmVzdGUsIMOubmFpbnRlCm11bHQgbWFpIGVzdGUuLi4gyJhpIHBlIHVuZGUgdHJlY2VhLCBsdW1lYSBkaW4gdG9hdGUgcMSDcsibaWxlIMOubArDrm5naGVzdWlhOiBwZW50cnUgY8SDIHBpYXRyYSBjZWEgbWFyZSBkaW4gY2FwdWwgY2VyYnVsdWkKc3RyxINsdWNlYSBkZSBzZSBwxINyZWEgY8SDIEhhcmFwLUFsYiBzb2FyZWxlIGN1IGVsIMOubCBkdWNlYS4KCk11bMibaSBjcmFpIMiZaSDDrm1wxINyYcibaSBpZciZZWF1IMOubmFpbnRlYSBsdWkgSGFyYXAtQWxiLCDImWkgY2FyZQpkaW5jb3RybyDDrmwgcnVnYSwgdW51bCBzxIMtaSBkZWEgYsSDbsSDcml0LCBjw6J0IGEgY2VyZSBlbCwgYWx0dWwKc8SDLWkgZGVhIGZhdGEgyJlpIGp1bcSDdGF0ZSBkZSDDrm1wxINyxIPIm2llOyBhbHR1bCBzxIMtaSBkZWEgZmF0YSDImWkKw65tcMSDcsSDyJtpYSDDrm50cmVhZ8SDIHBlbnRydSBhc2VtZW5lIG9kb2FyZS4gRGFyIEhhcmFwQWxiIGNhIGRlIGZvYwpzZSBmZXJlYSDImWksIHVybcOibmR1LciZaSBjYWxlYSDDrm5haW50ZSwgbGEgc3TEg3DDom51LXPEg3UgbGUgZHVjZWEuCgrImGkgw65udHItdW5hIGRpbiBzZXJpLCBjdW0gyJllZGVhIFNww6JudWwgw65tcHJldW7EgyBjdSBtb8iZdXMgxIN1IMiZaQpjdSB2ZXJlbGUgc2FsZSBzdXMgw65udHItdW4gZm9pyJlvciwgbnVtYWkgaWFjYSBjZSB6xINyZXNjIMOubgpkZXDEg3J0YXJlIHVuIHN1bCBkZSByYXplIHNjw6JudGVpZXRvYXJlLCBjYXJlIHZlbmVhIMOubnNwcmUKZMOibsiZaWk7IMiZaSBkZSBjZSBzZSBhcHJvcGlhLCBkZSBjZSBsdW1pbmEgbWFpIHRhcmUsIGRlIGxlIGZ1cmEKdmVkZXJpbGUuIMiYaSBkZW9kYXTEgyB0b2F0xIMgc3VmbGFyZWEgcy1hIHB1cyDDrm4gbWnImWNhcmU6IGx1bWVhIGRlCnBlIGx1bWUsIGZpaW5kIMOubiBtYXJlIG5lZHVtZXJpcmUsIGFsZXJnYSBzxIMgdmFkxIMgY2UgbWludW5lCnBvYXRlIHPEgyBmaWUuIMiYaSwgY8OibmQgY29sbywgY2luZSBlcmE/IEhhcmFwLUFsYiwgY2FyZSB2ZW5lYSDDrm4KcGFzdWwgY2FsdWx1aSwgYWR1Y8OibmQgY3Ugc2luZSBwaWVsZWEgyJlpIGNhcHVsIGNlcmJ1bHVpIHBlIGNhcmUKbGUtYSDImWkgZGF0IMOubiBtw6JuYSBTcMOibnVsdWkuCgpMYSB2ZWRlcmVhIGFjZXN0ZWkgbWludW7Eg8ibaWksIHRvyJtpIGF1IHLEg21hcyDDrm5jcmVtZW5pyJtpIMiZaSwKdWl0w6JuZHUtc2UgdW5paSBsYSBhbMibaWksIG51IMiZdGlhdSBjZSBzxIMgemljxIMuIFBlbnRydSBjxIMgw65uCmFkZXbEg3IgZXJhIMiZaSBsdWNydSBkZSBtaXJhcmUhCgpEYXIgU3DDom51bCwgY3UgdmljbGVuaWEgc2Egb2JpY2ludWl0xIMsIG51LciZaSBwaWVyZGUgY3VtcMSDdHVsLgrImGksIGx1w6JuZCB2b3JixIMsIHppY2Ugw65tcMSDcmF0dWx1aToKCuKAlCBFaSwgbW/ImXVsZSwgY2UgbWFpIHppY2k/IGFkZXZlcml0dS1zLWF1IHZvcmJlbGUgbWVsZT8g4oCUIENlIHPEgwptYWkgemljLCBuZXBvYXRlPyEgcsSDc3B1bnNlIMOubXDEg3JhdHVsIHVpbWl0LiBJYSwgc8SDIGFtIGV1IG8Kc2x1Z8SDIGHImWEgZGUgdnJlZG5pY8SDIMiZaSBjcmVkaW5jaW9hc8SDIGNhIEhhcmFwQWxiLCBhyJkgcHVuZS1vIGxhCm1hc8SDIGN1IG1pbmUsIGPEgyBtdWx0IHByZcibdWllyJl0ZSBvbXVsIGFjZXN0YSEKCuKAlCBCYSBzxIMtyJlpIHB1bsSDIHBvZnRhLW4gY3VpISByxINzcHVuc2UgU3DDom51bCBjdSBnbGFzIHLEg3V0xINjaW9zLgpBc3RhIG4tYciZIGZhY2UtbyBldSBkZS1hciBtYWkgZmkgZWwgcGUgY8OidCBlc3RlOyBkb2FyIG51LWkgZnJhdGUKY3UgbWFtYSwgc8SDLWwgcHVuIMOubiBjYXB1bCBjaW5zdGVpISBFdSDImXRpdSwgbW/ImXVsZSwgY8SDIHNsdWdhLWkKc2x1Z8SDIMiZaSBzdMSDcMOibnUtaSBzdMSDcMOibjsgcy1hIG3Dom50dWl0IHZvcmJhLiBOYSwgbmEsIG5hISBkLWFwb2kKcGVudHJ1IHZyZWRuaWNpYSBsdWkgbWkgbC1hIGRhdCB0YXRhLCBjxINjaSBhbHRmZWwgZGUgY2UgbC1hyJkgZmkKbHVhdCBjdSBtaW5lLiBIZWksIGhlaSEgTnUgyJl0acibaSBkLXZvYXN0csSDIGNlIHBvYW0tYSBkcmFjdWx1aSBlCkhhcmFwLUFsYiBhaXN0YSEgUMOibsSDIGwtYW0gZGF0IGxhIGJyYXpkxIMsIG1pLWFtIHN0dXBpdCBzdWZsZXR1bApjdSBkw6Juc3VsLiBOdW1haSBldSDDrmkgdmluIGRlIGhhYy4gVm9yYmEgY2VlYTogIkZyaWNhIHDEg3plyJl0ZQpib3N0xINuxINyaWEiLiBBbHQgc3TEg3DDom4gw65uIGxvY3VsIG1ldSBudSBtYWkgZmFjZSBicsOibnrEgyBjdQpIYXJhcC1BbGIsIGPDonQgw65pIGx1bWVhIMiZaSBwxINtw6JudHVsLiBDZSB0ZSBwb3RyaXZlyJl0aSwgbW/ImXVsZT8KQ3VtIHbEg2QgZXUsIGQtdGEgcHJlYSBpbnRyaSDDrm4gdm9pYSBzdXB1yJlpbG9yLiBEZS1hY2VlYSBudS3Im2kKZGF1IGNlcmJpaSBwaWV0cmUgc2N1bXBlIMiZaSB1csiZaWkgc8SDbMSDyJtpLiBNaWUgdW51aWEgyJl0aXUgY8SDCm51LW1pIHN1ZmzEgyBuaW1lbmUgw65uIGJvcsiZOiBjw6JuZCB2xINkIGPEgyBtw6LIm2EgZmFjZSBtxINyYXp1cmksIMibaS1vCnN0csOibmcgZGUgY29hZMSDLCBkZSBtxINuw6JuY8SDIMiZaSBtZXJlIHDEg2R1cmXIm2UsIGPEg2NpIG4tYXJlCsOubmNvdHJvLi4uIERhY8SDIMibaS1hIGFqdXRhIER1bW5lemV1IHPEgyBtxIMgcsOibmR1aWXImXRpIG1haSBkZWdyYWLEgwrDrm4gbG9jdWwgZC10YWxlLCDDrmkgdmVkZWEsIG1vyJl1bGUgZHJhZ8SDLCBjZSBwcmVmYWNlcmUgYXJlIHPEgyBpYQrDrm1wxINyxIPIm2lhOyBuLW9yIG1haSDImWVkZWEgbHVjcnVyaWxlIHRvdCBhyJlhIG1vYXJ0ZSBjdW0gc3VudC4KUGVudHJ1IGPEgyDImXRpaSB2b3JiYSBjZWVhOiAiT211bCBzZmluyJtlyJl0ZSBsb2N1bCEiLi4uIEZvc3QtYWkgyJlpCmQtdGEgbGEgdGluZXJlyJtlLCBudSB6aWMuIERhciBhY3VtIMOuyJtpIGNyZWQuIETEgywgYsSDdHLDom5lyJtlIG51LXM/CkN1bSBuLW9yIHN0YSB0cmViaWxlIGJhbHTEgyEKCsOObiBzZsOicsiZaXQsIFNww6JudWx1aSDDrmkgbWVyZ2VhIGd1cmEgY2EgcHVwxIN6YSwgZGUtYSBhbWXIm2l0IHBlCsOubXDEg3JhdHVsLCDDrm5jw6J0IGEgdWl0YXQgyJlpIGRlIEhhcmFwLUFsYiwgyJlpIGRlIGNlcmIsIMiZaSBkZSB0b3QuCgpGZXRlbGUgw65tcMSDcmF0dWx1aSDDrm5zxIMgcHJpdmVhdSBsYSB2ZXJpyJlvci4uLiBjdW0gcHJpdmXImXRlCmPDomluZWxlIGxhIG3DosibxIMsIMiZaSBsZSBlcmEgZHJhZyBjYSBzYXJlYS1uIG9jaGk6IHBlbnRydSBjxIMgbGUKc3B1bmVhIGluaW1hIGNlIG9tIGbEg3LEgyBkZSBsZWdlIGVzdGUgU3DDom51bC4gRGFyIGN1bSBlcmF1IHPEgwppYXPEgyBlbGUgY3Ugdm9yYmEgw65uYWludGVhIHRhdMSDbHVpIGxvcj8gU3DDom51bCBuLWF2ZWEgZGUgY2luZS4uLgpWb3JiYSBjZWVhOiAiR8SDc2lzZSB1biBzYXQgZsSDcsSDIGPDomluaSDImWkgc2UgcHJpbWJsYSBmxINyxIMgYsSDyJsiLgpDxIMgYWx0xIMsIGNlIHBvdCBzxIMgemljPwoKTGEgdnJvIGPDonRldmEgemlsZSBkdXDEgyBhc3RhLCDDrm1wxINyYXR1bCBmxINjdSB1biBvc3DEg8ibIGZvYXJ0ZQptYXJlIMOubiBjaW5zdGVhIG5lcG90dS1zxIN1LCBsYSBjYXJlIG9zcMSDyJsgYXUgZm9zdCBwb2Z0acibaSBjZWkKbWFpIHN0csSDbHVjacibaSBvYXNwZcibaTogw65tcMSDcmHIm2ksIGNyYWksIHZvaWV2b3ppLCBjxINwaXRhbmlpCm/ImXRpcmlsb3IsIG1haS1tYXJpaSBvcmHImWVsb3IgyJlpIGFsdGUgZmXIm2UgY2luc3RpdGUuCgrDjm4geml1YSBkZSBvc3DEg8ibLCBmZXRlbGUgw65tcMSDcmF0dWx1aSBzLWF1IHB1cyBjdSBydWfEg21pbnRlYSBwZQpsw6JuZ8SDIFNww6JuIHPEgyBkZWEgdm9pZSBsdWkgSGFyYXAtQWxiIGNhIHPEgyBzbHVqZWFzY8SDIMiZaSBlbCBsYQptYXPEgy4gU3DDom51bCwgbmVwdXTDom5kdS1sZSBzdHJpY2EgaGF0w6JydWwsIGNoZWFtxIMgcGUgSGFyYXAtQWxiCmRlIGZhyJvEgyBjdSBkw6Juc2VsZSDImWktaSDDrm52b2kgYWNlYXN0YSwgw65uc8SDIGN1IHRvY21hbMSDLCBjYSDDrm4KdG90IHRpbXB1bCBvc3DEg8ibdWx1aSBzxIMgc3RlYSBudW1haSBsYSBzcGF0ZWxlIHN0xINww6JudS1zxIN1IMiZaQpuaWNpIG3Eg2NhciBzxIMtyJlpIHJpZGljZSBvY2hpaSBsYSBjZWlsYWzIm2kgbWVzZW5pLCBjxIMgZGUgbC1vaQp2ZWRlYSBvYnLEg3puaWNpbmR1LXNlIGN1bXZhLCBhY29sbyBwZSBsb2Mgw65pIMiZaSB0YWkgY2FwdWwuCgrigJQgQXV6aXQtYWkgY2UgYW0gc3B1cywgc2x1Z8SDIG5ldHJlYm5pY8SDLCB6aXNlIFNww6JudWwsIGFyxIN0w6JuZApsdWkgSGFyYXAtQWxiIHTEg2nImXVsIHBhbG/ImXVsdWksIHBlIGNhcmUganVyYXNlIGNyZWRpbsibxIMgyJlpCnN1cHVuZXJlIFNww6JudWx1aSBsYSBpZciZaXJlYSBkaW4gZsOibnTDom7Egy4KCuKAlCBEYSwgc3TEg3DDom5lLCByxINzcHVuc2UgSGFyYXAtQWxiIGN1IHVtaWxpbsibxIM7IHN1bnQgZ2F0YSBsYQpwb3J1bmNhIGx1bWluxINyaWktdm9hc3RyZS4KCkZldGVsZSDDrm1wxINyYXR1bHVpIGF1IG11bMibdW1pdCBTcMOibnVsdWkgyJlpIHBlbnRydSBhdMOidGEuCgpBbXUsIHRvY21haSBwZSBjw6JuZCBlcmEgdGVtZWl1bCBtZXNlaSwgyJlpIG9hc3BlyJtpaSwgdG90IGd1c3TDom5kCnZpbnVsIGRlIGJ1biwgw65uY2VwdXNlIGEgc2UgY2hpdXJjaGl1bHVpIGPDonRlIG9sZWFjxIMsIG51bWFpIGlhY2EKbyBwYXPEg3JlIG3Eg2lhc3RyxIMgc2UgdmVkZSBixIN0w6JuZCBsYSBmZXJlYXN0csSDIMiZaSB6aWPDom5kIGN1IGdsYXMKbXVpZXJhdGljOgoK4oCUIE3Dom5jYcibaSwgYmXIm2kgyJlpIHbEgyB2ZXNlbGnIm2ksIGRhciBkZSBmYXRhIMOubXDEg3JhdHVsdWkgUm/ImSBuaWNpCm51IGfDom5kacibaSEKCkF0dW5jaSwgZGVvZGF0xIMsIHR1dHVyb3IgbWVzZW5pbG9yIHBlIGxvYyBsaSBzLWEgc3RyaWNhdCBjaGVmdWwKyJlpIGF1IMOubmNlcHV0IGEgdm9yYmkgY2FyZSBjZSDImXRpYSDImWkgY3VtIMOuaSBkdWNlYSBjYXB1bDogdW5paQpzcHVuZWF1IGPEgyDDrm1wxINyYXR1bCBSb8iZLCBhdsOibmQgaW5pbcSDIGhhaW7EgywgbnUgc2UgbWFpIHNhdHVyxIMgZGUKYSB2xINyc2Egc8OibmdlIG9tZW5lc2M7IGFsyJtpaSBzcHVuZWF1IGPEgyBmYXRhIGx1aSBlc3RlIG8KZmFybWF6b2FuxIMgY3VtcGxpdMSDLCDImWkgY8SDIGRpbiBwcmljaW5hIGVpIHNlIGZhYyBhdMOidGVhIGplcnRmZTsKYWzIm2lpIMOubnTEg3JlYXUgc3B1c2VsZSBjZWxvcmxhbMibaSwgemljw6JuZCBjxIMgY2hpYXIgZWEgYXIgZmkKdmVuaXQgw65uIGNoaXAgZGUgcGFzxINyZSBkZSBhIGLEg3R1dCBhY3VtIGxhIGZlcmVhc3RyxIMsIGNhIHPEgyBudQpsYXNlIMiZaSBhaWNpIGx1bWVhIMOubiBwYWNlLiBBbMibaWkgemljZWF1IGPEgywgb3JpY3VtIGFyIGZpLCBkYXIKcGFzxINyZWEgYWNlYXN0YSBudS1pIGx1Y3J1IGN1cmF0OyDImWkgY8SDIHRyZWJ1aWUgc8SDIGZpZSB1biB0cmltaXMKZGUgdW5kZXZhLCBudW1haSBwZW50cnUgYSBpc2NvZGkgY2FzZWxlIG9hbWVuaWxvci4gQWzIm2lpLCBtYWkKZnJpY2/ImWksIMOuyJlpIHN0dXBlYXUgw65uIHPDom4sIG1lbmluZC1vIGNhIHPEgyBzZSDDrm50b2FyY8SDIHBlIGNhcHVsCmFjZWx1aSBjYXJlIGEgdHJpbWlzLW8uIMOObiBzZsOicsiZaXQsIHVuaWkgc3B1bmVhdSDDrm50ci11biBmZWwsCmFsyJtpaSDDrm4gYWx0IGZlbCwgyJlpIG11bHRlIHNlIHppY2VhdSBwZSBzZWFtYSBmZXRlaSDDrm1wxINyYXR1bHVpClJvyJksIGRhciBudSBzZSDImXRpYSBjYXJlIGRpbiB0b2F0ZSBhY2VsZSB2b3JiZSBlc3RlIGNlYQphZGV2xINyYXTEgy4KClNww6JudWwsIGR1cMSDIGNlLWkgYXNjdWx0xIMgcGUgdG/Im2kgY3UgbHVhcmUtYW1pbnRlLCBjbMSDdGluxIMgZGluCmNhcCDImWkgemlzZToKCuKAlCBSxIN1IGUgY8OibmQgYWkgYSBmYWNlIHRvdCBjdSBvYW1lbmkgY2FyZSBzZSB0ZW0gyJlpIGRlIHVtYnJhCmxvciEgRC12b2FzdHLEgywgY2luc3RpyJtpIG9hc3BlyJtpLCBzZSB2ZWRlIGPEgyBwYciZdGXIm2kgYm9ib2NpLCBkZQpudSB2xIMgcHJpY2VwZcibaSBhbCBjdWkgZmFwdCBlIGFjZXN0YS4KCsiYaSBhdHVuY2kgU3DDom51bCByZXBlZGUgw67ImWkgYcibaW50ZciZdGUgcHJpdmlyaWxlIGFzdXByYSBsdWkKSGFyYXAtQWxiIMiZaSwgbnUgyJl0aXUgY3VtLCDDrmwgcHJpbmRlIHrDom1iaW5kLgoK4oCUIEHImWEuLi4gc2x1Z8SDIHZpY2xlYW7EgyBjZS1taSBlyJl0aSE/IFZhc8SDemljxIMsIHR1IGFpIMiZdGlpbsibxIMgZGUKYXN0YSDImWkgbnUgbWktYWkgc3B1cy4gQWN1bSBkZWdyYWLEgyBzxIMtbWkgYWR1Y2kgcGUgZmF0YQrDrm1wxINyYXR1bHVpIFJvyJksIGRlIHVuZGUgyJl0aWkgyJlpIGN1bSDDrmkgyJl0aSB0dS4gSGFpLCBwb3JuZciZdGUhCsiYaSBudSBjdW12YSBzxIMgZmFjaSBkZSBhbHRmZWwsIGPEgyB0ZS1haSBkdXMgZGUgcGUgZmHIm2EKcMSDbcOibnR1bHVpIQoKQXR1bmNpIEhhcmFwLUFsYiwgaWXImWluZCBwbGluIGRlIG3DomhuaXJlLCBzZSBkdWNlIMOubiBncmFqZCBsYQpjYWwgyJlpLCBuZXRlemluZHUtbCBwZSBjb2FtxIMgyJlpIHPEg3J1dMOibmR1LWwsIHppY2U6CgrigJQgRHJhZ3VsIG1ldSB0b3ZhcsSDyJksIGxhIGdyZWEgbmV2b2llIG0tYSBixINnYXQgaWFyIFNww6JudWwhIEFtdSBhCnNjb3JuaXQgYWx0YTogY2ljxIMgc8SDLWkgYWR1YyBwZSBmYXRhIMOubXDEg3JhdHVsdWkgUm/ImSBkZSB1bmRlLW9pCsiZdGkuIEFzdGEtaSBjdXJhdCB2b3JiYSBjZWVhOiAiUG9mdGltIHB1bmfEgyBsYSBtYXPEgywgZGFjxIMgyJtpLWFpCmFkdXMgZGUtYWNhc8SDLiIgU2UgdmVkZSBjxIMgbWkgcy1hIGFwcm9waWF0IGZ1bmlhIGxhIHBhci4gQ2luZQrImXRpZSBjZSBtaSBzLWEgbWFpIMOubnTDom1wbGEhIEN1IFNww6JudWwgdG90IGFtIGR1cy1vIGN1bSBhbQpkdXMtbywgY8OiaW5lLWPDomluZciZdGUsIHDDom7EgyBhY3VtLiBEYXIgY3Ugb211bCByb8iZIG51IMiZdGl1LCB6xIN1LApsYSBjw6J0IG1pLWEgc3RhIGNhcHVsLiDImC1hcG9pLCB1bmRlIHMtYSBmaSBnxINzaW5kIGFjZWwgw65tcMSDcmF0ClJvyJkgyJlpIGZhdGEgbHVpLCBjYXJlIGNpY8SDIGVzdGUgbyBmYXJtYXpvYW7EgyBjdW1wbGl0xIMsIG51bWFpCkNlbC1kZS1wZS1jb21vYXLEgyBhIGZpIMiZdGlpbmQhIFBhcmPEgyBkcmFjdWwgdnLEg2plyJl0ZSwgZGUgbi1hcHVjCmJpbmUgYSBzY8SDcGEgZGluIHVuYSDImWkgZGF1IHBlc3RlIGFsdGEhIFNlIHZlZGUgY8SDIG0tYSBuxINzY3V0Cm1hbWEgw65udHItdW4gY2VhcyByxIN1LCBzYXUgbnUgyJl0aXUgY3VtIHPEgyBtYWkgemljLCBjYSBzxIMgbnUKZ3JlyJllc2Mgw65uYWludGVhIGx1aSBEdW1uZXpldS4gTcSDIHByaWNlcCBldSB0YXJlIGJpbmUgY2UgYXIKdHJlYnVpIHPEgyBmYWMsIGNhIHPEgyBzZSBjdXJtZSBvZGF0xIMgdG9hdGUgYWNlc3RlLiBEYXIgbS1hbQpkZXByaW5zIGEgdMOicsOiaSBkdXDEgyBtaW5lIG8gdmlhyJvEgyB0aWPEg2xvYXPEgy4gVm9yYmEgY2VlYTogIlPEgyBudQpkZWEgRHVtbmV6ZXUgb211bHVpIGPDonQgcG9hdGUgZWwgc3VmZXJpIi4KCuKAlCBTdMSDcMOibmUsIHppc2UgYXR1bmNpIGNhbHVsLCBuZWNoZXrDom5kIGN1IMOubmZvY2FyZSwgbnUgdGUgbWFpCm9saWPEg2kgYXTDonRhISBEdXDEgyB2cmVtZSByZWEsIGEgZmkgZWwgdnJlb2RhdMSDIMiZaSBzZW5pbi4gRGFjJ2FyCnN0YSBjaW5ldmEgc8SDLciZaSBmYWPEgyBzZWFtxIMgZGUgdG9hdGUgY2VsZSwgY3VtIGNoaXRlyJl0aSBkLXRhLAphcG9pIGF0dW5jaSBhciB0cmVidWkgc8SDIHZlemkgdG90IG9hbWVuaSBtb3LIm2kgcGUgdG9hdGUKY8SDcsSDcmlsZS4uLiBOdSBmaSBhyJlhIGRlIG5lcsSDYmTEg3RvciEgRGUgdW5kZSDImXRpaSBjxIMgbnUgcy1vcgpzY2hpbWJhIGx1Y3J1cmlsZSDDrm4gYmluZSDImWkgcGVudHJ1IGQtdGE/IE9tdWwgZSBkYXRvciBzxIMgc2UKbHVwdGUgY8OidCBhIHB1dGVhIGN1IHZhbHVyaWxlIHZpZcibaWksIGPEg2NpIMiZdGlpIGPEgyBlc3RlIG8gdm9yYsSDOgoiTnUgYWR1Y2UgYW51bCBjZSBhZHVjZSBjZWFzdWwiLiBDw6JuZCBzdW50IHppbGUgyJlpIG5vcm9jLCB0cmVjaQpwcmluIGFwxIMgyJlpIHByaW4gZm9jIMiZaSBkaW4gdG9hdGUgc2NhcGkgbmV2xIN0xINtYXQuIFZvcmJhCmPDom50ZWN1bHVpOgoKRsSDLW3EgywgbWFtxIMsIGN1IG5vcm9jLArImGkgbcSDY2FyIG0tYXJ1bmPEgy1uIGZvYy4KTGFzJyBwZSBtaW5lLCBzdMSDcMOibmUsIGPEgyDImXRpdSBldSBwZSB1bmRlIHRlLW9pIGR1Y2UgbGEKw65tcMSDcmF0dWwgUm/ImTogcGVudHJ1IGPEgyBtLWF1IG1haSBwdXJ0YXQgbyBkYXTEgyBwxINjYXRlbGUgcGUKYWNvbG8gY3UgdGF0dS10xIN1LCDDrm4gdGluZXJlyJtpbGUgbHVpLiBIYWksIMOubmNhbGVjxIMgcGUgbWluZSDImWkKyJtpbmUtdGUgYmluZSwgY8SDIGFjdW0gYW0gc8SDLW1pIGFyxIN0IHB1dGVyaWxlIGNoaWFyIGRlIGFpY2ksIGRlCnBlIGxvYywgw65uIGNpdWRhIFNww6JudWx1aSwgY2Egc8SDLWkgcHVuZW0gdmVuaW4gbGEgaW5pbcSDLgoKSGFyYXAtQWxiIGF0dW5jaSDDrm5jYWxlY8SDLCDImWkgY2FsdWwsIG5lY2hlesOibmQgbyBkYXTEgyBwdXRlcm5pYywKemJvYXLEgyBjdSBkw6Juc3VsOgoKw45uIMOubmFsdHVsIGNlcnVsdWksClbEg3pkdWh1bCBwxINtw6JudHVsdWkKyJlpIG8gaWEgZGUtYSBjdXJtZXppyJk6CkRlIGxhIG5vdXJpIGPEg3RyZSBzb2FyZSwKUHJpbnRyZSBsdW7EgyDImWkgbHVjZWZlcmksClN0ZWxlIG3Dom5kcmUgbHVjaXRvYXJlLgrImGkgYXBvaSwgZGUgbGEgbyB2cmVtZSwgw65uY2VwZSBhIHNlIGzEg3NhIGxpbiBjYSB2w6JudHVsLCDImWkgbHXDom5kCmRlLWEgbHVuZ3VsIHDEg23Dom50dWx1aSwgbWVyZyBzcHJlIMOubXDEg3LEg8ibaWUsIER1bW5lemV1IHPEgyBuZSDIm2llLApjxIMgY3V2w6JudHVsIGRpbiBwb3Zlc3RlLCDDrm5haW50ZSBtdWx0IG1haSBlc3RlLgoKRGFyIGlhIHPEgyB2ZWRlbSwgY2Ugc2UgbWFpIHBldHJlY2UgbGEgbWFzxIMgZHVwxIMgZHVjZXJlYSBsdWkKSGFyYXAtQWxiPwoK4oCUIEhlaSwgaGVpISB6aXNlIFNww6JudWwgw65uIHNpbmUsIHRyZW11csOibmQgZGUgY2l1ZMSDOiBudSB0ZS1hbQrImXRpdXQgZXUgY8SDLW1pIGXImXRpIGRlIGFjZciZdGlhLCBjxIMgZGUgbXVsdCDDrsibaSBmxINjZWFtIGZlbHVsIS4uLgpEYXIgdHLEg2luZCDImWkgbmVtdXJpbmQsIHRlLW9pIHNsdWppIGV1LCBtxINpIGJhZGVvIS4uLiBQYWxvyJl1bAppc3RhIGFyZSBzxIMtyJtpIMiZdGllIGRlIMiZdGlyZS4uLiBFaSwgdmVkZcibaSwgbW/ImXVsZSDImWkgY2luc3RpyJtpCm1lc2VuaSwgY3VtIGhyxINuZciZdGkgcGUgZHJhY3VsLCBmxINyxIMgc8SDIMiZdGlpIGN1IGNpbmUgYWkgZGUtYQpmYWNlPyBEYWPEgyBudS1zIMiZaSBldSB1biBwdWnImW9yIGRlIG9tIMOubiBmZWx1bCBtZXUsIGRhciB0b3QgbS1hCnRyYXMgSGFyYXAtQWxiIHBlIHNmb2FyxIMhIEJpbmUtYSB6aXMgY2luZS1hIHppczogIkPEgyB1bmRlLWkKY2V0YXRlYSBtYWkgdGFyZSwgYWNvbG8gYmF0ZSBkcmFjdWwgcsSDemJvaSBtYWkgcHV0ZXJuaWMiLgoKw45uIHNmw6JyyJlpdCwgw65tcMSDcmF0dWwsIGZldGVsZSBzYWxlIMiZaSB0b8ibaSBvYXNwZcibaWkgcsSDbWFzZXLEgwrDrm5jcmVtZW5pyJtpLCBTcMOibnVsLCBib2Ryb2fEg25pbmQgZGluIGd1csSDLCBudSDImXRpYSBjdW0gc8SDLciZaQphc2N1bmTEgyB1cmEsIGlhcsSDIEhhcmFwLUFsYiwgw65uZ3Jpaml0IGRlIGNlIGkgcy1hciBtYWkgcHV0ZWEKw65udMOibXBsYSDDrm4gdXJtxIMsIG1lcmdlYSB0b3Qgw65uYWludGUgcHJpbiBsb2N1cmkgcHVzdGlpIMiZaSBjdQpncmV1IGRlIHN0csSDYsSDdHV0LgoKyJhpIGPDom5kIHPEgyB0cmVhY8SDIHVuIHBvZCBwZXN0ZSBvIGFwxIMgbWFyZSwgaWFjYSBvIG51bnTEgyBkZQpmdXJuaWNpIHRyZWNlYSDImWkgZWEgdG9jbWFpIGF0dW5jaSBwb2R1bC4gQ2Ugc8SDIGZhY8SDIEhhcmFwQWxiID8KU3TEgyBlbCBvbGVhY8SDIMiZaSBzZSBzZsSDdHVpZciZdGUgY3UgZ8OibmR1bDogIlPEgyB0cmVjIHBlc3RlCmTDom5zZWxlLCBhbSBzxIMgb21vciBvIG11bMibaW1lOyBzxIMgZGF1IHByaW4gYXDEgywgbcSDIHRlbSBjxIMgbS1vaQrDrm5lY2EsIGN1IGNhbCBjdSB0b3QuIERhciB0b3QgbWFpIGJpbmUgc8SDIGRhdSBwcmluIGFwxIMsIGN1bSBhIGRhCkR1bW5lemV1LCBkZWPDonQgc8SDIGN1cm0gdmlhyJthIGF0w6J0b3IgZ8OienVsacibZSBuZXZpbm92YXRlIi4gyJhpCnppY8OibmQgRG9hbW5lLWFqdXTEgywgc2UgYXJ1bmPEgyBjdSBjYWx1bCDDrm4gYXDEgywgbyB0cmVjZSDDrm5vdApkaW5jb2xvLCBsYSBjZWxhIG1hbCwgZsSDcsSDIHByaW1lamRpZSDImWkgYXBvaSDDrsiZaSBpYSBkcnVtdWwKw65uYWludGUuIMiYaSBjdW0gbWVyZ2VhIGVsLCBudW1haSBpYWNhIGkgc2Ugw65uZsSDyJtpyJlhesSDIG8gZnVybmljxIMKemJ1csSDdG9hcmUgemljw6JuZDoKCuKAlCBIYXJhcC1BbGIsIGZpaW5kY8SDIGXImXRpIGHImWEgZGUgYnVuLCBkZSDIm2ktYSBmb3N0IG1pbMSDIGRlIHZpYcibYQpub2FzdHLEgywgY8OibmQgdHJlY2VhbSBwZSBwb2QsIMiZaSBudSBuZS1haSBzdHJpY2F0IHZlc2VsaWEsIHZyZWF1CnPEgy3Im2kgZmFjIMiZaSBldSB1biBiaW5lOiBuYS3Im2kgYXJpcGEgYXN0YSwgyJlpIGPDom5kIMOuaSBhdmVhCnZyb2RhdMSDIG5ldm9pZSBkZSBtaW5lLCBzxIMgZGFpIGZvYyBhcmlwZWksIMiZaSBhdHVuY2kgZXUgw65tcHJldW7EgwpjdSB0b3QgbmVhbXVsIG1ldSBhdmVtIHPEgy3Im2kgdmVuaW0gw65uIGFqdXRvci4KCkhhcmFwLUFsYiwgc3Ryw6JuZ8OibmQgYXJpcGEgY3Ugw65uZ3JpamlyZSwgbXVsyJt1bWXImXRlIGZ1cm5pY2lpCnBlbnRydSBhanV0b3J1bCBmxINnxINkdWl0IMiZaSBhcG9pIHBvcm5lyJl0ZSB0b3Qgw65uYWludGUuCgrImGkgbWFpIG1lcmdlIGVsIGPDonQgbWVyZ2UsIMiZaSBudW1haSBpYWNhIGNlIGF1ZGUgbyBiw6J6w6JpdHVyxIMKw65uxINkdciZaXTEgy4gU2UgdWl0xIMgZWwgw65uIGRyZWFwdGEsIG51IHZlZGUgbmltaWNhOyBzZSB1aXTEgyDDrm4Kc3TDom5nYSwgbmljaSBhdMOidGE7IMiZaSBjw6JuZCBzZSB1aXTEgyDDrm4gc3VzLCBjZSBzxIMgdmFkxIM/IFVuIHJvaQpkZSBhbGJpbmUgc2Ugw65udsOicnRlYSDDrm4gemJvciBwZSBkZWFzdXByYSBjYXB1bHVpIHPEg3UgyJlpIHVtYmxhdQpiZXptZXRpY2UgZGUgY29sbyBww6JuxIMgY29sbywgbmVhdsOibmQgbG9jIHVuZGUgc8SDIHNlIGHImWV6ZS4KSGFyYXAtQWxiLCB2xIN6w6JuZHUtbGUgYciZYSwgaSBzZSBmYWNlIG1pbMSDIGRlIGTDom5zZWxlIMiZaSwKbHXDom5kdS3ImWkgcMSDbMSDcmlhIGRpbiBjYXAsIG8gcHVuZSBwZSBpYXJixIMgbGEgcMSDbcOibnQsIGN1IGd1cmEtbgpzdXMsIMiZaSBhcG9pIGVsIHNlIGTEgyDDrm50ci1vIHBhcnRlLiBBdHVuY2ksIGJ1Y3VyaWEgYWxiaW5lbG9yOwpzZSBsYXPEgyBqb3MgY3UgdG9hdGVsZSDImWkgc2UgYWR1bsSDIGNpb3RjxIMgw65uIHDEg2zEg3JpZS4gSGFyYXAtQWxiLAphZmzDom5kdS1zZSBjdSBwxINyZXJlIGRlIGJpbmUgZGVzcHJlIGFzdGEsIGFsZWFyZ8SDIMOubiBkcmVhcHRhIMiZaQrDrm4gc3TDom5nYSDImWkgbnUgc2UgbGFzxIMgcMOibsSDIGNlIGfEg3NlyJl0ZS11biBidciZdGloYW4gcHV0cmVnxINpb3MsCsOubCBzY29iZciZdGUgY3UgY2UgcG9hdGUgyJlpLWkgZmFjZSB1cmRpbmnImTsgZHVwxIMgYWNlZWEgYciZYXrEgwpuaciZdGUgyJtlcHXImWkgw65udHItw65uc3VsLCDDrmwgZnJlYWPEgyBwZSBkaW7Eg3VudHJ1IGN1IGPEg3R1yJluaWPEgywgY3UKc3VsY2luxIMsIGN1IG3Eg3TEg2NpdW5lLCBjdSBwb2FsYSBzw6JudMSDLU3Eg3JpZWkgyJlpIGN1IGFsdGUgYnVydWllbmUKbWlyb3NpdG9hcmUgyJlpIHByaWVsbmljZSBhbGJpbmVsb3IgyJlpIGFwb2ksIGx1w6JuZHUtbCBwZSB1bcSDciwgc2UKZHVjZSBsYSByb2ksIHLEg3N0b2FybsSDIGFsYmluZWxlIGZydW11yJllbCBkaW4gcMSDbMSDcmllIMOubgpidciZdGloYW4sIMOubCDDrm50b2FyY2UgYmluaciZb3IgY3UgZ3VyYSDDrm4gam9zLCDDrmkgcHVuZSBkZWFzdXByYQpuaciZdGUgY2FwdMSDbGFuaSwgY2Egc8SDIG51IHLEg3piYXTEgyBzb2FyZWxlIMiZaSBwbG9haWEgw65ubMSDdW50cnUsCsiZaSBhcG9pLCBsxINzw6JuZHUtbCBhY29sbyBwZSBjw6JtcCwgw65udHJlIGZsb3JpLCDDrsiZaSBjYXV0xIMgZGUgZHJ1bS4KCsiYaSBjdW0gbWVyZ2VhIGVsLCBtdWzIm3VtaXQgw65uIHNpbmUgcGVudHJ1IGFjZWFzdMSDIGZhY2VyZSBkZQpiaW5lLCBudW1haSBpYWNhIGkgc2Ugw65uZsSDyJtpyJlhesSDIMOubmFpbnRlIGNyxINpYXNhIGFsYmluZWxvciwKemljw6JuZHUtaToKCuKAlCBIYXJhcC1BbGIsIHBlbnRydSBjxIMgZciZdGkgYciZYSBkZSBidW4gyJlpIHRlLWFpIG9zdGVuaXQgZGUgbmUtYWkKZsSDY3V0IGFkxINwb3N0LCB2cmVhdSBzxIMtyJtpIGZhYyDImWkgZXUgdW4gYmluZSDDrm4gdmlhyJthIG1lYTogbmEtyJtpCmFyaXBhIGFzdGEgyJlpLCBjw6JuZCDDrmkgYXZlYSB2cmVvZGF0xIMgbmV2b2llIGRlIG1pbmUsIGFwcmluZGUtbywKyJlpIGV1IMOubmRhdMSDIGFtIHPEgy3Im2kgdmluIMOubnRydSBhanV0b3IuCgpIYXJhcC1BbGIsIGx1w6JuZCBhcmlwYSBjdSBidWN1cmllLCBvIHN0csOibmdlIGN1IMOubmdyaWppcmU7IGFwb2ksCm11bMibdW1pbmQgY3LEg2llc2VpIHBlbnRydSBhanV0b3J1bCBmxINnxINkdWl0LCBwb3JuZciZdGUsCnVybcOibmR1LciZaSBjYWxlYSB0b3Qgw65uYWludGUuCgpNYWkgbWVyZ2UgZWwgY8OidCBtZXJnZSDImWksIGPDom5kIGxhIHBvYWxlbGUgdW51aSBjb2RydSwgbnVtYWkKaWFjYSBjZSB2ZWRlIG8gZGloYW5pZSBkZSBvbSwgY2FyZSBzZSBww6JycMOibGVhIHBlIGzDom5nxIMgdW4gZm9jCmRlIGRvdcSDemVjaSDImWkgcGF0cnUgZGUgc3TDom5qZW5pIGRlIGxlbW5lIMiZaSB0b3QgYXR1bmNpIHN0cmlnYSwKY8OidCDDrmkgbHVhIGd1cmEsIGPEgyBtb2FyZSBkZSBmcmlnLiDImGktYXBvaSwgYWZhcsSDIGRlIGFjZWFzdGEsCm9tdWwgYWNlbGEgZXJhIGNldmEgZGUgc3BlcmlhdDsgYXZlYSBuaciZdGUgdXJlY2hpIGNsxINwxIN1Z2UgyJlpCm5pyJl0ZSBidXpvYWllIGdyb2FzZSDImWkgZMSDYsSDbMSDemF0ZS4gyJhpIGPDom5kIHN1ZmxhIGN1IGTDom5zZWxlLApjZWEgZGVhc3VwcmEgc2UgcsSDc2Zyw6JuZ2VhIMOubiBzdXMgcGVzdGUgc2PEg2bDonJsaWEgY2FwdWx1aSwgaWFyCmNlYSBkZWRlc3VidCBhdMOicm5hIMOubiBqb3MsIGRlLWkgYWNvcGVyZWEgcMOibnRlY2VsZS4gyJhpLCBvcmkgcGUKY2Ugc2Ugb3ByZWEgc3VmbGFyZWEgbHVpLCBzZSBwdW5lYSBwcm9tb3JvYWNhIG1haSBncm9hc8SDIGRlLW8KcGFsbcSDLiBOdSBlcmEgY2hpcCBzxIMgdGUgYXByb3BpaSBkZSBkw6Juc3VsLCBjxIMgYciZYSB0cmVtdXJhIGRlCnRhcmUsIGRlIHBhcmPEgy1sIHpnaGlodWlhIGRyYWN1bC4gyJhpIGRhYy1hciBmaSB0cmVtdXJhdCBudW1haQplbCwgY2UgyJtpLWFyIGZpIGZvc3Q/IERhciB0b2F0xIMgc3VmbGFyZWEgyJlpIGbEg3B0dXJhIGRlCnByaW1wcmVqdXIgw65pIMibaW5lYXUgaGFuZ3VsOiB2w6JudHVsIGdlbWVhIGNhIHVuIG5lYnVuLCBjb3BhY2lpCmRpbiBwxINkdXJlIHNlIHbEg2ljxINyYXUsIHBpZXRyZWxlIMibaXBhdSwgdnJlYXNjdXJpbGUgyJtpdWlhdSDImWkKY2hpYXIgbGVtbmVsZSBkZSBwZSBmb2MgcG9jbmVhdSBkZSBnZXIuIElhcsSDIHZldmVyacibZWxlLApnxIN2b3pkaXRlIHVuYSBwZXN0ZSBhbHRhIMOubiBzY29yYnVyaSBkZSBjb3BhY2ksIHN1ZmxhdSDDrm4gdW5naGlpCsiZaSBwbMOibmdlYXUgw65uIHB1bW5pLCBibGVzdGVtw6JuZHUtyJlpIGNlYXN1bCDDrm4gY2FyZSBzLWF1IG7Eg3NjdXQuCk3EgyByb2csIGZvYyBkZSBnZXIgZXJhOiBjZSBzxIMgdsSDIHNwdW4gbWFpIG11bHQhIEhhcmFwQWxiLCBudW1haQpvIMibw6JyxIMgY8OidCBhIHN0YXQgZGUgcy1hIHVpdGF0LCBhIGbEg2N1dCDIm3VyyJt1cmkgbGEgZ3VyxIMgyJlpLApuZXB1dMOibmR1LciZaSBzdMSDcMOibmkgcsOic3VsLCB6aXNlIGN1IG1pcmFyZToKCuKAlCBNdWx0ZSBtYWkgdmVkZSBvbXVsIGFjZXN0YSBjw6J0IHRyxINpZciZdGUhIE3Eg2kgdGFydG9ydWxlLCBudQptw6JuY2EgaGFyYW0gyJlpIHNwdW5lIGRyZXB0LCB0dSBlyJl0aSBHZXJpbMSDPyBByJnEgy1pIGPEgyB0YWNpPy4uLiBUdQp0cmVidWllIHPEgyBmaWksIHBlbnRydSBjxIMgyJlpIGZvY3VsIMOubmdoZWHIm8SDIGzDom5nxIMgdGluZSwgZGUKYXJ6dWxpdSBjZSBlyJl0aS4KCuKAlCBSw6J6aSB0dSwgcsOiemksIEhhcmFwLUFsYiwgemlzZSBhdHVuY2kgR2VyaWzEgyB0cmVtdXLDom5kLCBkYXIsCnVuZGUgbWVyZ2ksIGbEg3LEgyBtaW5lIG4tYWkgc8SDIHBvyJtpIGZhY2UgbmltaWNhLgoK4oCUIEhhaSDImWkgdHUgY3UgbWluZSwgZGFjxIMgdnJlaSwgemlzZSBIYXJhcC1BbGI7IGRlLWFiaWEgdGUtaSBtYWkKw65uY8SDbHppIG1lcmfDom5kIGxhIGRydW0sIGPEg2NpIG51IGUgYmluZSBjw6JuZCBzdGFpIGxvY3VsdWkuCgpHZXJpbMSDIGF0dW5jaSBzZSBpYSBjdSBIYXJhcC1BbGIgyJlpIHBvcm5lc2Mgw65tcHJldW7Egy4gyJhpIG1lcmfDom5kCmVpIG8gYnVjYXTEgyDDrm5haW50ZSwgSGFyYXAtQWxiIHZlZGUgYWx0xIMgZHLEg2PEg3JpZSDImWkgbWFpIG1hcmU6IG8KbmFtaWzEgyBkZSBvbSBtw6JuY2EgYnJhemRlbGUgZGUgcGUgdXJtYSBhIDI0IGRlIHBsdWd1cmkgyJlpIHRvdAphdHVuY2kgc3RyaWdhIMOubiBndXJhIG1hcmUgY8SDIGNyYXDEgyBkZSBmb2FtZS4KCuKAlCBFaSwgYXBvaSBzxIMgbnUgYnVmbmXImXRpIGRlIHLDonM/IHppc2UgSGFyYXAtQWxiLiBNxINpLCBtxINpLCBtxINpIQpjxIMgbXVsdGUtyJtpIG1haSB2xINkIG9jaGlpISBQZXNlbW5lIGMtYWlzdGEtaSBGbMSDbcOibnppbMSDLApmb2FtZXRlYSwgc2FjIGbEg3LEgyBmdW5kIHNhdSBjaW5lIG1haSDImXRpZSBjZSBwcmljb3BzZWFsxIMgYSBmaSwKZGUgbnUtbCBwb2F0ZSBzxIN0dXJhIG5pY2kgcMSDbcOibnR1bC4KCuKAlCBSw6J6aSB0dSwgcsOiemksIEhhcmFwLUFsYiwgemljZSBhdHVuY2kgRmzEg23Dom56aWzEgywgZGFyLCB1bmRlCm1lcmdlyJtpIHZvaSwgZsSDcsSDIG1pbmUgbi1hdmXIm2kgc8SDIHB1dGXIm2kgZmFjZSBuaWNpIG8gaXNwcmF2xIMuCgrigJQgRGFjxIMtaSBhyJlhLCBoYWkgyJlpIHR1IGN1IG5vaSwgemlzZSBIYXJhcC1BbGIsIGPEgyBkb2FyIG4tYW0gYQp0ZSBkdWNlIMOubiBzcGluYXJlLgoKRmzEg23Dom56aWzEgyBhdHVuY2kgc2UgaWEgZHVwxIMgSGFyYXAtQWxiIMiZaSBwb3JuZXNjIHR1c3RyZWkKw65uYWludGUuIMiYaSBtYWkgbWVyZ8OibmQgZWkgbyBwb3N0YXTEgywgbnVtYWkgaWFjYSBIYXJhcC1BbGIgdmVkZQphbHTEgyBtaW51bsSDyJtpZSDImWkgbWFpIG1hcmU6IG8gYXLEg3RhcmUgZGUgb20gYsSDdXNlIGFwYSBkZSBsYSAyNApkZSBpYXp1cmkgyJlpIG8gZ8OicmzEgyBwZSBjYXJlIHVtYmxhdSBudW1haSA1MDAgZGUgbW9yaSDImWkgdG90CmF0dW5jaSBzdHJpZ2Egw65uIGd1cmEgbWFyZSBjxIMgc2UgdXN1Y8SDIGRlIHNldGUuCgrigJQgTcSDaSwgZGEnIGFsIGRyYWN1bHVpIG9uw6BuaWUgZGUgb20gZSDImWkgYWNlc3RhISB6aXNlIEhhcmFwQWxiLgpHcm96YXYgYnVyZMSDaGFuIMiZaSBuZXPEg8ibaW9zIGfDonRsZWosIGRlIG51IHBvdCBzxIMtaSBwb3RvbGVhc2PEgwpzZXRlYSBuaWNpIGl6dm9hcmVsZSBwxINtw6JudHVsdWk7IG1hcmUgZ2hpb2wgZGUgYXDEgyB0cmVidWllIHPEgwpmaWUgw65uIG1hyJtlbGUgbHVpISBTZSB2ZWRlIGPEgyBhY2VzdGEtaSBwcsSDcMSDZGVuaWEgYXBlbG9yLAp2ZXN0aXR1bCBTZXRpbMSDLCBmaXVsIFNlY2V0ZWksIG7Eg3NjdXQgw65uIHpvZGlhIHJhyJtlbG9yIMiZaQrDrm1wb2RvYml0IGN1IGRhcnVsIHN1cHR1bHVpLgoK4oCUIFLDonppIHR1LCByw6J6aSwgSGFyYXAtQWxiLCB6aXNlIGF0dW5jaSBTZXRpbMSDLCBjxINydWlhIMOubmNlcHUKYS1pIMibw6LImW5pIGFwYSBwZSBuxINyaSDImWkgcGUgdXJlY2hpLCBjYSBwZSBuaciZdGUgbMSDcHRvYWNlIGRlCm1vcmksIGRhciwgdW5kZSB2xIMgZHVjZcibaSB2b2ksIGbEg3LEgyBtaW5lIGRlZ2VhYmEgdsSDIGR1Y2XIm2kuCgrigJQgSGFpIMiZaSB0dSBjdSBub2ksIGRhY8SDIHZyZWksIHppc2UgSGFyYXAtQWxiOyBkZS1hYmlhIG51IHRlLWFpCm1haSBsaW5jaXVyaSBhdMOidGEgw65uIGNlbGUgYXBlLCDDrmkgc2PEg3BhIGRlIGJsZXN0ZW11bCBicm9hyJl0ZWxvcgrImWktaSBkYSByxINnYXogbW9yaWxvciBzxIMgdW1ibGUsIGPEgyBkZXN0dWwgyJtpLWFpIGbEg2N1dCBtZW5kcmVsZQpww6JuxIMgYWN1bS4gQ2UsIERvYW1uZSBpYXJ0xIMtbcSDLCDDrmkgZmFjZSBicm9hyJl0ZSDDrm4gcMOibnRlY2UgZGUKYXTDonRhIGFwxIMhCgpTZXRpbMSDIGF0dW5jaSBzZSBpYSBkdXDEgyBIYXJhcC1BbGIgyJlpIHBvcm5lc2MgdHVzcGF0cnUgw65uYWludGUuCsiYaSBtYWkgbWVyZ8OibmQgZWkgbyBidWNhdMSDLCBudW1haSBpYWNhIGNlIHZlZGUgSGFyYXAtQWxiIGFsdMSDCm1pbnVuxIPIm2llIMiZaSBtYWkgbWludW5hdMSDOiBvIHNjaGltb25vc2l0dXLEgyBkZSBvbSBhdmVhIMOubiBmcnVudGUKbnVtYWkgdW4gb2NoaSwgbWFyZSBjw6J0IG8gc2l0xIMgyJlpLCBjw6JuZCDDrmwgZGVzY2hpZGVhLCBudSB2ZWRlYQpuaW1pY2E7IGRhIGNoaW9yIHBlc3RlIGNlIGFwdWNhLiBJYXLEgyBjw6JuZCDDrmwgyJtpbmVhIMOubmNoaXMsIGRhcgpmaWUgemksIGRhciBmaWUgbm9hcHRlLCBzcHVuZWEgY8SDIHZlZGUgY3UgZMOibnN1bCDDrm4gbcSDcnVudGFpZWxlCnDEg23Dom50dWx1aS4KCuKAlCBJYWNhLCDDrm5jZXB1IGVsIGEgcsSDY25pIGNhIHVuIHNtaW50aXQsIHRvYXRlIGx1Y3J1cmlsZSBtaSBzZQphcmF0xIMgZ8SDdXJpdGUsIGNhIHNpdGnImWNhLCDImWkgc3RyxIN2ZXppaSwgY2EgYXBhIGNlYSBsaW1wZWRlOwpkZWFzdXByYSBjYXB1bHVpIG1ldSB2xINkIG8gbXVsyJtpbWUgbmVudW3Eg3JhdMSDIGRlIHbEg3p1dGUgyJlpCm5ldsSDenV0ZTsgdsSDZCBpYXJiYSBjdW0gY3JlyJl0ZSBkaW4gcMSDbcOibnQ7IHbEg2QgY3VtIHNlCnJvc3RvZ29sZciZdGUgc29hcmVsZSBkdXDEgyBkZWFsLCBsdW5hIMiZaSBzdGVsZWxlIGN1ZnVuZGF0ZSDDrm4KbWFyZTsgY29wYWNpaSBjdSB2w6JyZnVsIMOubiBqb3MsIHZpdGVsZSBjdSBwaWNpb2FyZWxlIMOubiBzdXMgyJlpCm9hbWVuaWkgdW1ibMOibmQgY3UgY2FwdWwgw65udHJlIHVtZXJlOyB2xINkLCDDrm4gc2bDonLImWl0LCBjZWVhIGNlCm4tYciZIG1haSBkb3JpIHPEgyB2YWTEgyBuaW1lbmUsIHBlbnRydSBhLciZaSBvc3RlbmkgdmVkZXJlYTogdsSDZApuaciZdGUgZ3VyaSBjxINzY2F0ZSB1aXTDom5kdS1zZSBsYSBtaW5lIMiZaSBudS1taSBwb3QgZGEgc2VhbWEgZGUKY2UgdsSDIG1pcmHIm2kgYciZYSwgbWlyYS12LWHIm2kgZGUuLi4gZnJ1bXVzZcibZS12xIMhCgpIYXJhcC1BbGIgYXR1bmNpIHNlIGJhdGUgY3UgbcOibmEgcGVzdGUgZ3VyxIMgyJlpIHppY2U6IOKAlCBEb2FtbmUKZmVyZciZdGUgZGUgb211bCBuZWJ1biwgY8SDIHRhcmUtaSBkZSBqxINsaXQsIHPEg3JtYW51bCEgUGUgZGUtbwpwYXJ0ZSDDrsibaSB2aW5lIGEgcsOiZGUgyJlpIHBlIGRlIGFsdGEgw67Im2kgdmluZSBhLWwgcGzDom5nZS4gRGFyIHNlCnZlZGUgY8SDIGHImWEgbC1hIGzEg3NhdCBEdW1uZXpldS4gUG9hdGUgY8SDIGFjZXN0YS1pIHZlc3RpdHVsCk9jaGlsxIMsIGZyYXRlIGN1IE9yYmlsxIMsIHbEg3IgcHJpbWFyZSBjdSBDaGlvcmlsxIMsIG5lcG90IGRlIHNvcsSDCmx1aSBQw6JuZGlsxIMsIGRpbiBzYXQgZGUgbGEgQ2hpdGlsxIMsIHBlc3RlIGRydW0gZGUgTmltZXJpbMSDLiBPcmkKZGluIHTDonJnIGRlIGxhIFPEgy1sLWNhyJtpLCBtZWdpZciZIGN1IEPEg3V0YcibaSDImWkgZGUgdXJtxIMgbnUtaSBtYWkKZGHIm2kuIE3EgyByb2csIHVudS1pIE9jaGlsxIMgcGUgZmHIm2EgcMSDbcOibnR1bHVpLCBjYXJlIHZlZGUgdG9hdGUKyJlpIHBlIHRvyJtpIGFsdGZlbCBkZSBjdW0gdmVkZSBsdW1lYSBjZWFsYWx0xIM7IG51bWFpIHBlIHNpbmUgbnUKc2UgdmVkZSBjw6J0IGUgZGUgZnJ1bXXImWVsLiBQYXJjxIMtaSB1biBib8ibLCBjaGlsaW1ib8ibIGJvyJtpdCwgw65uCmZydW50ZSBjdSB1biBvY2hpLCBudW1haSBzxIMgbnUgZmllIGRlIGRlb2NoaSEKCuKAlCBSw6J6aSB0dSwgcsOiemksIEhhcmFwLUFsYiwgemlzZSBhdHVuY2kgT2NoaWzEgywgdWl0w6JuZHUtc2UKw65uY2hpb3JjaGlvyJlhdCwgZGFyLCB1bmRlIHRlIGR1Y2ksIGbEg3LEgyBkZSBtaW5lIHLEg3UgYXJlIHPEgy3Im2kKY2FkxIMuIEZhdGEgw65tcMSDcmF0dWx1aSBSb8iZIG51IHNlIGNhcMSDdMSDIGHImWEgZGUgbGVzbmUgY3VtIGNyZXppCnR1LiBEaW4gZ2FyZHVsIE9hbmNlaSDIm2ktYSBkYS1vIMOubXDEg3JhdHVsLCBkYWPEgyBuLW9pIGZpIMiZaSBldQpwZS1hY29sby4KCuKAlCBIYWkgyJlpIHR1IGN1IG5vaSwgZGFjxIMgdnJlaSwgemlzZSBIYXJhcC1BbGIsIGPEgyBkb2FyIG4tYXZlbSBhCnRlIGR1Y2UgZGUgbcOibsSDLCBjYSBwZSB1biBvcmIuCgpPY2hpbMSDIGF0dW5jaSBzZSBpYSDImWkgZWwgZHVwxIMgSGFyYXAtQWxiIMiZaSBwb3JuZXNjIHR1c2NpbmNpCsOubmFpbnRlLiDImGkgbWFpIG1lcmfDom5kIGVpIG8gYnVjYXTEgywgbnVtYWkgaWFjYSBjZSB2ZWRlCkhhcmFwLUFsYiBhbHTEgyBiw6J6ZMOiZ2FuaWUgyJlpIG1haSDImWk6IG8gcG9jaXRhbmllIGRlIG9tIHVtYmxhIGN1CmFyY3VsIGR1cMSDIHbDom5hdCBwxINzxINyaS4gyJgtYXBvaSwgY2hpdGnIm2kgY8SDIG51bWFpIMOubiBhcmMgc2UKw65uY2hlaWEgdG90IG1lyJl0ZciZdWd1bCDImWkgcHV0ZXJlYSBvbXVsdWkgYWNlbHVpYT8gyJppLWFpIGfEg3NpdCEKQXZlYSB1biBtZciZdGXImXVnIG1haSBkcsSDY29zIMiZaSBvIHB1dGVyZSBtYWkgcGUgc3VzIGRlY8OidCDDrsiZaQpwb2F0ZSBkcmFjdWwgw65uY2hpcHVpOiBjw6JuZCB2b2lhLCBhyJlhIHNlIGzEg8ibZWEgZGUgdGFyZSwgZGUKY3VwcmluZGVhIHDEg23Dom50dWwgw65uIGJyYcibZS4gyJhpIGFsdMSDIGRhdMSDLCBhyJlhIHNlIGRlyJlpcmEgyJlpIHNlCmx1bmdlYSBkZSBncm96YXYsIGRlIGFqdW5nZWEgY3UgbcOibmEgbGEgbHVuxIMsIGxhIHN0ZWxlLCBsYSBzb2FyZQrImWkgY8OidCB2b2lhIGRlIHN1cy4gyJhpIGRhY8SDIHNlIMOubnTDom1wbGEgc8SDIG51IG5pbWVyZWFzY8SDCnDEg3PEg3JpbGUgY3Ugc8SDZ2VhdGEsIGVsZSB0b3QgbnUgc2PEg3BhdSBkZSBkw6Juc3VsOyDIm2kgbGUgcHJpbmRlYQpjdSBtw6JuYSBkaW4gemJvciwgbGUgcsSDc3VjZWEgZ8OidHVsIGN1IGNpdWTEgyDImWkgYXBvaSBsZSBtw6JuY2EKYciZYSwgY3J1ZGUsIGN1IHBlbmUgY3UgdG90LiBDaGlhciBhdHVuY2kgYXZlYSB1biB2cmFmIGRlIHDEg3PEg3JpCmRpbmFpbnRlIMiZaSBvc3DEg3RhIGRpbnRyLcOubnNlbGUgY3UgbMSDY29taWUsIGNhIHVuIHZ1bHRhbgpoxINtZXNpdC4gSGFyYXAtQWxiLCBjdXByaW5zIGRlIG1pcmFyZSwgemlzZToKCuKAlCBEYXIgb2FyZSBwZSBhY2VzdGEgY3VtIG1hbWEgZHJhY3VsdWkgbC1vIGZpIG1haSBjaGVtw6JuZD8KCuKAlCBaaS1pIHBlIG51bWUsIHPEgyDIm2ktbCBzcHVuLCByxINzcHVuc2UgYXR1bmNpIE9jaGlsxIMsIHrDom1iaW5kIHBlCnN1YiBtdXN0xIPIm2kuCgrigJQgRGFyIHRlIG1haSBkdWNlIGNhcHVsIGNhIHPEgy1sIGJvdGV6aT8gU8SDLWkgemljaSBQxINzxINyaWzEgy4uLiBudQpncmXImWXImXRpOyBzxIMtaSB6aWNpIEzEg8ibaWzEgy4uLiBuaWNpIGF0w6J0YTsgc8SDLWkgemljaSBMdW5naWzEgy4uLgphc2VtZW5lOyBzxIMtaSB6aWNpIFDEg3PEg3JpLUzEg8ibaS1MdW5naWzEgywgbWkgc2UgcGFyZSBjxIMgZSBtYWkKcG90cml2aXQgY3UgbsSDcmF2dWwgyJlpIGFwdWPEg3R1cmlsZSBsdWksIHppc2UgSGFyYXAtQWxiLArDrm5kdWlvyJlhdCBkZSBtaWxhIGJpZXRlbG9yIHDEg3PEg3JpLiBTZSB2ZWRlIGPEgyBhY2VzdGEtaSB2ZXN0aXR1bApQxINzxINyaS0gTMSDyJtpLUx1bmdpbMSDLCBmaXVsIHPEg2dldMSDdG9ydWx1aSDImWkgbmVwb3R1bCBhcmNhyJl1bHVpOwpicsOidWwgcMSDbcOibnR1bHVpIMiZaSBzY2FyYSBjZXJ1bHVpOyBjaXVtYSB6YnVyxIN0b2FyZWxvciDImWkgc3BhaW1hCm9hbWVuaWxvciwgY8SDIGFsdGZlbCBudSB0ZSBwcmljZXBpIGN1bSBzxIMtaSBtYWkgemljaS4KCuKAlCBSw6J6aSB0dSBkZSBtaW5lLCByw6J6aSwgSGFyYXAtQWxiLCB6aXNlIGF0dW5jaSBQxINzxINyaS1MxIPIm2ktCkx1bmdpbMSDLCBkYXIgbWFpIGJpbmUgYXIgZmkgc8SDIHLDonppIGRlIHRpbmUsIGPEg2NpIG51IMiZdGlpIGNlCnDEg2NhdCB0ZSBwYciZdGUuIENoaXRlyJl0aSBjxIMgZmF0YSDDrm1wxINyYXR1bHVpIFJvyJkgbnVtYWkgYciZYSBzZQpjYXDEg3TEgz8gUG9hdGUgbi1haSDImXRpaW7Im8SDIGNlIHZpZG3EgyBkZSBmYXTEgyBlIGFjZWVhLCBjw6JuZCB2cmVhLApzZSBmYWNlIHBhc8SDcmUgbcSDaWFzdHLEgywgw67Im2kgYXJhdMSDIGNvYWRhLCDImWkgaWEtaSB1cm1hIGRhY8SDCnBvyJtpISBEZSBuLWEgZmkgyJlpIHVudWwgY2EgbWluZSBwZS1hY29sbywgZGVnZWFiYSB2xIMgbWFpIGJhdGXIm2kKcGljaW9hcmVsZSBkdWPDom5kdS12xIMuCgrigJQgSGFpIMiZaSB0dSBjdSBub2ksIGRhY8SDIHZyZWksIHppc2UgYXR1bmNpIEhhcmFwLUFsYjsgZGUtYWJpYQptaS1pIGx1YSBwZSBHZXJpbMSDIGRlIMibdWx1YyDImWkgbC3DrmkgcHVydGEgY3UgbmFzdWwgcGUgbGEgc29hcmUsCmRvYXIgcy1hIMOubmPEg2x6aSBjw6J0dciZaSBkZWPDonQgyJlpIG4tYSBtYWkgY2zEg27Im8SDbmkgYXTDonRhIGRpbgptxINzZWxlLCBjYSB1biBjb2Nvc3TDonJjIGRlIGNlaSBixIN0csOibmNpb8iZaSwgY8SDIHBhcmPEgyBtxIMgc3Ryw6JuZ2UKw65uIHNwYXRlIGPDom5kIMOubCB2xINkIGHImWEuCgpQxINzxINyaS1MxIPIm2ktTHVuZ2lsxIMgc2UgaWEgYXR1bmNpIGR1cMSDIEhhcmFwLUFsYiDImWkgcG9ybmVzYyBlaQp0dXPImWFzZSDDrm5haW50ZS4gyJhpIHBlIHVuZGUgdHJlY2VhdSwgcMOicmpvbCBmxINjZWF1OiBHZXJpbMSDCnBvdG9wZWEgcMSDZHVyaWxlIHByaW4gYXJkZXJlLiBGbMSDbcOibnppbMSDIG3Dom5jYSBsdXQgyJlpIHDEg23Dom50CmFtZXN0ZWNhdCBjdSBodW3EgyDImWkgdG90IHN0cmlnYSBjxIMgbW9hcmUgZGUgZm9hbWUuIFNldGlsxIMgc29yYmVhCmFwYSBkZSBwcmluIGLEg2zIm2kgyJlpIGlhenVyaSwgZGUgc2UgemLEg3RlYXUgcGXImXRpaSBwZSB1c2NhdCDImWkKyJtpcGEgyJlhcnBlbGUgw65uIGd1cmEgYnJvYciZdGVpIGRlIHNlY2V0xIMgbWFyZSBjZSBlcmEgcGUgYWNvbG8uCk9jaGlsxIMgdmVkZWEgdG9hdGUgY2VsZSBjYSBkcmFjdWwsIMiZaSBudW1haSDDrm5naGXIm2FpIGNlIGRhCmRpbnRyLcOubnN1bDoKCkPEgyBlIGxhaWUsCkPEgy1pIGLEg2xhaWU7CkPEgyBlIGNpdXTEgywKQ8SDLWkgY29ybnV0xIMuCk3EgyByb2csIG5lYnVuaWkgZGUtYSBsdWksIGPDonRlLW4gbHVuxIMgyJlpIMOubiBzdGVsZSwgZGUtyJtpIHZlbmVhCnPEgyBmdWdpIGRlIGVsZS4gU2F1IHPEgyByw6J6aSBjYSB1biBuZWJ1biwgY3JlZGXIm2ktbcSDIGNlIHbEgyBzcHVuIQoKw45uIHNmw6JyyJlpdCwgUMSDc8SDcmktTMSDyJtpLUx1bmdpbMSDIGFkZW1lbmVhIHpidXLEg3RvYXJlbGUgyJlpLApqdW11bGl0ZSwgbmVqdW11bGl0ZSwgyJtpIGxlIHDEg3BhIHBlIHJ1ZMSDLCBwZSBzxINtw6JuyJvEgywgZGUgbnUgc2UKbWFpIHN0xIN2aWxlYSBuaW1lbmUgY3UgcMSDc8SDcmkgcGUgbMOibmfEgyBjYXPEgyBkZSByxIN1bCBsdWkuCgpOdW1haSBIYXJhcC1BbGIgbnUgYWR1Y2VhIG5pY2kgbyBzdXDEg3JhcmUuIMOObnPEgywgY2EgdG92YXLEg8iZLCBlcmEKcMSDcnRhyJkgbGEgdG9hdGU6IMiZaSBsYSBwYWd1YsSDLCDImWkgbGEgY8OiyJl0aWcsIMiZaSBwcmlldGVub3MgY3UKZmllY2FyZSwgcGVudHJ1IGPEgyBhdmVhIG5ldm9pZSBkZSBkw6JuyJlpaSDDrm4gY8SDbMSDdG9yaWEgc2EgbGEKw65tcMSDcmF0dWwgUm/ImSwgY2FyZSwgemljZSwgY2ljxIMgZXJhIHVuIG9tIHDDomNsaciZaXQgyJlpIHLEg3V0xINjaW9zCmxhIGN1bG1lOiBudSBhdmVhIG1pbMSDIGRlIG9tIG5pY2kgY8OidCBkZSB1biBjw6JpbmUuIERhciB2b3JiYQpjZWVhOiAiTGEgdW51bCBmxINyxIMgc3VmbGV0IHRyZWJ1aWUgdW51bCBmxINyxIMgZGUgbGVnZSIuIMiYaQpnw6JuZGVzYyBldSBjxIMgZGluIGNpbmNpIG5lc3DEg2xhyJtpIGPDosibaSBtZXJnIGN1IEhhcmFwLUFsYiwgaS1hCnZlbmkgZWwgdnJldW51bCBkZSBoYWM7IMiZLWEgbWFpIGRhIMOubXDEg3JhdHVsIFJvyJkgyJlpIHBlc3RlCm9hbWVuaSwgbnUgdG90IHBlc3RlIGJ1dHVjaSwgY2EgcMOibsSDIGF0dW5jaS4gRGFyIGlhciBtxIMgw65udG9yYwrImWkgemljOiBtYWkgyJl0aWkgY3VtIHZpbmUgdnJlbWVhPyBMdW1lYSBhc3RhIGUgcGUgZG9zLCB0b2F0ZQptZXJnIGN1IGNhcHUtbiBqb3M7IHB1yJtpbmkgc3VpZSwgbXVsyJtpIGNvYm9hcsSDLCB1bnVsIG1hY2luxIMgbGEKbW9hcsSDLiDImC1hcG9pIGFjZWwgdW51bCBhcmUgYXR1bmNpIMOubiBtw6JuxIMgyJlpIHDDomluZWEsIMiZaSBjdcibaXR1bArImWkgdGFpZSBkZSB1bmRlIHZyZWEgyJlpIGPDonQgw65pIHBsYWNlLCB0dSB0ZSB1acibaSDImWkgbi1haSBjZS1pCmZhY2UuIFZvcmJhIGNlZWE6ICJDaW5lIHBvYXRlIG9hc2Ugcm9hZGU7IGNpbmUgbnUsIG5pY2kgY2FybmUKbW9hbGUiLiBByJlhIMiZaSBIYXJhcC1BbGIgyJlpIGN1IGFpIHPEg2k7IHBvYXRlLWFyIGl6YnV0aSBzxIMgaWEKZmF0YSDDrm1wxINyYXR1bHVpIFJvyJksIHBvYXRlIG51LCBkYXIgYWN1bSwgZGVvZGF0xIMsIGVpIHNlIHRvdCBkdWMKw65uYWludGUgyJlpLCBtYWkgbGEgdXJtxIMsIGN1bSBsZS1hIGZpIG5vcm9jdWwuIENlLW1pIHBhc8SDIG1pZT8gRXUKc3VudCBkYXRvciBzxIMgc3B1biBwb3Zlc3RlYSDImWkgdsSDIHJvZyBzxIMgYXNjdWx0YcibaS4KCkFtdSBIYXJhcC1BbGIgyJlpIGN1IGFpIHPEg2kgbWFpIG1lcmcgZWkgY8OidCBtZXJnIMiZaSwgw65udHItbwp0w6JyemllIHZyZW1lLCBhanVuZyBsYSDDrm1wxINyxIPIm2llLCBEdW1uZXpldSBzxIMgbmUgyJtpZSwgY8SDCmN1dsOibnR1bCBkaW4gcG92ZXN0ZSwgw65uYWludGUgbXVsdCBtYWkgZXN0ZS4gyJhpIGN1bSBhanVuZywgb2RhdMSDCmludHLEgyBidWx1YyDDrm4gb2dyYWTEgywgdHVzyJlhc2UuIEhhcmFwLUFsYiDDrm5haW50ZSDImWkgY2VpbGFsyJtpIMOubgp1cm3EgywgY2FyZSBkZSBjYXJlIG1haSBjaGlwb3MgyJlpIG1haSDDrm1icsSDY2F0LCBkZSBzZSB0w6Jyw6JpYXUKYcibZWxlIMiZaSBjdXJnZWF1IG9iaWVsZWxlIGR1cMSDIGTDom7ImWlpLCBwYXJjxIMgZXJhIG9hc3RlYSBsdWkKUGFwdWMgSG9nZWEgSG9nZWdhcnVsLiDImGkgYXR1bmNpLCBIYXJhcC1BbGIgc2UgyJlpIMOubmbEg8ibaciZYXrEgwrDrm5haW50ZWEgw65tcMSDcmF0dWx1aSBSb8iZLCBzcHVuw6JuZHUtaSBkZSB1bmRlLCBjdW0sIGNpbmUgyJlpCnBlbnRydSBjZSBhbnVtZSBhdSB2ZW5pdC4gw45tcMSDcmF0dWx1aSBpLWEgZm9zdCBkZS1hIG1pcmFyZWEsCnbEg3rDom5kIGPEgyBuaciZdGUgZ29sYW5pIGF1IGFzZW1lbmUgw65uZHLEg3puZWFsxIMsIGRlIHZpbiBjdQpuZXJ1yJlpbmFyZSBzxIMtaSBjZWFyxIMgZmF0YSwgZmllIGRpbiBwYXJ0ZWEgb3JpY3VpIGFyIGZpLiBEYXIsCm5ldm9pbmQgYSBsZSBzdHJpY2EgaW5pbWEsIG51IGxlIHNwdW5lIG5pY2kgZGEsIG5pY2kgYmEsIGNpIGxlCmTEgyByxINzcHVucyBjYSBzxIMgcsSDbcOiaWUgcGVzdGUgbm9hcHRlIGFjb2xvLCDImWkgcMOibsSDIG3DomluZQpkaW1pbmVhyJvEgyBzLWEgbWFpIGfDom5kaSBlbCBjZSB0cmVidWllIHPEgyBmYWPEgy4uLiDImGkgcGUgYWx0xIMKcGFydGUsIMOubXDEg3JhdHVsIG9kYXTEgyBjaGVhbcSDIMOubiB0YWluxIMgcGUgdW4gY3JlZGluY2lvcyBhbCBzxIN1CsiZaSBkxIMgcG9ydW5jxIMgc8SDLWkgY3VsY2Ugw65uIGNhc2EgY2VhIGRlIGFyYW3EgyDDrm5mb2NhdMSDLCBjYSBzxIMKZG9hcm3EgyBwZW50cnUgdmXImW5pY2llLCBkdXDEgyBjdW0gcMSDyJtpc2UgyJlpIGFsyJtpIHBlyJtpdG9yaSwgcG9hdGUKbWFpIGNldmEgZGVjw6J0IGFjZciZdGlhLgoKQXR1bmNpIGNyZWRpbmNpb3N1bCDDrm1wxINyYXR1bHVpIHNlIGR1Y2UgcmVwZWRlIMiZaSBkxIMgZm9jIGNhc2VpCmNlbGVpIGRlIGFyYW3EgyBwZSBkZWRlc3VidCwgY3UgMjQgZGUgc3TDom5qZW5pIGRlIGxlbW5lLCBkZSBzZQpmYWNlIGNhc2Egcm/ImWllIGN1bSBlIGrEg3JhdGljdWwuIEFwb2ksIGN1bSDDrm5zZXJlYXrEgywgdmluZSDImWkKcG9mdGXImXRlIHBlIG9hc3BlyJtpIGxhIGN1bGNhcmUuIEdlcmlsxIMgYXR1bmNpLCBuxIN6ZHLEg3ZhbiBjdW0gZXJhCmVsLCBjaGVhbcSDIHBlIHRvdmFyxIPImWlpIHPEg2kgZGVvcGFydGUgyJlpIGxlIHppY2Ugw65uY2V0aciZb3I6CgrigJQgTcSDaSwgbnUgY3VtdmEgc8SDIHbEgyDDrm1waW5nxIMgTWl0aXRlbHVsIHPEgyBpbnRyYcibaSDDrm5haW50ZWEgbWVhCnVuZGUgbmUtYSBkdWNlIG9tdWwgyJthcHVsdWkgY2VsdWkgcm/ImSwgY8SDIG51IG1haSBhanVuZ2XIm2kgc8SDCnZlZGXIm2kgeml1YSBkZSBtw6JpbmUuIERvYXIgdW51LWkgw65tcMSDcmF0dWwgUm/ImSwgdmVzdGl0IHByaW4KbWVsZWFndXJpbGUgYWNlc3RlIHBlbnRydSBidW7Eg3RhdGVhIGx1aSBjZWEgbmVtYWlwb21lbml0xIMgyJlpCm1pbG9zdGl2aXJlYSBsdWkgY2VhIG5lYXV6aXTEgy4gw45sIMiZdGl1IGV1IGPDonQgZSBkZSBwcmltaXRvciDImWkKZGUgZGFybmljIGxhIHNwYXRlbGUgYWx0b3JhLiBOdW1haSBkZSBudSBpLWFyIG11cmkgbXVsyJtpCsOubmFpbnRlISBzxIMgdHLEg2lhc2PEgyB0cmVpIHppbGUgY3UgY2VhIGRlLWFsYWx0YWllcmkhIEQtYXBvaQpmZXRpyJlvYXJhIGx1aTsgYSB6aXMgZHJhY3VsIMiZaSBzLWEgZsSDY3V0OyBidWPEg8ibaWPEgyBydXB0xIMKdGF0xIMtc8SDdSDDrm4gcGljaW9hcmUsIGJhIMOubmPEgyDImWkgbWFpIMiZaS4gVm9yYmEgY2VlYTogIkNhcHJhIHNhcmUKbWFzYSwgyJlpIGlhZGEgc2FyZSBjYXNhIi4gRGFyIGxhcycgY8SDIMiZaS1hdSBnxINzaXQgZWkgb211bC4gRGUgbnUKbGUtb2kgdmVuaSBldSBkZSBoYWMgw65uIGFzdMSDIG5vYXB0ZSwgbmljaSBtYW1hIGRyYWN1bHVpIG51IGxlCm1haSB2aW5lIQoK4oCUIEHImWEgZ8OibmRlc2MgyJlpIGV1LCB6aXNlIEZsxINtw6JuemlsxIM7IMiZaS1hIHB1cyBlbCwgw65tcMSDcmF0dWwKUm/ImSwgYm9paSDDrm4gY8OicmQgY3UgZHJhY3VsLCBkYXIgYXJlIHPEgy1pIHNjb2F0xIMgZsSDcsSDIGNvYXJuZS4KCuKAlCBCYSBtaSBzZSBwYXJlIGMtYSBkYSBlbCDImWkgdGVsZWFnxIMsIMiZaSBwbHVnLCDImWkgb3RpYywgyJlpIHRvdCwKbnVtYWkgc8SDIHNjYXBlIGRlIG5vaSwgemlzZSBPY2hpbMSDLgoK4oCUIElhIGFzY3VsdGHIm2ksIG3Eg2khIHppc2UgR2VyaWzEgzogIlZvcmJhIGx1bmfEgywgc8SDcsSDY2lhIG9tdWx1aSIuCk1haSBiaW5lIGhhaWRlbSBsYSBjdWxjYXJlLCBjxIMgbmUgYciZdGVhcHTEgyBvbXVsIMOubXDEg3JhdHVsdWkgY3UKbWFzYSDDrm50aW5zxIMsIGN1IGbEg2NsaWlsZSBhcHJpbnNlIMiZaSBjdSBicmHIm2VsZSBkZXNjaGlzZS4gSGFpIQpBc2N1yJtpyJtpLXbEgyBkaW7Im2lpIMiZaSBwb3JuacibaSBkdXDEgyBtaW5lLgoKyJhpIG9kYXTEgyBwb3JuZXNjIGVpLCB0ZWxlYXAsIHRlbGVhcCwgdGVsZWFwISDImGksIGN1bSBhanVuZyDDrm4KZHJlcHR1bCB1yJlpaSwgc2Ugb3ByZXNjIHB1yJtpbi4gQXR1bmNpIEdlcmlsxIMgc3VmbMSDIGRlIHRyZWkgb3JpCmN1IGJ1emnImW9hcmVsZSBzYWxlIGNlbGUgaXNjdXNpdGUgyJlpIGNhc2EgcsSDbcOibmUgbmljaSBmaWVyYmludGUsCm5pY2kgcmVjZSwgY3VtIGUgbWFpIGJpbmUgZGUgZG9ybWl0IMOubnRyLcOubnNhLiBBcG9pIGludHLEgyBjdQp0b8ibaWkgw65ubMSDdW50cnUsIHNlIHRvbG9nZciZdGUgY2FyZSB1bmRlIGFwdWPEgywgyJlpIHRhYyBtxIMgY2hlYW3Egy4KSWFyxIMgY3JlZGluY2lvc3VsIMOubXDEg3JhdHVsdWksIMOubmN1aW5kIHXImWEgcGUgZGluIGFmYXLEgyBjdQpyZXBlanVuZSwgbGUgemljZSBjdSByxIN1dGF0ZToKCuKAlCBMYXMnIGPEgyB2LWFtIGfEg3NpdCBldSBhYyBkZSBjb2pvYy4gRGUtYWN1bSBkb3JtacibaSwKZG9ybWlyZS1hyJtpIHNvbW51bCBjZWwgZGUgdmVjaSwgY8SDIHYtYW0gYciZdGVybnV0IGV1IGJpbmUhIFbEgwp2ZcibaSBmYWNlIHNjcnVtIHDDom7EgyBtw6JpbmUtZGltaW5lYcibxIMuCgpBcG9pIMOuaSBsYXPEgyBhY29sbyDImWkgZWwgc2UgZHVjZSDDrm4gdHJlYWJhIGx1aS4gRGFyIEhhcmFwQWxiIMiZaQpjdSBhaSBzxINpIG5pY2kgbnUgYmluZGlzZWF1IGRlIGFzdGE7IGVpLCBjdW0gYXUgZGF0IGRlCmPEg2xkdXJpY8SDLCBwZSBsb2MgbGkgcy1hdSBtdWlhdCBjaW9sYW5lbGUgyJlpIGF1IMOubmNlcHV0IGEgc2UKw65udGluZGUgyJlpIGEgc2UgaMOicmpvbmkgw65uIGNpdWRhIGZldGVpIMOubXDEg3JhdHVsdWkgUm/ImS4gQmEgw65uY8SDCkdlcmlsxIMgc2Ugw65udGluZGVhIGRlIGPEg2xkdXLEgywgZGUtaSB0cmVjZWF1IGdlbnVuY2hpbGUgZGUgZ3VyxIMuCsiYaSBob2ptYSBtb3JvY8SDbmVhIHBlIGNlaWxhbMibaSwgemljw6JuZDoKCuKAlCBOdW1haSBkaW4gcHJpY2luYSB2b2FzdHLEgyBhbSByxINjaXQgY2FzYTsgY8SDY2kgcGVudHJ1IG1pbmUgZXJhCm51bWFpIGJ1bsSDLCBjdW0gZXJhLiBEYXIgYciZYSBwxIPIm2XImXRpIGRhY8SDIHRlIGllaSBjdSBuaciZdGUKYmljaXNuaWNpLiBMYXMnIGPEgyB2LWEgbWFpIHDEg2xpIGVsIGJlcmVjaGV0dWwgYWNlc3RhIGRlIGFsdMSDCmRhdMSDISDImHRpaSBjxIMgYXJlIGhheiDImWkgYXN0YT8gVm9pIHPEgyB2xIMgbMSDZsSDacibaSDImWkgc8SDIGh1enVyacibaQpkZSBjxINsZHVyxIMsIGlhcsSDIGV1IHPEgyBjcmFwIGRlIGZyaWcuIEJ1Li4ubsSDIHRyZWFixIMhIFPEgy1taSBkYXUKZXUgbGluaciZdGVhIG1lYSBwZW50cnUgaGF0w6JydWwgbnUgyJl0aXUgY3VpPyBBY3XImWkgdsSDIHTDonJuw6JpZXNjCnByaW4gY2FzxIMsIHBlIHJ1ZMSDIHBlIHPEg23Dom7Im8SDOyDDrm5jYWx0ZWEgc8SDIG51IHNlIGFsZWFnxIMgbmltaWNhCm5pY2kgZGUgc29tbnVsIG1ldSwgZGFyIG5pY2kgZGUgYWwgdm9zdHJ1LgoK4oCUIElhIHRhY8SDLcibaSBndXJhLCBtxINpIEdlcmlsxIMhIHppc2VyxIMgY2VpbGFsyJtpLiBBY3XImWkgc2UgZmFjZQp6aXXEgywgyJlpIHR1IG51IG1haSBzdGluY2hlyJl0aSBjdSBicmHImW9hdmUgZGUtYWxlIHRhbGUuIEFsCmRyYWN1bHVpIGxpZ2hpb2FpZSBtYWkgZciZdGkhIERlc3R1bCBhY3VtLCBjxIMgbmUtYWkgZsSDY3V0IGNhcHVsCmPEg2xpbmRhci4gQ2luZS1hIG1haSBkb3JpIHPEgyBmYWPEgyB0b3bEg3LEg8iZaWUgY3UgdGluZSBhaWLEgy3ImWkKcGFydGUgyJlpIHBvYXJ0ZS3Im2kgcG9ydHVsLiBDxIMgcGUgbm9pIMiZdGl1IGPEgyBuZS1haSBhbWXIm2l0LiBBcmUKY2luZXZhIGNhcCBzxIMgc2UgbGluaciZdGVhc2PEgyBkZSByxIN1bCB0xIN1PyBJLWF1emktbC3Eg2k6IHBhcmPEgy1pIG8KbW9hcsSDIGhvZG9yb2dpdMSDLiBOdW1haSBndXJhIGx1aSBzZSBhdWRlIMOubiB0b2F0ZSBwxINyyJtpbGUuIEhvam1hCnRvbG9jxINuZciZdGUgcGVudHJ1IG5pbWljYSB0b2F0xIMsIGN1cmF0IGNhIHVuIG5lYnVuLiBUdSwgbcSDaSwKZciZdGkgYnVuIGRlIHRyxINpdCBudW1haSDDrm4gcMSDZHVyZSwgY3UgbHVwaWkgyJlpIGN1IHVyyJlpaSwgZGFyIG51CsOubiBjYXNlIMOubXDEg3LEg3RlyJl0aSDImWkgw65udHJlIG5pyJl0ZSBvYW1lbmkgY3Vtc2VjYWRlLgoK4oCUIElhIGFzY3VsdGHIm2ksIG3Eg2ksIGRhciBkZSBjw6JuZCBhyJtpIHB1cyB2b2kgc3TEg3DDom5pcmUgcGUgbWluZT8KemlzZSBHZXJpbMSDLiBBcG9pIG51IG3EgyBmYWNlyJtpIGRpbiBjYWwgbcSDZ2FyLCBjxIMgdsSDIHZlyJtpIGfEg3NpCm1hbnRhdWEgY3UgbWluZSEgRXUgw65zIGJ1biBjw6J0IMOucyBidW4sIGRhciDImWkgY8OibmQgbcSDIHNjb2F0ZQpjaW5ldmEgZGluIHLEg2JkYXJlLCBhcG9pIG51LWkgdHJlYnVpZSBuaWNpIMibaWdhbiBkZSBsYWllCsOubXBvdHJpdmEgbWVhLgoK4oCUIFrEg3UsIG51IMiZdWd1aWXImXRpLCBtxINpIEJ1emlsxIM/IERhJyBhbWFybmljIG1haSBlyJl0aSBsYSB2aWHIm8SDOwpjw6JuZCB0ZSBtw6JuaWksIGZhY2kgc8OibmdlLW4gYmFsaWfEgywgemlzZSBGbMSDbcOibnppbMSDLiBUYXJlLW1pCmXImXRpIGRyYWchLi4uIFRlLWHImSB2w6Jyw64gw65uIHPDom4sIGRhciBudSDDrm5jYXBpIGRlIHVyZWNoaS4uLiBJYQptYWkgYmluZSBvZ29pZciZdGUtdGUgb2xlYWPEgyDImWkgbWFpIHN0csOibmdlLcibaSBidXppyJlvYXJlbGUgYWNhc8SDOwpudSBkZSBhbHRhLCBkYXIgc8SDIG51LcibaSBwYXLEgyByxIN1IHBlIHVybcSDLCBjxIMgZG9hciBudSBlyJl0aSBudW1haQp0dSDDrm4gY2FzYSBhc3RhLgoK4oCUIEVpLCBhcG9pISBWb3JiYSBjZWVhOiAiRsSDIGJpbmUsIHPEgy3Im2kgYXV6aSByxIN1IiwgemlzZSBHZXJpbMSDLgpEYWPEgyBudSB2LWFtIGzEg3NhdCBzxIMgaW50cmHIm2kgYWljaSDDrm5haW50ZWEgbWVhLCBhyJlhIG1pIHNlIGNhZGU7CmJhIMOubmPEgyDImWkgbWFpIHLEg3UgZGVjw6J0IGHImWEuIENpbmUtYSBmYWNlIGRlIGFsdMSDIGRhdMSDIGNhIG1pbmUsCmNhIG1pbmUgc8SDIHDEg8ibZWFzY8SDLgoK4oCUIEFpIGRyZXB0YXRlLCBtxINpIEdlcmlsxIMsIG51bWFpIHR1IG51IHRlIGNhdcibaSwgemlzZSBPY2hpbMSDLgpEYXIgY3UgcHJ1aml0dXJpIGRlLWEgdGFsZSwgaWEgYWN1yJlpIHNlIGR1Y2Ugbm9hcHRlYSwgyJlpIHZhaSBkZQpvZGlobmEgbm9hc3RyxIMuIE3Eg2NhciB0dSBzxIMgZmlpIGFjZWxhLCBjZSBhaSB6aWNlLCBjw6JuZCDIm2ktYQpzdHJpY2EgY2luZXZhIHNvbW51bD8gQmEgw65uY8SDIGFpIGRhdCBwZXN0ZSBuaciZdGUgb2FtZW5pIGFpIGx1aQpEdW1uZXpldSwgZGFyLCBzxIMgZmkgZm9zdCBjdSBhbMibaWksIGhlaSwgaGVpISBtw6JuY2FpIHBhcGFyYSBww6JuxIMKYWN1bS4KCuKAlCBEYXIgbnUgbWFpIHTEg2NlyJtpLCBtxINpPyBDxIMgaWEgYWN1yJlpIHRyZWMgY3UgcGljaW9hcmVsZSBwcmluCnBlcmXIm2kgyJlpIGllcyBhZmFyxIMgY3UgYWNvcGVyxINtw6JudHVsIMOubiBjYXAsIHppc2UgTMSDyJtpTHVuZ2lsIMSDLgpQYXJjxIMgbnUgZmFjZcibaSBhIGJpbmUsIGRlIG51IHbEgyBtYWkgYXN0w6JtcMSDcsSDIGRyYWN1bCBuaWNpIGxhCnZyZW1lYSBhc3RhLiBNxINpIEJ1emlsxIMsIG1pIHNlIHBhcmUgY8SDIHR1IGXImXRpIHRvYXTEgyBwcmljaW5hCmfDomxjZXZlaSBkaW50cmUgbm9pLgoK4oCUIEJhIGJpbmUgY8SDIG51ISB6aXNlIE9jaGlsxIMuIEFyZSBlbCBub3JvYyBkZSBjZSBhcmUsIGRhciDImXRpdQpldSBjZSBpLWFyIHRyZWJ1aS4KCuKAlCBJYSwgc8SDLWkgZmFjaSBjaGljYSB0b3Bvciwgc3BpbmFyZWEgZG9ixIMgyJlpIHDDom50ZWNlbGUgY29iesSDLAp6aXNlIFNldGlsxIMsIGPEg2NpIGFsdG1pbnRyZWxlYSBuaWNpIG51IGUgZGUgY2hpcCBzLW8gc2NvyJtpIGxhCmNhcMSDdCBjdSBidWNsdWNhyJl1bCBhY2VzdGEuCgpHZXJpbMSDLCB2xIN6w6JuZCBjxIMgdG/Im2kgw65pIHN0YXUgw65tcG90cml2xIMsIHNlIG3Dom5pZSBhdHVuY2kgyJlpCnVuZGUgbnUgdHLDom50ZciZdGUgbyBicnVtxIMgcGUgcGVyZcibaSwgZGUgdHJlaSBwYWxtZSBkZSBncm9hc8SDLCBkZQphdSDDrm5jZXB1dCBhIGNsxINuyJvEg25pIMiZaSBjZWlsYWzIm2kgZGUgZnJpZywgZGUgc8SDcmVhIGPEg23Eg8iZYSBkZSBwZQpkw6JuyJlpaS4KCuKAlCBOYSEgw65uY2FsdGVhIHYtYW0gZsSDY3V0IMiZaSBldSBwZSBvYnJhei4gRGUtYWN1bSDDrm5haW50ZQpzcHVuZcibaSBjZSB2xIMgcGxhY2UsIGPEgyBudSBtaS1hIGZpIGNpdWTEgywgemlzZSBHZXJpbMSDLCByw6J6w6JuZCBjdQpob2hvdC4gRWksIGFwb2k/IENpY8SDIHPEgyBudSB0ZSBzdHJpY2kgZGUgcsOicyEuLi4gRGUgSGFyYXBBbGIsIG51CnppYy4gRGFyIHZvaSwgbWFuZ29zacibaWxvciDImWkgZmFyZmFzacibaWxvciwgZGUgY8OidGUgb3JpIMOuyJtpIGZpCmRvcm1pdCDDrm4gc3Ryb2ggyJlpIHBlIHTDonJub21hdMSDLCBzxIMgYW0gZXUgYWN1bSBhdMOiyJtpYSBiYW5pIMOubgpwdW5nxIMgbnUgbWktYXIgbWFpIHRyZWJ1aSBhbHTEgyEgT2FyZSBudSBjdW12YSB2LWHIm2kgZmFjZSDImWkgdm9pLApuaciZdGUgZmVjaW9yaSBkZSBnaGluZMSDLCBmxIN0YcibaSDDrm4gdGluZMSDLCBjxIMgc3VudGXIm2kgb2JyYXplCnN1YsibaXJpPwoK4oCUIElhciBjYXXIm2kgc8SDbcOibsibxIMgZGUgdm9yYsSDLCBtxINpIEJ1emlsxIM/IHppc2VyxIMgY2VpbGFsyJtpLiBBbApkcmFjdWx1aSBzxIMgZmlpIGN1IHRvdCBuZWFtdWwgdMSDdSwgw65uIHZlY2lpIHZlY2lsb3IsIGFtaW4hCgrigJQgRGUgYXN0YSDImWkgZXUgbcSDIGFuaW4gyJlpIG3EgyDDrm5jaGluIGxhIGNpbnN0aXRhIGZhyJthIHZvYXN0csSDLApjYSBsYSB1biBjb2RydSB2ZXJkZSwgY3UgdW4gcG9sb2JvYyBkZSB2aW4gyJlpIGN1IHVudWwgZGUgcGVsaW4sCnppc2UgR2VyaWzEgy4gyJhpIGhhaSBkZS1hY3VtIHPEgyBkb3JtaW0sIG1haSBhY3XImWkgc8SDIG5lIHRyZXppbSwKw65udHItdW4gZ8OibmQgc8SDIG5lIHVuaW0sIHBlIEhhcmFwLUFsYiBzxIMtbCBzbHVqaW0gyJlpIHRvdApwcmlldGVuaSBzxIMgZmltOyBjxINjaSBjdSB2cmFqYsSDIMiZaSB1cmdpZSByYWl1bCBuLW8gc8SDLWwgZG9iw6JuZGltLgoKw45uIHNmw6JyyJlpdCwgY2Utb3IgZmkgbWFpIGRvbmTEg25pdCBlaSwgyJlpIGPDonQgb3IgbWFpIGZpIGRvbmTEg25pdCwKY8SDIG51bWFpIGlhY2Egc2UgZmFjZSB6aXXEgyEuLi4gyJhpIGF0dW5jaSwgY3JlZGluY2lvc3VsCsOubXDEg3JhdHVsdWksIGNyZXrDom5kIGPEgyBzLWEgY3VyxIPIm2l0IGRlIG9hc3BlyJtpLCB2aW5lIGN1IGfDom5kdWwKc8SDIG3Eg3R1cmUgc2NydW11bCBhZmFyxIMsIGR1cMSDIHLDom5kdWlhbMSDLiDImGkgY8OibmQgYWp1bmdlIG1haQphcHJvYXBlLCBjZSBzxIMgdmFkxIM/IENhc2EgY2VhIGRlIGFyYW3Egywgw65uZm9jYXTEgyBhyJlhIGRlIHN0cmHImW5pYwpkZSBjdSBzYXLEgywgZXJhIGFjdW0gdG9hdMSDIG51bWFpIHVuIHNsb2kgZGUgZ2hlYcibxIMsIMiZaSBudSBzZSBtYWkKY3Vub8iZdGVhIHBlIGRpbiBhZmFyxIMgbmljaSB1yJnEgywgbmljaSB1yJlvcmksIG5pY2kgZ3JhdGlpLCBuaWNpCm9ibG9hbmUgbGEgZmVyZciZdGksIG5pY2kgbmltaWNhOyBpYXIgw65ubMSDdW50cnUgc2UgYXV6ZWEgdW4KdMSDcsSDYm9pIGdyb3phdjsgdG/Im2kgYm9jxINuZWF1IGxhIHXImcSDIGPDonQgY2UgcHV0ZWF1IMiZaSBzdHJpZ2F1CmPDonQgbGUgbHVhIGd1cmEsIHppY8OibmQ6CgrigJQgTnUgyJl0aW0gY2UgZmVsIGRlIMOubXDEg3JhdCBlIGFjZXN0YSwgZGUgbmUgbGFzxIMgZsSDcsSDIHNjw6JudGVpZQpkZSBmb2Mgw65uIHZhdHLEgywgc8SDIGRlZ2VyxINtIGFpY2VhLi4uIEHImWEgc8SDcsSDY2llIGRlIGxlbW5lIG51IHMtYQp2xIN6dXQgbmljaSBsYSBib3JkZWl1bCBjZWwgbWFpIHPEg3LEg2PEg2Npb3MuIFZhaSBkZSBub2kgyJlpIGRlIG5vaSwKY8SDIG5lLWEgw65uZ2hlyJthdCBsaW1iYSDDrm4gZ3VyxIMgyJlpIG3Eg2R1dmEgw65uIGNpb2xhbmUgZGUgZnJpZyEuLi4KCkNyZWRpbmNpb3N1bCDDrm1wxINyYXR1bHVpLCBhdXppbmQgYWNlc3RlLCBwZSBkZS1vIHBhcnRlIGwtYQpjdXByaW5zIHNwYWltYSwgaWFyxIMgcGUgZGUgYWx0YSBzLWEgw65uZHLEg2NpdCBkZSBjaXVkxIMuIMiYaSBkxIMgZWwKc8SDIGRlc2N1aWUgdciZYSwgbnUgcG9hdGU7IGTEgyBzLW8gZGVzcHJpbmTEgywgbmljaSBhdMOidGEuIFBlIHVybcSDLApjZSBzxIMgZmFjxIM/IEFsZWFyZ8SDIMiZaSB2ZXN0ZciZdGUgw65tcMSDcmF0dWx1aSBkZXNwcmUgY2VsZQrDrm50w6JtcGxhdGUuIEF0dW5jaSB2aW5lIMiZaSDDrm1wxINyYXR1bCBjdSBvIG11bMibaW1lIGRlIG9hbWVuaSwgY3UKY2F6bWFsZSBhc2N1yJtpdGUgyJlpIGN1IGNhemFuZSBwbGluZSBjdSB1bmNyb3A7IMiZaSB1bmlpIHTEg2lhdQpnaGVhyJthIGN1IGNhem1hbGVsZSwgYWzIm2lpIGFydW5jYXUgY3UgdW5jcm9wIHBlIGxhIMibw6LIm8OibmlsZSB1yJlpaQrImWkgw65uIGJvcnRhIGNoZWlpIMiZaSBkdXDEgyBtdWx0xIMgdHJ1ZMSDLCBjdSBtYXJlIGNlIGjEg2zEg2R1aWVzYyBkZQpkZXNjaGlkIHXImWEgyJlpIHNjb3QgcGUgb2FzcGXIm2kgYWZhcsSDLiDImGkgY8OibmQgY29sbywgY2Ugc8SDIHZlemk/ClRvyJtpIGVyYXUgY3UgcMSDcnVsLCBjdSBiYXJiYSDImWkgbXVzdGXIm2lsZSBwbGluZSBkZSBwcm9tb3JvYWPEgywKZGUgbnUtaSBjdW5vyJl0ZWFpLCBvYW1lbmkgc3VudCwgZHJhY2kgc3VudCwgb3JpIGFsdGUgYXLEg3TEg3JpLiDImGkKYciZYSB0cmVtdXJhdSBkZSB0YXJlLCBkZSBsZSBkw6JyZMOiaWF1IGRpbsibaWkgw65uIGd1csSDLiBJYXLEgyBtYWkKYWxlcyBwZSBHZXJpbMSDIHBhcmPEgy1sIHpnaGlodWlhdSB0b8ibaSBkcmFjaWk7IHBvem5lIGbEg2NlYSBjdQpidXppyJlvYXJlbGUgc2FsZSwgw65uY8OidCBzLWEgw65uZ3Jveml0IMiZaSDDrm1wxINyYXR1bCBSb8iZIGPDom5kIGwtYQp2xIN6dXQgZsSDY8OibmQgYciZYSBkZSBmcnVtdciZZWwuCgpBdHVuY2kgSGFyYXAtQWxiLCBpZciZaW5kIGRpbnRyZSBkw6JuyJlpaSwgc2Ugw65uZsSDyJtpyJlhesSDIGN1dmlpbmNpb3MKw65uYWludGVhIMOubXDEg3JhdHVsdWksIHppY8OibmQ6CgrigJQgUHJlYSDDrm7Eg2zIm2F0ZSDDrm1wxINyYXRlISBMdW1pbmFyZWEtc2EsIG5lcG90dWwgcHJlYQpwdXRlcm5pY3VsdWkgVmVyZGUtw65tcMSDcmF0LCBtLWEgZmkgYciZdGVwdMOibmQgY3UgbmVyxINiZGFyZS4KRGUtYWN1bSDDrm5haW50ZSwgY3JlZCBjxIMgbWktyJtpIGRhIGZhdGEsIGNhIHPEgyB2xIMgbMSDc8SDbSDDrm4gcGFjZQrImWkgc8SDIG5lIGR1Y2VtIMOubiB0cmVhYmEgbm9hc3RyxIMuCgrigJQgQmluZSwgdm9pbmljZSwgemlzZSDDrm1wxINyYXR1bCwgdWl0w6JuZHUtc2UgbGEgZMOibsiZaWkgY2FtIGFjcnUKb2FyZWN1bTsgYSB2ZW5pIGVhIMiZaSB2cmVtZWEgYWNlZWEuLi4gRGFyIGFjdW0sIGRlb2RhdMSDLCBpYSBzxIMKb3NwxIN0YcibaSBjZXZhLCBjYSBzxIMgbnUgemljZcibaSBjxIMgYcibaSBpZciZaXQgZGluIGNhc2EgbWVhIGNhIGRlCmxhIG8gY2FzxIMgcHVzdGllLgoK4oCUIFBhcmPEgyB2LWEgaWXImWl0IHVuIHNmw6JudCBkaW4gZ3VyxIMsIGx1bWluYXRlIMOubXDEg3JhdGUsIHppc2UKYXR1bmNpIEZsxINtw6JuemlsxIMsIGPEgyBuZSBnaGlvcsSDaWVzYyBtYcibZWxlIGRlIGZvYW1lLgoK4oCUIFBvYXRlIG5pLcibaSBkYSDImWkgY2V2YSBkZSB1ZGVhbMSDLCBtxINyaWEtdGEsIHppc2UgU2V0aWzEgywgY8SDIG5lCnNmw6Jyw6JpZSBnw6J0bGVqdWwgZGUgc2V0ZS4KCuKAlCBJYSBsxINzYcibaSwgbcSDaSwgemlzZSBPY2hpbMSDLCBjbGlwb2NpbmQgbWVyZXUgZGluIGdlbmUsIGPEgwpsdW1pbmFyZWEtc2EgyJl0aWUgY2UgbmUgdHJlYnVpZS4KCuKAlCBByJlhIGNyZWQgyJlpIGV1LCB6aXNlIFDEg3PEg3JpbMSDLCBkb2FyLCBkZS1hIHB1dGVyZS1hIGhpLCBhbQpjxIN6dXQgbGEgY2FzxIMgw65tcMSDcsSDdGVzY8SDLCBzxIMgbnUgdsSDIHRlbWXIm2ksIGPEgyBhcmUgw65uxINsyJtpbWVhLXNhCmF0w6J0YSBwdXJ0YXJlIGRlIGdyaWrEgywgY2Egc8SDIG51IGZpbSBjaGludWnIm2kgY3UgZnJpZywgY3UgZm9hbWUKyJlpIGN1IHNldGUuCgrigJQgTWFpIHLEg23Dom5lIMOubmRvaWFsxIMgZGVzcHJlIGFzdGEsIHppc2UgR2VyaWzEgywgdHJlbXVyw6JuZApjdW1wbGl0LiBEYXIgbi1hdmXIm2kgyJl0aWluyJvEgyBjxIMgw65uxINsyJtpbWVhLXNhIGVzdGUgdGF0YQpmbMSDbcOibnppbG9yIMiZaSBhbCDDrm5zZXRhyJtpbG9yPyDImGkgdG9jbWFpIGRlIGFzdGEgbcSDIGJ1Y3VyIMiZaSBldSwKY8SDIGRlLWFiaWEgbS1vaSBtYWkgw65uY8SDbHppIG9sZWFjxIMgYsOibmQgc8OibmdlbGUgRG9tbnVsdWkuCgrigJQgRWksIHRhY8SDLXbEgyBndXJhIGRlLWFjdW0hIHppc2UgRmzEg23Dom56aWzEgy4gRGVzdHVsIGUgbyBtxINjaXVjxIMKbGEgdW4gY2FyIGRlIG9hbGUuIE51IHRvdCBjZXTEg3JhyJtpIHBlIG3Eg3JpYS1zYSwgY8SDIG9tIGUKZHVtbmVhbHVpLiBQZW50cnUgbmnImXRlIHPEg3LEg2N1yJtpIGNhIG5vaSBlIGdyZXUgZGUgZsSDY3V0IHRyZWJpIGRlCmFjZXN0ZWEuIERhciBsYSBvIMOubXDEg3LEg8ibaWUsIGNhIGN1bSB0ZS1hciBwaciZY2EgdW4gcHVyaWNlOyBudSBzZQptYWkgYmFnxIMgw65uIHNlYW3Egy4KCuKAlCBEaW4gcGFydGVhIG1lYSwgbcOibmNhcmVhLWkgbnVtYWkgbyB6xINiYXbEgzsgYsSDdXR1cmljYSBtYWkgZXN0ZQpjZSBlc3RlLCB6aXNlIFNldGlsxIM7IMiZaSBhyJkgcnVnYSBwZSBsdW1pbmFyZWEtc2EgY8SDLCBkYWPEgyBhcmUgZGUKZ8OibmQgYSBuZSBvc3DEg3RhLCBkdXDEgyBjdW0gcy1hIGhvdMSDcsOidCwgYXBvaSBzxIMgbmUgw65uZGVzZWFzY8SDCm1haSBtdWx0IGN1IHVkZWFsYSwgcGVudHJ1IGPEgyBhY29sbyBzdMSDIHRvYXTEgyBwdXRlcmVhIMiZaQrDrm5kcsSDem5lYWxhLiBWb3JiYSBjZWVhOiAiRMSDLWkgY3UgY2luc3RlYSwgc8SDIHBpYXLEgyBydciZaW5lYSIuCkRhciBtaSBzZSBwYXJlIGPEgyBuZS1hbSBwcmVhIMOubnRpbnMgY3Ugdm9yYmEsIMiZaSBsdW1pbmFyZWEtc2EgbnUKyJl0aWUgY3VtIHPEgyBuZSBtYWkgaW50cmUgw65uIHZvaWUuCgrigJQgQWN1bSwgZGUgbmUtYXIgZGEgb2RhdMSDIGNlIG5lLWFyIGRhLCB6aXNlIEZsxINtw6JuemlsxIMsIGPEg2NpIG3Egwpyb2FkZSBpbmltYSBkZSBmb2FtZSBjZS1taSBlIQoK4oCUIElhIG1haSDDrm5nxINkdWnIm2kgb2xlYWPEgywgbcSDaSwgemlzZSBPY2hpbMSDLCBjxIMgZG9hciBudSB2LWF1IG1hcwrImW9hcmVjaWkgw65uIHDDom50ZWNlLiBBY3XImWkgcy1vciBhZHVjZSDImWkgYnVjYXRlbGUsIMiZaSB2aW51bCwgyJlpCm51bWFpIGRlLWHIm2kgYXZlYSBww6JudGVjZSB1bmRlIHPEgyBsZSBwdW5lyJtpLgoK4oCUIMOObmRhdMSDIHZpIHMtYSBhZHVjZSDImWkgZGVtw6JuY2FyZSwgyJlpIGLEg3V0dXLEgywgemlzZSDDrm1wxINyYXR1bCwKbnVtYWkgZGUtyJtpIHB1dGVhIGRvdmVkaSBjw6J0IHbEgyB2b2kgZGEgZXU7IGPEgyBkZSBudS3Im2kgZmkKbcOibmPEg3RvcmkgyJlpIGLEg3V0b3JpIGJ1bmksIHYtYcibaSBnxINzaXQgYmVsZWF1YSBjdSBtaW5lLCBudSB2xIMKcGFyxIMgbHVjcnUgZGUgyJlhZ8SDIQoK4oCUIERlIG5lLWFyIGRhIER1bW5lemV1IHRvdCBhdMOidGEgc3VwxINyYXJlLCBsdW1pbmFyZWEgdm9hc3RyxIMsCnppc2UgYXR1bmNpIEZsxINtw6JuemlsxIMsIMibaW7Dom5kdS1zZSBjdSBtw6JpbmlsZSBkZSBww6JudGVjZS4KCuKAlCDImGkgw65uxINsyJtpbWVpLXZvYXN0cmUgZ8OibmQgYnVuIMiZaSBtw6JuxIMgc2xvYm9kxIMsIGNhIHPEgyBuZSBkYcibaQpjw6J0IHNlIHBvYXRlIG1haSBtdWx0xIMgbcOibmNhcmUgyJlpIGLEg3V0dXJpY8SDLCB6aXNlIFNldGlsxIMsIGPEg3J1aWEKw65pIGzEg3NhIGd1cmEgYXDEgywgY8SDIGRpbiBtw6JuY2FyZSDImWkgYsSDdXR1csSDLCBsYXMnIGRhY8SDIG5lLWEKw65udHJlY2UgY2luZXZhOyBudW1haSBsYSB0cmVhYsSDIG51IG5lIHByZWEgcHVuZW0gY3UgdG/Im2kgbmVidW5paS4KCsOObXDEg3JhdHVsIHTEg2NlYSBsYSB0b2F0ZSBhY2VzdGUsIMOuaSBhc2N1bHRhIGN1IGRlemd1c3QgyJlpIG51bWFpCsOubmdoacibZWEgbm9kdXJpLiBEYXIsIMOubiBnw6JuZHVsIHPEg3U6ICJCaW5lLCBiaW5lISBDZXJjYcibaSB2b2kKbWFyZWEgY3UgZGVnZXR1bCwgZGFyIGlhIHPEgyB2ZWRlbSBjdW0gaS3Im2kgZGEgZGUgZnVuZD8gVsSDIHZvcgppZciZaSBlbGUgdG9hdGUgYWNlc3RlIHBlIG5hcyIuIER1cMSDIGFjZWVhIMOuaSBsYXPEgyDImWkgc2UgZHVjZSDDrm4KY2FzxIMuCgrDjm4gc2bDonLImWl0LCBudSB0cmVjZSBtdWx0IGxhIG1pamxvYywgyJlpIG51bWFpIGlhY2EgbGkgc2UgYWR1YyAxMgpoYXJhYmFsZSBjdSBww6JpbmUsIDEyIGlhbG92acibZSBmcmlwdGUgyJlpIDEyIGJ1yJtpIHBsaW5lIGN1IHZpbiBkZQpjZWwgaHLEg25pdCwgZGUgY2FyZSwgY3VtIGJlaSBjw6J0ZSBvbGVhY8SDLCBwZSBsb2MgyJtpIHNlIHRhaWUKcGljaW9hcmVsZSwgw67Im2kgc2NsaXBlc2Mgb2NoaWkgw65uIGNhcCwgyJtpIHNlIMOubmNsZWllIGxpbWJhIMOubgpndXLEgyDImWkgw65uY2VwaSBhIGJvbGJvcm9zaSB0dXJjZciZdGUsIGbEg3LEgyBzxIMgyJl0aWkgYmVjaGl1IG3Eg2Nhci4KRmzEg23Dom56aWzEgyDImWkgU2V0aWzEgyB6aXNlcsSDIGF0dW5jaSBjZWxvcmxhbMibaToKCuKAlCBNxINpLCBtw6JuY2HIm2kgdm9pIMOubnTDomkgyJlpIGJlyJtpIGPDonQgdmXIm2kgcHV0ZWEsIGRhciBudSBjdW12YSBzxIMKdsSDIHB1bmXIm2kgbWludGVhIGN1IHRvYXTEgyBtw6JuY2FyZWEgyJlpIGLEg3V0dXJhLCBjLWFwb2kgYWwgdm9zdHJ1CmUgZHJhY3VsIQoKQXR1bmNpIEhhcmFwLUFsYiwgR2VyaWzEgywgT2NoaWzEgyDImWkgUMSDc8SDcmktTMSDyJtpLUx1bmdpbMSDIHNlIHB1bgplaSBkZSBvc3DEg3RlYXrEgyDImWkgYmVhdSBjw6J0IGxlIHRyZWJ1aWUuIERhciBjZSBhcmUgYSBmYWNlPyBwYXJjxIMKbmljaSBudSBzZSBjdW5vyJl0ZWEgZGUgdW5kZSBhdSBtw6JuY2F0IMiZaSBhdSBixIN1dDsgY8SDIGRvYXIKbcOibmNhcmUgyJlpIGLEg3V0dXLEgyBlcmEgYWNvbG8sIG51IMiZYWfEgzsgZMSDLCBjYSBsYSBvIMOubXDEg3LEg8ibaWUuCgrigJQgSGFpLCBpYSBkYcibaS12xIMgZGVvcGFydGUsIG3Eg2kgcMSDY8SDdG/ImWlsb3IsIGPEgyBudW1haSBhyJtpCmNyw6JtcG/Im2l0IG3Dom5jYXJlYSwgemlzZXLEgyBhdHVuY2kgRmzEg23Dom56aWzEgyDImWkgU2V0aWzEgywgY2FyZQphyJl0ZXB0YXUgY3UgbmVhc3TDom1wxINyLCBmaWluZCBydXDIm2kgw65uIGNvyJkgZGUgZm9hbWUgyJlpIGRlIHNldGUuCgrImGkgYXR1bmNpIHVuZGUgbnUgw65uY2VwZSBGbMSDbcOibnppbMSDIGEgY8SDcsSDYsSDbmkgZGVvZGF0xIMgw65uIGd1csSDCmPDonRlIG8gaGFyYWJhIGRlIHDDomluZSDImWkgY8OidGUgbyBpYWxvdmnIm8SDIMOubnRyZWFnxIMsIMiZaSByZXBlZGUgbWkKyJtpIGxlLWEgw65uZnVsZWNhdCDImWkgbGUtYSBmb3JmZWNhdCwgZGUgcGFyY8SDIG4tYXUgbWFpIGZvc3QuIElhcsSDClNldGlsxIMsIGTDom5kIGZ1bmR1cmlsZSBhZmFyxIMgbGEgY8OidGUgbyBidXRlLCBob3JwISDIm2ktbyBzdWdlYQpkaW50ci1vIHNpbmd1csSDIHNvcmJpdHVyxIM7IMiZaSwgcmVwZWRlLXJlcGVkZSwgbWkgyJtpIGxlLWEgc3VwdCBwZQp0b2F0ZSBkZS1hIHLDom5kdWwsIGRlIG4tYSBtYWkgcsSDbWFzIG5pY2kgbcSDY2FyIHBpY8SDdHVyxIMgZGUgdmluCnBlIGRvYWdlLgoKRHVwxIMgYWNlZWEsIEZsxINtw6JuemlsxIMgYSDDrm5jZXB1dCBhIHN0cmlnYSDDrm4gZ3VyYSBtYXJlIGPEgyBtb2FyZQpkZSBmb2FtZSDImWkgYSB6dsOicmxpIGN1IGNpb2xhbmUgw65uIG9hbWVuaWkgw65tcMSDcsSDdGXImXRpLCBjYXJlCmVyYXUgYWNvbG8gZGUgZmHIm8SDLgoKSWFyxIMgU2V0aWzEgyBzdHJpZ2EgyJlpIGVsIGPDonQgY2UgcHV0ZWEgY8SDIGNyYXDEgyBkZSBzZXRlIMiZaQp6dsOicmxlYSBjdSBkb2FnZSDImWkgY3UgZnVuZHVyaSBkZSBwb2xvYm9jIMOubiB0b2F0ZSBwxINyyJtpbGUsIGNhCnVuIG5lYnVuLgoKw45tcMSDcmF0dWwgYXR1bmNpLCBhdXppbmQgdnVpZXQgdG9jbWFpIGRpbiBjYXPEgywgaWVzZSBhZmFyxIMgyJlpLApjw6JuZCB2ZWRlIGFjZXN0ZSwgw67ImWkgcHVuZSBtw6JpbmlsZSDDrm4gY2FwIGRlIG5lY2F6LgoK4oCUIE3Eg2ksIG3Eg2ksIG3Eg2khIEFjZciZdGlhLXMgY3VyYXQgc8SDcsSDY2llIHRyaW1pc8SDIGRlIGxhIER1bW5lemV1CnBlIGNhcHUgbWV1LCB6aXNlIMOubXDEg3JhdHVsIMOubiBzaW5lLCBwbGluIGRlIGFtxINyxINjaXVuZS4gTWkgc2UKcGFyZSBjxIMsIGlhIGFjdW0sIG1pLWFtIGRhdCDImWkgZXUgcGVzdGUgb2FtZW5pLgoKSGFyYXAtQWxiIGllc2UgYXR1bmNpIGRpbiBtaWpsb2N1bCBjZWxvcmxhbMibaSDImWkgaWFyIHNlCsOubmbEg8ibaciZYXrEgyDDrm5haW50ZWEgw65tcMSDcmF0dWx1aSwgemljw6JuZDoKCuKAlCBTxIMgdHLEg2nIm2ksIGx1bWluYXRlIMOubXDEg3JhdGUhIERlLWFjdW0gY3JlZCBjxIMgbWktyJtpIGRhIGZhdGEsCmNhIHPEgyB2xIMgbMSDc8SDbSDDrm4gcGFjZSDImWkgc8SDIG5lIGR1Y2VtIMOubiB0cmVhYmEgbm9hc3RyxIMsIGPEg2NpCm5lcG90dWwgw65tcMSDcmF0dWx1aSBWZXJkZSBuZS1hIGZpIGHImXRlcHTDom5kIGN1IG5lcsSDYmRhcmUuCgrigJQgQSB2ZW5pIGVhIMiZaSB2cmVtZWEgYWNlZWEsIHZvaW5pY2UsIHppc2Ugw65tcMSDcmF0dWwgY2FtIGN1Cmp1bcSDdGF0ZSBkZSBndXLEgy4gRGFyIGlhIG1haSBhdmXIm2kgcHXIm2luxIMgcsSDYmRhcmUsIGPEg2NpIGZhdGEKbnUtaSBkZSBjZWxlIGRlIHBlIGRydW11cmksIHMtbyBsdWHIm2kgbnVtYWkgYciZYSwgY3VtIHMtYXIKw65udMOibXBsYS4gSWEgc8SDIG1haSB2ZWRlbSBjYW0gY3VtIGFyIHZlbmkgdHJlYnXImW9hcmEgYXN0YS4gTnUtaQp2b3JixIMsIGRlIG3Dom5jYXQgYcibaSBtw6JuY2F0IMiZaSBkZSBixIN1dCBhyJtpIGLEg3V0IGZpZWNhcmUgY8OidArImWFwdGVzcHJlemVjZS4gw45uc8SDIGRlIGFjdW0gw65uYWludGUgbWFpIGF2ZcibaSDImWkgY2V2YSB0cmVhYsSDIGRlCmbEg2N1dDogaWFjYSwgdsSDIGRhdSBvIG1pZXLIm8SDIGRlIHPEg23Dom7Im8SDIGRlIG1hYywgYW1lc3RlY2F0xIMgY3UKdW5hIGRlIG5pc2lwIG3Eg3J1bsibZWw7IMiZaSwgcMOibsSDIG3DomluZSBkaW1pbmVhyJvEgywgc8SDLW1pIGFsZWdlyJtpCm1hY3VsIGRlLW8gcGFydGUsIGZpciBkZSBmaXIsIMiZaSBuaXNpcHVsIGRlIGFsdMSDIHBhcnRlOyBudSBjdW12YQpzxIMgZ8SDc2VzYyB2cmV1biBmaXIgZGUgbWFjIHByaW50cmUgbmlzaXAgc2F1IHZyZXVudWwgZGUgbmlzaXAKcHJpbnRyZSBtYWMsIGPEgyBhdHVuY2kgYW0gc3RyaWNhdCBwYWNlYS4gyJhpIGRhY8SDLcibaSBwdXRlYSBzY29hdGUKbGEgY2FwxIN0IHRyZWJ1yJlvYXJhIGFzdGEsIGF0dW5jaSBvaSBtYWkgdmVkZWEgZXUuLi4gSWFyxIMgZGUgbnUsCnZlyJtpIHBsxIN0aSBjdSBjYXB1bCBvYnLEg3puaWNpYSBjZSBhyJtpIMOubnRyZWJ1aW7Im2F0IGZhyJvEgyBjdSBtaW5lLApjYSBzxIMgcHJpbmTEgyDImWkgYWzIm2lpIGxhIG1pbnRlIHbEg3rDom5kIGRlIHBhdGltYSB2b2FzdHLEgy4KCsiYaSBhcG9pLCBkdWPDom5kdS1zZSDDrm1wxINyYXR1bCDDrm4gdHJlYWJhIGx1aSwgaS1hIGzEg3NhdCBzxIMtyJlpCmJhdMSDIGNhcHVsIGN1bSB2b3IgyJl0aS4KCkF0dW5jaSBIYXJhcC1BbGIgyJlpIGN1IGFpIHPEg2kgYXUgw65uY2VwdXQgYSBzdHLDom5nZSBkaW4gdW1lcmUsCm5lcHJpY2Vww6JuZHUtc2UgY2UtaSBkZSBmxINjdXQuCgrigJQgRWksIGFwb2kgyJlhZ8SDIHbEgyBwYXJlPyBDdSBjaGnIm2lidciZdXJpIGRlIGFjZXN0ZSBzxIMgbmUgesSDYm92aW0Kbm9pPyBQw6JjbGnImWl0IG9tIGUgw65tcMSDcmF0dWwgUm/ImSEgc2UgdmVkZSBlbCwgemlzZSBhdHVuY2kKT2NoaWzEgy4gRXUsIG51LWkgdm9yYsSDLCBtxINjYXIgY8SDIGUgYciZYSBkZSDDrm50dW5lcmljLCBkZW9zZWJlc2MKdGFyZSBiaW5lIGZpcmVsZSBkZSBtYWMgZGluIGNlbGUgZGUgbmlzaXAuIERhciBudW1haSBpdcibZWFsxIMgyJlpCmd1csSDIGRlIGZ1cm5pY8SDIGFyIHRyZWJ1aSBzxIMgYWliaSBjYSBzxIMgcG/Im2kgYXB1Y2EsIGFsZWdlIMiZaQpjdWxlZ2UgbmnImXRlIGZsZWN1yJl0ZcibZSBjYSBhY2VzdGUsIMOubiBhyJlhIHNjdXJ0xIMgdnJlbWUuIEJpbmUtYQp6aXMgY2luZS1hIHppcyBjYSBzxIMgdGUgZmVyZciZdGkgZGUgb211bCByb8iZLCBjxINjaSBlIGxpyJl0YWkKZHJhY3VsIMOubiBwaWNpb2FyZSwgYWN1bSB2xINkIGV1LgoKSGFyYXAtQWxiIMOuyJlpIGFkdWNlIGF0dW5jaSBhbWludGUgZGUgYXJpcGEgY2VhIGRlIGZ1cm5pY8SDLCBvCnNjb2F0ZSBkZSB1bmRlLW8gYXZlYSBzdHLDom5zxIMsIGFwb2kgc2NhcMSDcsSDIMiZaS1pIGTEgyBmb2MgY3UgbwpidWPEg8ibaWPEgyBkZSBpYXNjxIMgYXByaW5zxIMuIMiYaSBhdHVuY2ksIG1pbnVuZSBtYXJlISBOdW1haSBpYWNhIGF1CsiZaSDDrm5jZXB1dCBhIGN1cmdlIGZ1cm5pY2lsZSBjdSBkcm9haWEsIGPDonTEgyBwdWxiZXJlIMiZaSBzcHV6xIMsCmPDonTEgyBmcnVuesSDIMiZaSBpYXJixIM7IHVuZWxlIHBlIHN1YiBwxINtw6JudCwgYWx0ZWxlIHBlIGRlYXN1cHJhCnDEg23Dom50dWx1aSDImWkgYWx0ZWxlIMOubiB6Ym9yLCBkZSBudSBzZSBtYWkgY3VybWF1IHZlbmluZC4gyJhpLArDrm50ci11biBidWMsIGF1IMiZaSBhbGVzIG5pc2lwdWwgZGUtbyBwYXJ0ZSDImWkgbWFjdWwgZGUgYWx0xIMKcGFydGU7IHPEgyBmaSBkYXQgbWlpIGRlIG1paSBkZSBsZWksIG51IGfEg3NlYWkgZmlyIGRlIG1hYyBwcmludHJlCm5pc2lwIHNhdSBmaXIgZGUgbmlzaXAgcHJpbnRyZSBtYWMuIMiYaSBhcG9pLCDDrm4gem9yaSBkZSB6aXXEgywKY8OibmQgZSBzb21udWwgbWFpIGR1bGNlLCBkZSBkb2FybWUgyJlpIHDEg23Dom50dWwgc3ViIG9tLCBvIG11bMibaW1lCmRlIGZ1cm5pY2kgZGUgY2VsZSBtxINydW7Im2VsZSBhdSBzdHLEg2LEg3R1dCDDrm5sxIN1bnRydWwgcGFsYXR1bHVpCsiZaSBhdSDDrm5jZXB1dCBhIHBpyJljYSBkaW4gc29tbiBwZSDDrm1wxINyYXR1bCwgZGUtbCBmcmlnZWF1LCBudQphbHTEg2NldmEuIMiYaSB2xIN6w6JuZHUtc2UgZWwgY3VwcmlucyBkZSBhyJlhIHVzdHVyaW1lLCBzLWEgc2N1bGF0CmN1IG5lcHVzIMOubiBtYXPEgywgY8SDY2kgbnUgbWFpIGVyYSBkZSBjaGlwIHPEgyBkb2FybcSDLCBjdW0gZG9ybWVhCmFsdGUgZMSDyJtpLCBww6JuxIMgcGUgbGEgYW1pYXrEgywgbmVzdXDEg3JhdCBkZSBuaW1lbmUuIMiYaSwgY3VtIHMtYQpzY3VsYXQsIGEgyJlpIMOubmNlcHV0IGEgY8SDdXRhIGN1IGRlLWFtxINudW50dWwgcHJpbiBhyJl0ZXJudXQsIHPEgwp2YWTEgyBjZSBwb2F0ZSBzxIMgZmllLiBEYXIgYSBnxINzaXQgbmltaWNhIHRvYXTEgywgY8SDY2kgZnVybmljaWxlCnBhcmPEgyBpbnRyYXLEgyDDrm4gcMSDbcOibnQ7IHMtYXUgbWlzdHVpdCwgZGUgbnUgc2UgyJl0aWUgY2Ugcy1hdSBtYWkKZsSDY3V0LgoK4oCUIEEgZHJhY3VsdWkgdHJlYWLEgyEgVWl0ZSBjZSBibMOibmTEgyBtaS1hIGllyJlpdCBwZSB0cnVwLiBTxIMgZmkKZm9zdCBuaW1pY2EuLi4gcGFyY8SDIG51LW1pIHZpbmUgYSBjcmVkZS4gw45uc8SDIG1haSDImXRpdSBldT8uLi4KT3JpIHDEg3JlcmVhIG3EgyDDrm7ImWFsxIMsIG9yaSBzLWEgc3RyaWNhdCB2cmVtZWEsIHppc2Ugw65tcMSDcmF0dWw7CmRpbiBkb3XEgywgdW5hIHRyZWJ1aWUgc8SDIGZpZSBudW1haWRlY8OidC4gRGFyLCBww6JuxIMgdW5hLWFsdGEsIGlhCnPEgyBtxIMgZHVjIHPEgyB2xINkOiBhbGVzLWF1IG5pc2lwdWwgZGUgbWFjIGFjZWkgbmVzcMSDbGHIm2ksIGNhcmUtbWkKcm9kIHVyZWNoaWxlIHPEgyBsZSBkYXUgZmF0YT8KCsiYaSBjw6JuZCBzZSBkdWNlIMOubXDEg3JhdHVsIMiZaSB2ZWRlIGN1bSBzZSDDrm5kZXBsaW5pc2UgZGUgYmluZQpwb3J1bmNhIGx1aSwgc2UgdW1wbGUgZGUgYnVjdXJpZS4uLiDImGksIG5lbWFpYXbDom5kIGNlIHByaWNpbsSDIHPEgwpsZSBjYXV0ZSwgcsSDbcOibmUgcGUgZ8OibmR1cmkuCgpBdHVuY2kgSGFyYXAtQWxiIGlhciBpZXNlIGRpbiBtaWpsb2N1bCBjZWxvcmxhbMibaSDImWkgc2UKw65uZsSDyJtpyJlhesSDIMOubXDEg3JhdHVsdWksIHppY8OibmQ6CgrigJQgUHJlYcOubsSDbMibYXRlIMOubXDEg3JhdGUsIGRlLWFjdW0gY3JlZCBjxIMgbWktyJtpIGRhIGZhdGEsIGNhIHPEgyB2xIMKbMSDc8SDbSDDrm4gcGFjZSDImWkgc8SDIG5lIGR1Y2VtIGRlIHVuZGUgYW0gdmVuaXQuCgrigJQgQSB2ZW5pIGVhIMiZaSB2cmVtZWEgYWNlZWEsIHZvaW5pY2UsIHppc2Ugw65tcMSDcmF0dWwsIMOubmfDom7Dom5kCnZvcmJhIHByaW50cmUgZGluyJtpLCBkYXIgcMOibsSDIGF0dW5jaSBtYWkgZXN0ZSDDrm5jxIMgdHJlYWLEgzsgaWFjYQpjZSBhdmXIm2kgZGUgZsSDY3V0OiBmYXRhIG1lYSBhcmUgc8SDIHNlIGN1bGNlIGRlc2FyxIMgdW5kZSBzZSBjdWxjxIMKdG90ZGVhdW5hLCBpYXLEgyB2b2kgc8SDIG1pLW8gc3RyxINqdWnIm2kgdG9hdMSDIG5vYXB0ZWEuIMiYaSBkYWPEgwptw6JpbmUgZGltaW5lYcibxIMgcy1hIGFmbGEgdG90IGNvbG8sIGF0dW5jaSBwb2F0ZSBzxIMgyJtpLW8gZGF1OwppYXLEgyBkZSBudSwgY2UtaSBwxIPIm2ksIGN1IG5pbWUgbnUtaSDDrm1wxINyyJtpLi4uIMOObsibZWxlcy1hyJtpPwoK4oCUIFPEgyB0csSDacibaSwgbHVtaW5hdGUgw65tcMSDcmF0ZSwgcsSDc3B1bnNlIEhhcmFwLUFsYiwgbnVtYWkgZGUKbi1hciBmaSBtYWkgbXVsdMSDIMOubnTDonJ6aWVyZSwgY8SDY2kgc3TEg3DDom51bCBtxIMgYciZdGVhcHTEgyDImWkKZ3JvemF2xIMgdXJnaWUgcG9hdGUgc8SDIGNhZMSDIHBlIGNhcHVsIG1ldSBkaW4gYXN0xIMgcHJpY2luxIMuCgrigJQgU3TEg3DDom51LXTEg3UsIGNhIHN0xINww6JudS10xIN1OyBjZSDIm2ktYSBmYWNlIGVsLCBhc3RhLWkgZGVvc2ViaXQKZGUgYmHImWPEgywgemlzZSDDrm1wxINyYXR1bCwgdWl0w6JuZHUtc2UgY2hpb3LDosiZIGxhIGTDom7ImWlpLiBJZWllLXbEgwptYWNhciDImWkgcGllbGVhIGRlIHBlIGNhcCwgY2UgYW0gZXUgZGUtYWNvbG8/IMOObnPEgyBwZSBtaW5lCmPEg3V0YcibaSBzxIMgbnUgbcSDIHNtaW50acibaTogZmF0YSDImWkgb2NoaWkgZGluIGNhcCwgY8SDY2kgYXTDonRhCnZpLWkgbGVhY3VsOyB2LWHIm2kgZHVzIHBlIGNvcGNlLCBjdSB0b2F0xIMgyJltZWNoZXJpYSB2b2FzdHLEgy4KCkR1cMSDIGFjZWFzdGEsIMOubXDEg3JhdHVsIMOuaSBsYXPEgyDDrm5jdXJjYcibaSDImWkgc2UgZHVjZSBsYSBhbGUgc2FsZS4KCuKAlCBBaWNpIMOubmPEgyB0cmVidWllIHPEgyBmaWUgdW4gZHJhYyBsYSBtaWpsb2MsIHppc2UgR2VyaWzEgywKY2zEg3RpbsOibmQgZGluIGNhcC4KCuKAlCBCYSDDrm5jxIMgZGUgY2VpIGLEg3Ryw6JuaTsgc8SDZ2VhdGEgZGUgbm9hcHRlIMiZaSBkcmFjdWwgY2VsIGRlCmFtaWF6xIN6aSwgcsSDc3B1bnNlIE9jaGlsxIMuIERhciBudSDImWktYSBqdWNhIGVsIG1lbmRyZWxlCsOubmRlbHVuZywgYciZYSBjcmVkIGV1LgoKw45uIHNmw6JyyJlpdCwgZHVyYWktdnVyYWksIHNlYXJhIHZpbmUsIGZhdGEgc2UgY3VsY8SDIMiZaSBIYXJhcEFsYgpzZSBwdW5lIGRlIHN0cmFqxIMgY2hpYXIgbGEgdciZYSBlaSwgaWFyxIMgY2VpbGFsyJtpIHNlIMOubsiZaXLEgyB0b3QKY8OidGUgdW51bC11bnVsIHDDom7EgyBsYSBwb2FydMSDLCBkdXDEgyBwb3J1bmPEgy4KCsiYaSwgY8OibmQgcGUgYXByb2FwZSBkZSBtaWV6dWwgbm9wyJtpaSwgZmF0YSDDrm1wxINyYXR1bHVpIHNlCnByZWZhY2Ugw65udHItbyBwxINzxINyaWPEgyDImWkgemJvYXLEgyBuZXbEg3p1dMSDIHByaW50cmUgY2luY2kgc3RyxINqaS4KRGFyIGPDom5kIGFqdW5nZSBwZSBsYSBzdHLEg2plcnVsIE9jaGlsxIMsIGVsLCBzaXJlaWNhbnVsLCBtaSDIm2ktbwp2ZWRlIMiZaSBkxIMgZGUgyJl0aXJlIGx1aSBQxINzxINyaWzEgywgemljw6JuZDoKCuKAlCBNxINpLCBmZXRpyJlvYXJhIMOubXDEg3JhdHVsdWkgbmUtYSB0cmFzIGJ1dHVjdWwuIEEgZHJhY3VsdWkKemfDonRpZSBkZSBmYXTEgyEgcy1hIHByZWbEg2N1dCDDrm4gcMSDc8SDcmljxIMsIGEgemJ1cmF0IGNhIHPEg2dlYXRhIHBlCmzDom5nxIMgY2VpbGFsyJtpIMiZaSBlaSBoYWJhciBuLWF1IGRlc3ByZSBhc3RhLiBFaSwgYXBvaT8gTGFzxIMtdGUKw65uIHNlYW1hIGxvciBkYWPEgyB2cmVpIHPEgyByxINtw6JpIGbEg3InIGRlIGNhcC4gRGUtYWN1bSwgbnVtYWkgbm9pCm8gcHV0ZW0gZ8SDc2kgyJlpIGFkdWNlIGxhIHVybWEgZWkuIFRhY2kgbW9sY3VtIMiZaSBoYWlkZW0gZHVwxIMKZMOibnNhLiBFdSDIm2ktb2kgYXLEg3RhLW8gcGUgdW5kZSBzZSBhc2N1bmRlLCBpYXLEgyB0dSBzxIMgbWktbwpwcmluemkgY3VtIMibaS1pIG1lyJl0ZciZdWd1bCDImWkgc8SDLWkgc3Ryw6JtYmkgZ8OidHVsIG9sZWFjxIMsIHPEgyBzZQrDrm52ZcibZSBlYSBkZSBhbHTEgyBkYXTEgyBhIG1haSBwdXJ0YSBsdW1lYSBwZSBkZWdldGUuCgrImGkgYXR1bmNpLCBvZGF0xIMgyJlpIHBvcm5lc2MgZWkgZHVwxIMgZMOibnNhLCDImWkgbnUgbWVyZyB0b2NtYWkKbXVsdCDImWkgT2NoaWzEgyB6aWNlOgoK4oCUIE3Eg2kgUMSDc8SDcmlsxIMsIGlhY8SDdMSDLW8sIGlhISBjb2xvLCDDrm4gZG9zdWwgcMSDbcOibnR1bHVpLAp0dXBpbGF0xIMgc3ViIHVtYnJhIGllcHVyZWx1aTsgcHVuZSBtw6JuYSBwZSBkw6Juc2EgyJlpIG4tbyBsxINzYSEKClDEg3PEg3JpbMSDIGF0dW5jaSBzZSBsxIPIm2XImXRlIGPDonQgY2UgcG9hdGUsIMOubmNlcGUgYSBib2pixINpIHByaW4KdG9hdGUgYnVydWllbmlsZSDImWksIGPDom5kIHPEgyBwdW7EgyBtw6JuYSBwZSBkw6Juc2EsIHpiciEgcGUgdsOicmZ1bAp1bnVpIG11bnRlLCDImWkgc2UgYXNjdW5kZSBkdXDEgyBvIHN0w6JuY8SDLgoK4oCUIElhY8SDdMSDLW9pLCBtxINpLCBjb2xvLCDDrm4gdsOicmZ1bCBtdW50ZWx1aSwgZHVwxIMgc3TDom5jYSBjZWVhLAp6aXNlIE9jaGlsxIMuCgpQxINzxINyaWzEgyBhdHVuY2kgc2Ugw65uYWzIm8SDIHB1yJtpbiDImWkgw65uY2VwZSBhIGNvdHJvYsSDaSBwZSBkdXDEgwpzdMOibmNpOyDImWkgY8OibmQgc8SDIHB1bsSDIG3Dom5hIHBlIGTDom5zYSwgemJyISDImWkgZGUgYWNvbG8gyJlpIHNlCmR1Y2UgZGUgc2UgYXNjdW5kZSB0b2NtYWkgZHVwxIMgbHVuxIMuCgrigJQgTcSDaSBQxINzxINyaWzEgywgaWFjxIN0xIMtb2ksIGlhISBjb2xvLCBkdXDEgyBsdW7EgywgemlzZSBPY2hpbMSDOwpjxINjaSBudSBwb3QgZXUgcy1vIGFqdW5nLCBzxIMtaSBkYXUgbyBzY8SDcm3Eg27Eg3R1csSDIGJ1bsSDLgoKQXR1bmNpIFDEg3PEg3JpbMSDIHNlIGRlyJlpcsSDIG9kYXTEgyDImWkgc2Ugw65uYWzIm8SDIHDDom7EgyBsYSBsdW7Egy4gQXBvaSwKY3VwcmluesOibmQgbHVuYSDDrm4gYnJhyJtlLCBnxINidWllyJl0ZSBwxINzxINyaWNhLCBtaSDIm2ktbyDDrm7ImWZhY8SDIGRlCmNvYWTEgyDImWkgY8OidCBwZSBjZSBzxIMtaSBzdWNlYXNjxIMgZ8OidHVsLiBFYSBhdHVuY2kgc2UgcHJlZmFjZSDDrm4KZmF0xIMgyJlpIHN0cmlnxIMgw65uc3DEg2ltw6JudGF0xIM6CgrigJQgRMSDcnVpZciZdGUtbWkgdmlhyJthLCBQxINzxINyaWzEgywgY8SDIHRlLW9pIGTEg3J1aSDImWkgZXUgY3UgbWlsxIMgyJlpCmN1IGRhcnVyaSDDrm1wxINyxIN0ZciZdGksIGHImWEgc8SDIHRyxINpZciZdGkhCgrigJQgQmEgY8SDIGNoaWFyIGPEgyBlcmFpIHPEgyBuZSBkxINydWllyJl0aSBjdSBtaWzEgyDImWkgY3UgZGFydXJpCsOubXDEg3LEg3RlyJl0aSwgZGFjxIMgbnUgdGUgdmVkZWFtIGPDom5kIGFpIHBhyJlsaXQtbywgZmFybWF6b2FuxIMgY2UKZciZdGkhIHppc2UgT2NoaWzEgy4gyJh0aXUgY8SDIGFtIHRyYXMgbyBkdXJkdXLEgyBidW7EgyBjxIN1dMOibmR1LXRlLgpJYSwgbWFpIGJpbmUgaGFpIGxhIGN1bGN1yJksIGPEgyBzZSBmYWNlIHppdcSDIGFjdciZaS4gyJgtYXBvaSwgY2UtYQptYWkgZmkgYSBtYWkgZmkuCgrImGkgb2RhdMSDIG1pIMibaS1vIMOubsiZZmFjxIMgZWksIHVudWwgZGUtbyBtw6JuxIMgyJlpIGFsdHVsIGRlIGNlYWxhbHTEgwrImWkgaGFpISBoYWksIGhhaSEgw65uIHpvcmkgZGUgeml1xIMgYWp1bmcgbGEgcGFsYXQgyJlpLCB0cmVjw6JuZCBjdQpkw6Juc2EgcHJpbnRyZSBzdHLEg2ppLCBvIHNpbGVzYyBzxIMgaW50cmUgw65uIG9kYWlhIGVpLCB0b3QgY3VtIGEKaWXImWl0LgoK4oCUIEVpLCBIYXJhcC1BbGIsIHppc2UgYXR1bmNpIE9jaGlsxIMsIGRhY8SDIG51IGVyYW0gZXUgyJlpIGN1ClDEg3PEg3JpbMSDLCBjZSBmxINjZWHIm2kgdm9pIGFjdW0/IElhY2EgYciZYSwgdG90IG9tdWwgYXJlIHVuIGRhciDImWkKdW4gYW1hcjsgyJlpIHVuZGUgcHJpc29zZciZdGUgZGFydWwgbnUgc2UgbWFpIGJhZ8SDIMOubiBzZWFtxIMKYW1hcnVsLiBBbWFyIGVyYSBzxIMgZmllIGRlIHZvaSwgZGUgbnUgZXJhbSBub2kgYW3Dom5kb2kuIMiYaSBjdQpzdHLEg2p1aXJlYSB2b2FzdHLEgywgZXJhIHZhaSBkZSBwaWVsZWEgbm9hc3RyxIMhCgpIYXJhcC1BbGIgyJlpIGNlaWxhbMibaSwgbmVtYWlhdsOibmQgY2UgemljZSwgcGxlYWPEgyBjYXB1bApydciZaW5hyJtpLCBtdWzIm3VtaW5kIGx1aSBQxINzxINyaWzEgyDImWkgdmVzdGl0dWx1aSBPY2hpbMSDLCBjxINjaQpsZS1hdSBmb3N0IGNhIG5pyJl0ZSBmcmHIm2kuCgrImGkgYXR1bmNpLCBudW1haSBpYWNhIMiZaSDDrm1wxINyYXR1bCB2aW5lIGNhIHVuIGxldS1wYXJhbGV1LCBzxIMtyJlpCmlhIGZhdGEgcGUgc2VhbcSDIMiZaSwgY8OibmQgbyBnxINzZciZdGUgc3ViIHN0cmFqxIMsIGR1cMSDIGN1bSBudSBzZQphyJl0ZXB0YSBlbCwgbnVtYS1pIHNjw6JudGVpYXUgb2NoaWkgw65uIGNhcCBkZSBjaXVkxIMsIGRhciBudSBhdnUKY2UgZmFjZS4KCkF0dW5jaSBIYXJhcC1BbGIgaWFyIHNlIMOubmbEg8ibaciZYXrEgyDDrm5haW50ZWEgw65tcMSDcmF0dWx1aSwgemljw6JuZDoKCuKAlCBMdW1pbmF0ZSDDrm1wxINyYXRlLCBkZS1hY3VtIGNyZWQgY8SDIG1pLcibaSBkYSBmYXRhLCBjYSBzxIMgdsSDCmzEg3PEg20gw65uIHBhY2UgyJlpIHPEgyBuZSBkdWNlbSDDrm4gdHJlYWJhIG5vYXN0csSDLgoK4oCUIEJpbmUsIHZvaW5pY2UsIHppc2Ugw65tcMSDcmF0dWwgcG9zb21vcsOidDsgYSB2ZW5pIGVhIMiZaSB2cmVtZWEKYWNlZWEuIMOObnPEgyBldSBtYWkgYW0gbyBmYXTEgywgbHVhdMSDIGRlIHN1ZmxldCwgdG90IGRlIG8gdsOicnN0xIMKY3UgZmF0YSBtZWE7IMiZaSBudSBlIGRlb3NlYmlyZSDDrm50cmUgZMOibnNlbGUgbmljaSBsYSBmcnVtdXNlyJtlLApuaWNpIGxhIHN0YXQsIG5pY2kgbGEgcHVydGF0LiBIYWksIMiZaSBkYWPEgy1pIGN1bm9hyJl0ZS1vIGNhcmUtaSBhCm1lYSBhZGV2xINyYXTEgywgaWEtyJtpLW8gyJlpIGR1Y2XIm2ktdsSDIGRlIHBlIGNhcHVsIG1ldSwgY8SDIG1pLWHIm2kKc2NvcyBwZXJpIGFsYmksIGRlIGPDom5kIGHIm2kgdmVuaXQuIElhY2EsIG3EgyBkdWMgc8SDIGxlIHByZWfEg3Rlc2MsCnppc2Ugw65tcMSDcmF0dWwuIFR1IHZpbsSDIGR1cMSDIG1pbmUsIMiZaSwgZGFjxIMtaSBnaGljaS1vLCBmZXJpY2UgZGUKdGluZSBhIGZpLiBJYXLEgyBkZSBudSwgbHVhyJtpLXbEgyBjYXRyYWZ1c2VsZSDImWkgw65uY2VwZcibaSBhIHbEgwpjxINyxINixINuaSBkZSBsYSBjYXNhIG1lYSwgY8SDY2kgbnUgdsSDIG1haSBwb3Qgc3VmZXJpIQoKyJhpIGR1Y8OibmR1LXNlIMOubXDEg3JhdHVsLCBwdW5lIGRlIHBpYXB0xINuxIMgyJlpIMOubWJyYWPEgyBsYSBmZWwgcGUKYW3Dom5kb3XEgyBmZXRlbGUgyJlpIGFwb2kgZMSDIHBvcnVuY8SDIHPEgyB2aWUgSGFyYXAtQWxiIHPEgyBnaGljZWFzY8SDCmZhdGEgw65tcMSDcmF0dWx1aS4KCkhhcmFwLUFsYiwgdsSDesOibmR1LXNlIHB1cyDDrm4gw65uY3VyY2FsxIMsIG51IG1haSDImXRpYSBjZSBzxIMgZmFjxIMKyJlpIMOubmNvdHJvIHPEgy1vIGRlYSBjYSBzxIMgbnUgZ3JlyJllYXNjxIMgdG9jbWFpIGFjdW0sIGxhIGR1Y8SDLiDImGksCm1haSBzdMOibmQgZWwgcGUgZ8OibmR1cmkgb2xlYWPEgywgY3VtIGUgb211bCB0dWxidXJhdCwgw67ImWkgYWR1Y2UKYW1pbnRlIGRlIGFyaXBhIGNlYSBkZSBhbGJpbsSDIMiZaSwgc2NvyJvDom5kLW8gZGUgdW5kZS1vIGF2ZWEKc3Ryw6Juc8SDLCBzY2FwxINyxIMgyJlpLWkgZMSDIGZvYyBjdSBvIGJ1Y8SDyJtpY8SDIGRlIGlhc2PEgyBhcHJpbnPEgy4gyJhpCmF0dW5jaSwgbnVtYWkgaWFjYSBzZSBwb21lbmXImXRlIGN1IGNyxINpYXNhIGFsYmluZWxvci4KCuKAlCBDZSBuZXZvaWUgdGUtYSBhanVucyBkZSBtaW5lLCBIYXJhcC1BbGI/IHppc2UgZWEsIHpidXLDom5kIHBlCnVtxINydWwgc8SDdS4gU3B1bmUtbWksIGPEg2NpIHN1bnQgZ2F0YSBzxIMgdGUgc2x1amVzYy4KCkF0dW5jaSBIYXJhcC1BbGIgw65uY2VwZSBhLWkgc3B1bmUgdG9hdGUgY3UgZGUtYW3Eg251bnR1bCDImWkgbwpyb2FnxIMgZGUgdG/Im2kgZHVtbmV6ZWlpIGNhIHPEgy1pIGRlYSBhanV0b3IuCgrigJQgTi1haSBncmlqxIMsIEhhcmFwLUFsYiwgemlzZSBjcsSDaWFzYSBhbGJpbmVsb3I7IGxhcycgY8SDIHRlIGZhYwpldSBzLW8gY3Vub8iZdGkgyJlpIGRpbnRyLW8gbWllLiBIYWksIGludHLEgyDDrm4gY2FzxIMgY3UKw65uZHLEg3puZWFsxIMsIGPEg2NpIGFtIHPEgyBmaXUgyJlpIGV1IHBlLWFjb2xvLiDImGkgY3VtIMOuaSBpbnRyYSwKc3RhaSBwdcibaW4gyJlpIHRlIHVpdMSDIGxhIGZldGU7IMiZaSBjYXJlLWkgdmVkZWEtbyBjxIMgc2UgYXDEg3LEgyBjdQpuxINmcmFtYSwgc8SDIMiZdGlpIGPEgyBhY2VlYSBlc3RlIGZhdGEgw65tcMSDcmF0dWx1aS4KCkF0dW5jaSBIYXJhcC1BbGIgaW50csSDLCBjdSBhbGJpbmEgcGUgdW3Eg3IsIMOubiBvZGFpYSB1bmRlIGVyYQrDrm1wxINyYXR1bCDImWkgY3UgZmV0ZWxlLCBhcG9pIHN0xIMgcHXIm2luIGRlb3BhcnRlIMiZaSDDrm5jZXBlIGEgc2UKdWl0YSBjw6JuZCBsYSB1bmEsIGPDom5kIGxhIGFsdGEuIMiYaSBjdW0gc3RhIGVsIGRyZXB0IGNhIGx1bcOibmFyZWEKyJlpIGxlIHByaXZlYSwgY3UgYsSDZ2FyZSBkZSBzZWFtxIMsIGNyxINpYXNhIGFsYmluZWxvciB6Ym9hcsSDIHBlCm9icmF6dWwgZmV0ZWkgw65tcMSDcmF0dWx1aS4gQXR1bmNpIGVhLCB0cmVzxINyaW5kLCBvZGF0xIMgw65uY2VwZSBhCsibaXBhIMiZaSBhIHNlIGFwxINyYSBjdSBuxINmcmFtYSwgY2EgZGUgdW4gZHXImW1hbi4gTHVpIEhhcmFwLUFsYgphdMOidGEgaS1hIHRyZWJ1aXQ6IMOubmRhdMSDIGZhY2UgY8OiyJtpdmEgcGHImWkgc3ByZSBkw6Juc2EsIG8gYXB1Y8SDCmZydW11yJllbCBkZSBtw6JuxIMgyJlpIHppY2Ugw65tcMSDcmF0dWx1aToKCuKAlCBMdW1pbmFyZWEtdm9hc3RyxIMsIGRlLWFjdW0gY3JlZCBjxIMgbnUgbWktyJtpIG1haSBmYWNlIG5pY2kgbwrDrm1waWVkaWNhcmUsIHBlbnRydSBjxIMgYW0gYWR1cyDDrm50cnUgw65uZGVwbGluaXJlIHRvdCBjZWVhIGNlCm5lLWHIm2kgcG9ydW5jaXQuCgrigJQgRGluIHBhcnRlYSBtZWEgcG/Im2kgcy1vIGllaSBkZS1hY3VtLCBIYXJhcC1BbGIsIHppc2UKw65tcMSDcmF0dWwsIG92aWxpdCDImWkgc2FyYsSDZCBsYSBmYcibxIMgZGUgc3VwxINyYXJlIMiZaSBydciZaW5lOyBkYWPEgwpuLWEgZm9zdCBlYSB2cmVkbmljxIMgc8SDIHbEgyByxINwdWllIGNhcHVsLCBmaWkgbcSDY2FyIHR1IHZyZWRuaWMKcy1vIHN0xINww6JuZciZdGksIGPEg2NpIGFjdW0gyJtpLW8gZGF1IGN1IHRvYXTEgyBpbmltYS4KCkhhcmFwLUFsYiBtdWzIm3VtZciZdGUgYXR1bmNpIMOubXDEg3JhdHVsdWkgyJlpIGFwb2kgemljZSBmZXRlaTog4oCUCkRlLWFjdW0gcHV0ZW0gc8SDIG1lcmdlbSwgY8SDY2kgc3TEg3DDom51LW1ldSwgbHVtaW5hcmVhLXNhIG5lcG90dWwKw65tcMSDcmF0dWx1aSBWZXJkZSwgYSBmaSDDrm1ixIN0csOibml0IGHImXRlcHTDom5kdS1txIMuCgrigJQgSWEgbWFpIMOubmfEg2R1aWXImXRlIHB1yJtpbiwgbmVyxINiZMSDdG9ydWxlLCB6aXNlIGZhdGEKw65tcMSDcmF0dWx1aSwgbHXDom5kIG8gdHVydHVyaWPEgyDDrm4gYnJhyJtlLCBzcHVuw6JuZHUtaSBudSDImXRpdSBjZQpsYSB1cmVjaGUgyJlpIHPEg3J1dMOibmQtbyBjdSBkcmFnOyBudSB0ZSBncsSDYmkgYciZYSwgSGFyYXAtQWxiLCBjxIMKdGUtaSBwcmlwaS4gU3RhaSwgY8SDIG1haSBhaSDImWkgY3UgbWluZSBvbGVhY8SDIGRlIHZvcmLEgzogw65uYWludGUKZGUgcG9ybmlyZSwgdHJlYnVpZSBzxIMgbWVhcmfEgyBjYWx1bCB0xIN1IMiZaSBjdSB0dXJ0dXJpY2EgbWVhCnPEgy1taSBhZHVjxIMgdHJlaSBzbWljZWxlIGRlIG3Eg3IgZHVsY2UgyJlpIGFwxIMgdmllIMiZaSBhcMSDIG1vYXJ0xIMKZGUgdW5kZSBzZSBiYXQgbXVuyJtpaSDDrm4gY2FwZXRlLiDImGkgZGUtYSB2ZW5pIHR1cnR1cmljYSBtZWEKw65uYWludGUgY3Ugc21pY2VsZWxlIMiZaSBhcGEsIGlhLcibaSBuxINkZWpkZWEgZGVzcHJlIG1pbmUsIGPEg2NpIG51Cm1lcmcsIGZlcmVhc2PEgyBEdW1uZXpldSEgSWFyxIMgZGUtaSBhdmVhIG5vcm9jIMiZaS1hIHZlbmkgY2FsdWwKdMSDdSBtYWkgw65udMOiaSDImWkgbWktbyBhZHVjZSBjZWxlIHBvcnVuY2l0ZSwgc8SDIMiZdGlpIGPEgyBtZXJnIGN1CnRpbmUsIG9yaXVuZGUgbWktaSBkdWNlOyBzLWEgbcOibnR1aXQgc29jb3RlYWxhLgoKyJhpIGF0dW5jaSwgb2RhdMSDIHBvcm5lc2MgyJlpIHR1cnR1cmljYSDImWkgY2FsdWwsIGZ1Z2luZCBwZQrDrm50cmVjdXRlLCBjw6JuZCBwZSBzdXMsIGPDom5kIHBlIGpvcywgZHVwxIMgY3VtIGNlcmVhIHRyZWJ1aW7Im2EuCgpEYXIgdHVydHVyaWNhLCBmaWluZCBtYWkgdciZb2FyxIMsIGFqdW5nZSBtYWkgw65uYWludGU7IMiZaSBww6JuZGluZAp0b2NtYWkgY8OibmQgZXJhIHNvYXJlbGUgw65uIGNydWNlLCBkZSBzZSBvZGlobmVhdSBtdW7Im2lpIG51bWFpCnBlbnRydSBvIGNsaXBpdMSDLCBzZSByZXBlZGUgY2EgcHJpbiBmb2MgyJlpIGlhIHRyZWkgc21pY2VsZSBkZQptxINyIGR1bGNlIMiZaSBhcMSDIHZpZSDImWkgYXDEgyBtb2FydMSDLCDImWkgYXBvaSBjYSBmdWxnZXJ1bCBzZQrDrm50b2FyY2Ugw65uYXBvaS4gyJhpLCBjw6JuZCBwZSBsYSBwb2FydGEgbXVuyJtpbG9yLCBjYWx1bCDDrmkgaWVzZQrDrm5haW50ZSwgbyBwcm9wZciZdGUgw65uIGNhbGUgyJlpIG8gaWEgY3UgbcSDZ3VsZWxpbGUsIHppY8OibmR1LWk6CgrigJQgVHVydHVyaWPEgy1yaWPEgywgZHJhZ8SDIHDEg3PEg3JpY8SDLCBhZMSDIGxhIG1pbmUgY2VsZSB0cmVpIHNtaWNlbGUKZGUgbcSDciBkdWxjZSwgYXBhIGNlYSB2aWUgyJlpIGNlYSBtb2FydMSDLCDImWkgdHUgZHUtdGUgw65uYXBvaQpkZS3Im2kgaWEgYWx0ZWxlIMiZaSBtaS1pIGFqdW5nZSBwZSBkcnVtLCBjxINjaSBlyJl0aSBtYWkgc3ByaW50ZW7EgwpkZWPDonQgbWluZS4gSGFpLCBudSBtYWkgc3RhIGxhIMOubmRvaWFsxIMgyJlpIGTEgy1taS1sZSwgY8SDY2kgYXR1bmNpCmFyZSBzxIMgZmllIGJpbmUgyJlpIGRlIHN0xINww6JudS1tZXUsIMiZaSBkZSBzdMSDcMOibsSDLXRhLCDImWkgZGUgbWluZSwKyJlpIGRlIHRpbmU7IGlhcsSDIGRlIG51IG1pIGxpLWkgZGEsIHN0xINww6JudS1tZXUgSGFyYXAtQWxiIGVzdGUgw65uCnByaW1lamRpZSwgyJlpIGRlIG5vaSDDrm5jxIMgbi1hcmUgc8SDIGZpZSBiaW5lLgoKVHVydHVyaWNhIHBhcmPEgyBuLWFyIGZpIHZvaXQuIERhciBjYWx1bCBuLW8gbWFpIMOubnRyZWFixIMgZGUgY2UtaQplIGNvam9jdWw7IHNlIHJlcGVkZSDImWktaSBpYSBhcGEgyJlpIHNtaWNlbGVsZSBjdSBoYXBjYSDImWkgYXBvaQpmdWdlIGN1IGTDom5zZWxlIGxhIGZhdGEgw65tcMSDcmF0dWx1aSDImWkgaSBsZSBkxIMsIGRlIGZhyJvEgyBjdQpIYXJhcC1BbGIuIEF0dW5jaSBsdWkgSGFyYXAtQWxiIGkgcy1hIHVtcGx1dCBpbmltYSBkZSBidWN1cmllLgoKVmluZSBlYSDImWkgdHVydHVyaWNhIG1haSBwZSB1cm3EgywgZGFyIGNlLcibaSBlIGJ1bsSDPyDigJQgQWxlaSwKyJtvbGluxIMgY2UtbWkgZciZdGksIHppc2UgZmF0YSDDrm1wxINyYXR1bHVpOyBkYScgYmluZSBtLWFpIHbDom5kdXQuCkRhY8SDIGUgYciZYSwgaGFpLCBwb3JuZciZdGUgY2hpYXIgYWN1bSBsYSDDrm1wxINyYXR1bCBWZXJkZSDImWkKdmVzdGXImXRlLWkgY8SDIHZlbmltIMiZaSBub2kgw65uIHVybcSDLgoKQXR1bmNpIHR1cnR1cmljYSBwb3JuZciZdGUuIElhcsSDIGZhdGEgw65tcMSDcmF0dWx1aSDDrm5nZW51bmNoZQpkaW5haW50ZWEgdMSDdMOibmUtc8SDdSDImWkgemljZToKCuKAlCBCaW5lY3V2w6JudGVhesSDLW3EgywgdGF0xIMsIMiZaSByxINtw6JpIHPEg27Eg3RvcyEgU2UgdmVkZSBjxIMgYciZYSBtaS1hCmZvc3Qgc29ydGl0IMiZaSBuLWFtIGNlIGZhY2U7IHRyZWJ1aWUgc8SDIG1lcmcgY3UgSGFyYXBBbGIsIMiZaQpwYWNlIGJ1bsSDIQoKRHVwxIMgYWNlYXN0YSwgw67ImWkgaWEgY2VsZSB0cmVidWl0b2FyZSBsYSBkcnVtLCBhcG9pIMOubmNhbGVjxIMgyJlpCmVhIHBlIHVuIGNhbCBuxIN6ZHLEg3ZhbiDImWkgc3TEgyBnYXRhIGRlIHBvcm5pcmUuIElhcsSDIEhhcmFwQWxiLApsdcOibmR1LciZaSBvYW1lbmlpIHPEg2ksIMOubmNhbGVjxIMgyJlpIGVsIMiZaSBwb3JuZXNjIHNwcmUgw65tcMSDcsSDyJtpZSwKRHVtbmV6ZXUgc8SDIG5lIMibaWUsIGPEgyBjdXbDom50dWwgZGluIHBvdmVzdGUsIMOubmFpbnRlIG11bHQgbWFpCmVzdGUuCgpNZXJzLWF1IGVpIMiZaSB6aSDImWkgbm9hcHRlLCBudSBzZSDImXRpZSBjw6J0IGF1IG1lcnM7IMiZaSwgZGUgbGEgdW4KbG9jLCBHZXJpbMSDLCBGbMSDbcOibnppbMSDIMiZaSBTZXRpbMSDLCBQxINzxINyaS1MxIPIm2ktTHVuZ2lsxIMgyJlpCm7Eg3pkcsSDdmFudWwgT2NoaWzEgyBzZSBvcHJlc2MgY3UgdG/Im2lpIMOubiBjYWxlLCBzZSBvcHJlc2MgyJlpIHppYwpjdSBqYWxlOgoK4oCUIEhhcmFwLUFsYiwgbWVyZ2kgc8SDbsSDdG9zISBEZS1hbSBmb3N0IHLEg2ksIHR1IG5pLWkgaWVydGEsIGPEg2NpCsiZaSByxIN1bCBjw6J0ZW9kYXTEgyBwcmluZGUgYmluZSBsYSBjZXZhLgoKSGFyYXAtQWxiIGxlIG11bMibdW1lyJl0ZSDImS1hcG9pIHBsZWFjxIMgbGluaciZdGl0LiBGYXRhIHZlc2VsIMOuaQp6w6JtYmXImXRlLCBsdW5hLW4gY2VyIGEgYXNmaW7Im2l0LiBEYXIgw65uIHBpZXB0dWwgbG9yIHLEg3NhcmUuLi4gQ2UKcsSDc2FyZT8gSWEsIHVuIGRvcjsgc29hcmUgbcOibmRydSwgbHVtaW5vcyDImWkgw65uIHNpbmUgYXJ6xIN0b3IsIGNlCnNlIG5hyJl0ZSBkaW4gc2PDom50ZWlhIHVudWkgb2NoaSBmZXJtZWPEg3RvciEKCsiYaSBtYWkgbWVyZyBlaSBjw6J0IG1haSBtZXJnLCDImWkgZGUgY2UgbWVyZ2VhdSDDrm5haW50ZSwgZGUgY2UgbHVpCkhhcmFwLUFsYiBpIHNlIHR1bGJ1cmF1IG1pbsibaWxlLCB1aXTDom5kdS1zZSBsYSBmYXTEgyDImWkgdsSDesOibmQtbwpjw6J0IGVyYSBkZSB0w6JuxINyxIMsIGRlIGZydW1vYXPEgyDImWkgcGxpbsSDIGRlIHZpbsSDLW5jb2FjZS4KClPEg2zEg8ibaWxlIGRpbiBHcsSDZGluYSBVcnN1bHVpLCBwaWVsZWEgyJlpIGNhcHVsIGNlcmJ1bHVpIGxlLWEgZHVzCmxhIHN0xINww6JudS1zxIN1IGN1IHRvYXTEgyBpbmltYS4gRGFyIHBlIGZhdGEgw65tcMSDcmF0dWx1aSBSb8iZIG1haQpudS1pIHZlbmVhIHMtbyBkdWPEgywgZmlpbmQgbmVidW4gZGUgZHJhZ29zdGVhIGVpLiBDxINjaSBlcmEgYm9ib2MKZGUgdHJhbmRhZmlyIGRpbiBsdW5hIGx1aSBtYWksIHNjxINsZGF0IMOubiByb3VhIGRpbWluZcibaWksCmRlem1pZXJkYXQgZGUgY2VsZSDDrm50w6JpIHJhemUgYWxlIHNvYXJlbHVpLCBsZWfEg25hdCBkZSBhZGllcmVhCnbDom50dWx1aSDImWkgbmVhdGlucyBkZSBvY2hpaSBmbHV0dXJpbG9yLiBTYXUsIGN1bSBzLWFyIG1haSB6aWNlCmxhIG5vaSDDrm4gyJvEg3LEg25lyJl0ZSwgZXJhIGZydW1vYXPEgyBkZSBtYW1hIGZvY3VsdWk7IGxhIHNvYXJlIHRlCnB1dGVhaSB1aXRhLCBpYXIgbGEgZMOibnNhIGJhLiDImGkgZGUtYWNlZWEgSGFyYXAtIEFsYiBvIHByxINwxINkZWEKZGluIG9jaGkgZGUgZHJhZ8SDIGNlLWkgZXJhLiBOdS1pIHZvcmLEgywgyJlpIGVhIGZ1cmEgY3Ugb2NoaWksIGRpbgpjw6JuZCDDrm4gY8OibmQsIHBlIEhhcmFwLUFsYiwgyJlpIMOubiBpbmltYSBlaSBwYXJjxIMgc2UgcGV0cmVjZWEgbnUKyJl0aXUgY2UuLi4gcG9hdGUgdnJldW4gZG9yIGFzY3VucywgY2FyZSBudS1pIHZlbmVhIGEtbCBzcHVuZS4KVm9yYmEgY8OibnRlY3VsdWk6CgpGdWdpIGRlLWFjb2xlLCB2aW7Egy1uY29hY2UhCsiYZXppIGJpbmnImW9yLCBudS1taSBkYSBwYWNlIQpzYXUgbWFpIMiZdGl1IGV1IGN1bSBzxIMgemljLCBjYSBzxIMgbnUgZ3JlyJllc2M/IERhciDImXRpdSBhdMOidGEsIGPEgwplaSBtZXJnZWF1IGbEg3LEgyBhIHNpbcibaSBjxIMgbWVyZywgcMSDcsOibmR1LWxpLXNlIGNhbGVhIHNjdXJ0xIMgyJlpCnZyZW1lYSDImWkgbWFpIHNjdXJ0xIM7IHppdWEgY2VhcyDImWkgY2Vhc3VsIGNsaXDEgzsgZMSDLCBjdW0gZSBvbXVsCmPDom5kIG1lcmdlIGxhIGRydW0gY3UgZHJhZ29zdGVhIGFsxIN0dXJlYS4KCk51IMiZdGlhIHPEg3JtYW51bCBIYXJhcC1BbGIgY2UtbCBhyJl0ZWFwdMSDIGFjYXPEgywgY8SDY2kgbnUgcy1hciBtYWkKZmkgZ8OibmRpdCBsYSBkZS1hbGRlIGFjZXN0ZWEuCgrDjm5zxIMgdm9yYmEgY8OibnRlY3VsdWk6CgpEZS1hciDImXRpIG9tdWwgY2UtYXIgcMSDyJtpLApEaW5haW50ZSBzLWFyIHDEg3ppIQpEYXIgaWFjYSBjZSBtLWFtIGFwdWNhdCBkZSBzcHVzLiBNYWkgYmluZSB2xIMgc3B1bmVhbSBjxIMKdHVydHVyaWNhIGFqdW5zZXNlIGxhIMOubXDEg3JhdHVsIFZlcmRlIMiZaS1sIMOubsiZdGlpbsibYXNlIGPEgyB2aW5lCsiZaSBIYXJhcC1BbGIgY3UgZmF0YSDDrm1wxINyYXR1bHVpIFJvyJkuCgpBdHVuY2kgw65tcMSDcmF0dWwgVmVyZGUgYSDImWkgw65uY2VwdXQgYSBmYWNlIHByZWfEg3RpcmUsIGNhIHBlbnRydQpvIGZhdMSDIGRlIMOubXDEg3JhdCwgZMOibmQgyJlpIHBvcnVuY8SDIHPEgyBsZSBpYXPEgyDDrm50cnUgw65udMOibXBpbmFyZS4KSWFyxIMgU3DDom51bCBpY25lYSDDrm4gc2luZSDImWkgc2UgZ8OibmRlYSBudW1haSBsYSByxIN6YnVuYXJlLgoKw45uIHNmw6JyyJlpdCwgbWFpIG1lcmdlIEhhcmFwLUFsYiBjdSBmYXRhIMOubXDEg3JhdHVsdWkgY8OidCBtYWkKbWVyZ2UsIMiZaSBkZSBsYSBvIHZyZW1lIGFqdW5nIMiZaSBlaSBsYSDDrm1wxINyxIPIm2llLgoKyJhpLCBjw6JuZCBjb2xvLCBudW1haSBpYWNhIGNlIGxlIGllcyDDrm5haW50ZSDDrm1wxINyYXR1bCBWZXJkZSwKZmV0ZWxlIHNhbGUsIFNww6JudWwgyJlpIHRvYXTEgyBjdXJ0ZWEgw65tcMSDcsSDdGVhc2PEgywgY2Egc8SDLWkKcHJpbWVhc2PEgy4gyJhpIHbEg3rDom5kIFNww6JudWwgY8OidCBlIGRlIGZydW1vYXPEgyBmYXRhIMOubXDEg3JhdHVsdWkKUm/ImSwgb2RhdMSDIHNlIHJlcGVkZSBzxIMgbyBpYSDDrm4gYnJhyJtlIGRlIHBlIGNhbC4gRGFyIGZhdGEgw65pCnB1bmUgYXR1bmNpIG3Dom5hIHBlIHBpZXB0LCDDrmwgYnLDom5jZciZdGUgY8OidCBjb2xvIMiZaSB6aWNlOgoK4oCUIExpcHNlyJl0ZSBkaW5haW50ZWEgbWVhLCBTcMOibnVsZSEgRG9hciBuLWFtIHZlbml0IHBlbnRydSB0aW5lLArImS1hbSB2ZW5pdCBwZW50cnUgSGFyYXAtQWxiLCBjxINjaSBlbCBlc3RlIGFkZXbEg3JhdHVsIG5lcG90IGFsCsOubXDEg3JhdHVsdWkgVmVyZGUuCgpBdHVuY2kgw65tcMSDcmF0dWwgVmVyZGUgyJlpIGZldGVsZSBzYWxlIGF1IHLEg21hcyDDrm5jcmVtZW5pyJtpIGRlCmNlZWEgY2UgYXUgYXV6aXQuIElhciBTcMOibnVsLCB2xIN6w6JuZCBjxIMgaSBzLWEgZGF0IHZpY2xlyJl1Z3VsIHBlCmZhyJvEgywgc2UgcmVwZWRlIGNhIHVuIGPDomluZSB0dXJiYXQgbGEgSGFyYXAtQWxiIMiZaS1pIHpib2FyxIMKY2FwdWwgZGludHItbyBzaW5ndXLEgyBsb3ZpdHVyxIMgZGUgcGFsb8iZLCB6aWPDom5kOgoK4oCUIE5hISBhyJlhIHRyZWJ1aWUgc8SDIHDEg8ibZWFzY8SDIGNpbmUgY2FsY8SDIGp1csSDbcOibnR1bCEgRGFyIGNhbHVsCmx1aSBIYXJhcC1BbGIgw65uZGF0xIMgc2UgcmVwZWRlIMiZaSBlbCBsYSBTcMOibiDImWktaSB6aWNlOgoK4oCUIFDDom4tYWljaSwgU3DDom51bGUhIMiYaSBvZGF0xIMgbWkgyJtpLWwgw65uyJlmYWPEgyBjdSBkaW7Im2lpIGRlIGNhcCwKemJvYXLEgyBjdSBkw6Juc3VsIMOubiDDrm5hbHR1bCBjZXJ1bHVpLCDImWkgYXBvaSwgZMOibmR1LWkgZHJ1bXVsCmRlLWFjb2xvLCBzZSBmYWNlIFNww6JudWwgcMOibsSDIGpvcyBwcmFmIMiZaSBwdWxiZXJlLiBJYXLEgyBmYXRhCsOubXDEg3JhdHVsdWkgUm/ImSwgw65uIHbEg2xtxIPImWFndWwgYWNlc3RhLCByZXBlZGUgcHVuZSBjYXB1bCBsdWkKSGFyYXAtQWxiIGxhIGxvYywgw65sIMOubmNvbmp1csSDIGRlIHRyZWkgb3JpIGN1IGNlbGUgdHJlaSBzbWljZWxlCmRlIG3Eg3IgZHVsY2UsIHRvYXJuxIMgYXDEgyBtb2FydMSDLCBzxIMgc3RlYSBzw6JuZ2VsZSDImWkgc8SDIHNlIHByaW5kxIMKcGllbGVhLCBhcG9pIMOubCBzdHJvcGXImXRlIGN1IGFwxIMgdmllLCDImWkgYXR1bmNpIEhhcmFwLUFsYiDDrm5kYXTEgwrDrm52aWUgyJlpLCDImXRlcmfDom5kdS1zZSBjdSBtw6JuYSBwZSBsYSBvY2hpLCB6aWNlIHN1c3BpbsOibmQ6CgrigJQgRWksIGRhJyBkaW4gZ3JldSBtYWkgYWRvcm1pc2VtISDigJQgRG9ybWVhaSB0dSBtdWx0IMiZaSBiaW5lLApIYXJhcC1BbGIsIGRlIG51IGVyYW0gZXUsIHppc2UgZmF0YSDDrm1wxINyYXR1bHVpIFJvyJksIHPEg3J1dMOibmR1LWwKY3UgZHJhZyDImWkgZMOibmR1LWkgaWFyIHBhbG/ImXVsIMOubiBzdMSDcMOibmlyZS4KCsiYaSBhcG9pLCDDrm5nZW51bmNoaW5kIGFtw6JuZG9pIGRpbmFpbnRlYSDDrm1wxINyYXR1bHVpIFZlcmRlLCDDrsiZaQpqdXLEgyBjcmVkaW7Im8SDIHVudWwgYWx0dWlhLCBwcmltaW5kIGJpbmVjdXbDom50YXJlIGRlIGxhIGTDom5zdWwgyJlpCsOubXDEg3LEg8ibaWEgdG90b2RhdMSDLgoKRHVwxIMgYWNlYXN0YSBzZSDDrm5jZXBlIG51bnRhLCDImS1hcG9pLCBkxIMgRG9hbW5lIGJpbmUhCgpMdW1lYSBkZSBwZSBsdW1lIHMtYSBzdHLDom5zIGRlIHByaXZlYSwKU29hcmVsZSDImWkgbHVuYSBkaW4gY2VyIGxlIHLDomRlYS4KyJgtYXBvaSBmb3N0LWF1IGZvc3QgcG9mdGnIm2kgbGEgbnVudMSDOiBDcsSDaWFzYSBmdXJuaWNpbG9yLApDcsSDaWFzYSBhbGJpbmVsb3IgyJlpIENyxINpYXNhIHrDom5lbG9yLCBtaW51bmVhIG1pbnVuaWxvciBkaW4Kb3N0cm92dWwgZmxvcmlsb3IhCgrImGkgbWFpIGZvc3QtYXUgcG9mdGnIm2kgw65uY8SDOiBjcmFpLCBjcsSDaWVzZSDImWktbXDEg3JhyJtpLCBvYW1lbmkgw65uCnNlYW3EgyBixINnYcibaSwgyJktdW4gcMSDY2F0IGRlIHBvdmVzdGFyLCBmxINyxIMgYmFuaSDDrm4gYnV6dW5hci4KVmVzZWxpZSBtYXJlIMOubnRyZSB0b8ibaSBlcmEsIGNoaWFyIMiZaSBzxINyxINjaW1lYSBvc3DEg3RhIMiZaSBiZWEhCgrImGkgYSDIm2ludXQgdmVzZWxpYSBhbmkgw65udHJlZ2ksIMiZaSBhY3VtIG1haSDIm2luZSDDrm5jxIM7IGNpbmUgc2UKZHVjZSBhY29sbyBiZWEgyJlpIG3Eg27Dom5jxIMuIElhciBwZSBsYSBub2ksIGNpbmUgYXJlIGJhbmkgYmVhIMiZaQptxINuw6JuY8SDLCBpYXLEgyBjaW5lIG51LCBzZSB1aXTEgyDImWkgcmFiZMSDLgpFT1Q7CgogICAgLyoKICAgICoqKiBTVEFSVDogRlVMTCBMSUNFTlNFICoqKgoKICAgIENyZWF0aXZlIENvbW1vbnMgTGVnYWwgQ29kZQoKICAgIEF0dHJpYnV0aW9uLVNoYXJlQWxpa2UgMy4wIFVucG9ydGVkCgoKICAgIENSRUFUSVZFIENPTU1PTlMgQ09SUE9SQVRJT04gSVMgTk9UIEEgTEFXIEZJUk0gQU5EIERPRVMgTk9UIFBST1ZJREUKICAgIExFR0FMIFNFUlZJQ0VTLiBESVNUUklCVVRJT04gT0YgVEhJUyBMSUNFTlNFIERPRVMgTk9UIENSRUFURSBBTgogICAgQVRUT1JORVktQ0xJRU5UIFJFTEFUSU9OU0hJUC4gQ1JFQVRJVkUgQ09NTU9OUyBQUk9WSURFUyBUSElTCiAgICBJTkZPUk1BVElPTiBPTiBBTiAiQVMtSVMiIEJBU0lTLiBDUkVBVElWRSBDT01NT05TIE1BS0VTIE5PIFdBUlJBTlRJRVMKICAgIFJFR0FSRElORyBUSEUgSU5GT1JNQVRJT04gUFJPVklERUQsIEFORCBESVNDTEFJTVMgTElBQklMSVRZIEZPUgogICAgREFNQUdFUyBSRVNVTFRJTkcgRlJPTSBJVFMgVVNFLiBMaWNlbnNlCgogICAgVEhFIFdPUksgKEFTIERFRklORUQgQkVMT1cpIElTIFBST1ZJREVEIFVOREVSIFRIRSBURVJNUyBPRiBUSElTCiAgICBDUkVBVElWRSBDT01NT05TIFBVQkxJQyBMSUNFTlNFICgiQ0NQTCIgT1IgIkxJQ0VOU0UiKS4gVEhFIFdPUksgSVMKICAgIFBST1RFQ1RFRCBCWSBDT1BZUklHSFQgQU5EL09SIE9USEVSIEFQUExJQ0FCTEUgTEFXLiBBTlkgVVNFIE9GIFRIRQogICAgV09SSyBPVEhFUiBUSEFOIEFTIEFVVEhPUklaRUQgVU5ERVIgVEhJUyBMSUNFTlNFIE9SIENPUFlSSUdIVCBMQVcgSVMKICAgIFBST0hJQklURUQuCgogICAgQlkgRVhFUkNJU0lORyBBTlkgUklHSFRTIFRPIFRIRSBXT1JLIFBST1ZJREVEIEhFUkUsIFlPVSBBQ0NFUFQgQU5ECiAgICBBR1JFRSBUTyBCRSBCT1VORCBCWSBUSEUgVEVSTVMgT0YgVEhJUyBMSUNFTlNFLiBUTyBUSEUgRVhURU5UIFRISVMKICAgIExJQ0VOU0UgTUFZIEJFIENPTlNJREVSRUQgVE8gQkUgQSBDT05UUkFDVCwgVEhFIExJQ0VOU09SIEdSQU5UUyBZT1UKICAgIFRIRSBSSUdIVFMgQ09OVEFJTkVEIEhFUkUgSU4gQ09OU0lERVJBVElPTiBPRiBZT1VSIEFDQ0VQVEFOQ0UgT0YgU1VDSAogICAgVEVSTVMgQU5EIENPTkRJVElPTlMuCgogICAgMS4gRGVmaW5pdGlvbnMKCiAgICAiQWRhcHRhdGlvbiIgbWVhbnMgYSB3b3JrIGJhc2VkIHVwb24gdGhlIFdvcmssIG9yIHVwb24gdGhlIFdvcmsgYW5kCiAgICBvdGhlciBwcmUtZXhpc3Rpbmcgd29ya3MsIHN1Y2ggYXMgYSB0cmFuc2xhdGlvbiwgYWRhcHRhdGlvbiwKICAgIGRlcml2YXRpdmUgd29yaywgYXJyYW5nZW1lbnQgb2YgbXVzaWMgb3Igb3RoZXIgYWx0ZXJhdGlvbnMgb2YgYQogICAgbGl0ZXJhcnkgb3IgYXJ0aXN0aWMgd29yaywgb3IgcGhvbm9ncmFtIG9yIHBlcmZvcm1hbmNlIGFuZCBpbmNsdWRlcwogICAgY2luZW1hdG9ncmFwaGljIGFkYXB0YXRpb25zIG9yIGFueSBvdGhlciBmb3JtIGluIHdoaWNoIHRoZSBXb3JrIG1heSBiZQogICAgcmVjYXN0LCB0cmFuc2Zvcm1lZCwgb3IgYWRhcHRlZCBpbmNsdWRpbmcgaW4gYW55IGZvcm0gcmVjb2duaXphYmx5CiAgICBkZXJpdmVkIGZyb20gdGhlIG9yaWdpbmFsLCBleGNlcHQgdGhhdCBhIHdvcmsgdGhhdCBjb25zdGl0dXRlcyBhCiAgICBDb2xsZWN0aW9uIHdpbGwgbm90IGJlIGNvbnNpZGVyZWQgYW4gQWRhcHRhdGlvbiBmb3IgdGhlIHB1cnBvc2Ugb2YKICAgIHRoaXMgTGljZW5zZS4gRm9yIHRoZSBhdm9pZGFuY2Ugb2YgZG91YnQsIHdoZXJlIHRoZSBXb3JrIGlzIGEgbXVzaWNhbAogICAgd29yaywgcGVyZm9ybWFuY2Ugb3IgcGhvbm9ncmFtLCB0aGUgc3luY2hyb25pemF0aW9uIG9mIHRoZSBXb3JrIGluCiAgICB0aW1lZC1yZWxhdGlvbiB3aXRoIGEgbW92aW5nIGltYWdlICgic3luY2hpbmciKSB3aWxsIGJlIGNvbnNpZGVyZWQgYW4KICAgIEFkYXB0YXRpb24gZm9yIHRoZSBwdXJwb3NlIG9mIHRoaXMgTGljZW5zZS4gIkNvbGxlY3Rpb24iIG1lYW5zIGEKICAgIGNvbGxlY3Rpb24gb2YgbGl0ZXJhcnkgb3IgYXJ0aXN0aWMgd29ya3MsIHN1Y2ggYXMgZW5jeWNsb3BlZGlhcyBhbmQKICAgIGFudGhvbG9naWVzLCBvciBwZXJmb3JtYW5jZXMsIHBob25vZ3JhbXMgb3IgYnJvYWRjYXN0cywgb3Igb3RoZXIgd29ya3MKICAgIG9yIHN1YmplY3QgbWF0dGVyIG90aGVyIHRoYW4gd29ya3MgbGlzdGVkIGluIFNlY3Rpb24gMShmKSBiZWxvdywKICAgIHdoaWNoLCBieSByZWFzb24gb2YgdGhlIHNlbGVjdGlvbiBhbmQgYXJyYW5nZW1lbnQgb2YgdGhlaXIgY29udGVudHMsCiAgICBjb25zdGl0dXRlIGludGVsbGVjdHVhbCBjcmVhdGlvbnMsIGluIHdoaWNoIHRoZSBXb3JrIGlzIGluY2x1ZGVkIGluCiAgICBpdHMgZW50aXJldHkgaW4gdW5tb2RpZmllZCBmb3JtIGFsb25nIHdpdGggb25lIG9yIG1vcmUgb3RoZXIKICAgIGNvbnRyaWJ1dGlvbnMsIGVhY2ggY29uc3RpdHV0aW5nIHNlcGFyYXRlIGFuZCBpbmRlcGVuZGVudCB3b3JrcyBpbgogICAgdGhlbXNlbHZlcywgd2hpY2ggdG9nZXRoZXIgYXJlIGFzc2VtYmxlZCBpbnRvIGEgY29sbGVjdGl2ZSB3aG9sZS4gQQogICAgd29yayB0aGF0IGNvbnN0aXR1dGVzIGEgQ29sbGVjdGlvbiB3aWxsIG5vdCBiZSBjb25zaWRlcmVkIGFuCiAgICBBZGFwdGF0aW9uIChhcyBkZWZpbmVkIGJlbG93KSBmb3IgdGhlIHB1cnBvc2VzIG9mIHRoaXMgTGljZW5zZS4KICAgICJDcmVhdGl2ZSBDb21tb25zIENvbXBhdGlibGUgTGljZW5zZSIgbWVhbnMgYSBsaWNlbnNlIHRoYXQgaXMgbGlzdGVkCiAgICBhdCBodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9jb21wYXRpYmxlbGljZW5zZXMgdGhhdCBoYXMgYmVlbgogICAgYXBwcm92ZWQgYnkgQ3JlYXRpdmUgQ29tbW9ucyBhcyBiZWluZyBlc3NlbnRpYWxseSBlcXVpdmFsZW50IHRvIHRoaXMKICAgIExpY2Vuc2UsIGluY2x1ZGluZywgYXQgYSBtaW5pbXVtLCBiZWNhdXNlIHRoYXQgbGljZW5zZTogKGkpIGNvbnRhaW5zCiAgICB0ZXJtcyB0aGF0IGhhdmUgdGhlIHNhbWUgcHVycG9zZSwgbWVhbmluZyBhbmQgZWZmZWN0IGFzIHRoZSBMaWNlbnNlCiAgICBFbGVtZW50cyBvZiB0aGlzIExpY2Vuc2U7IGFuZCwgKGlpKSBleHBsaWNpdGx5IHBlcm1pdHMgdGhlIHJlbGljZW5zaW5nCiAgICBvZiBhZGFwdGF0aW9ucyBvZiB3b3JrcyBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGF0IGxpY2Vuc2UgdW5kZXIgdGhpcwogICAgTGljZW5zZSBvciBhIENyZWF0aXZlIENvbW1vbnMganVyaXNkaWN0aW9uIGxpY2Vuc2Ugd2l0aCB0aGUgc2FtZQogICAgTGljZW5zZSBFbGVtZW50cyBhcyB0aGlzIExpY2Vuc2UuICJEaXN0cmlidXRlIiBtZWFucyB0byBtYWtlIGF2YWlsYWJsZQogICAgdG8gdGhlIHB1YmxpYyB0aGUgb3JpZ2luYWwgYW5kIGNvcGllcyBvZiB0aGUgV29yayBvciBBZGFwdGF0aW9uLCBhcwogICAgYXBwcm9wcmlhdGUsIHRocm91Z2ggc2FsZSBvciBvdGhlciB0cmFuc2ZlciBvZiBvd25lcnNoaXAuICJMaWNlbnNlCiAgICBFbGVtZW50cyIgbWVhbnMgdGhlIGZvbGxvd2luZyBoaWdoLWxldmVsIGxpY2Vuc2UgYXR0cmlidXRlcyBhcwogICAgc2VsZWN0ZWQgYnkgTGljZW5zb3IgYW5kIGluZGljYXRlZCBpbiB0aGUgdGl0bGUgb2YgdGhpcyBMaWNlbnNlOgogICAgQXR0cmlidXRpb24sIFNoYXJlQWxpa2UuICJMaWNlbnNvciIgbWVhbnMgdGhlIGluZGl2aWR1YWwsIGluZGl2aWR1YWxzLAogICAgZW50aXR5IG9yIGVudGl0aWVzIHRoYXQgb2ZmZXIocykgdGhlIFdvcmsgdW5kZXIgdGhlIHRlcm1zIG9mIHRoaXMKICAgIExpY2Vuc2UuICJPcmlnaW5hbCBBdXRob3IiIG1lYW5zLCBpbiB0aGUgY2FzZSBvZiBhIGxpdGVyYXJ5IG9yCiAgICBhcnRpc3RpYyB3b3JrLCB0aGUgaW5kaXZpZHVhbCwgaW5kaXZpZHVhbHMsIGVudGl0eSBvciBlbnRpdGllcyB3aG8KICAgIGNyZWF0ZWQgdGhlIFdvcmsgb3IgaWYgbm8gaW5kaXZpZHVhbCBvciBlbnRpdHkgY2FuIGJlIGlkZW50aWZpZWQsIHRoZQogICAgcHVibGlzaGVyOyBhbmQgaW4gYWRkaXRpb24gKGkpIGluIHRoZSBjYXNlIG9mIGEgcGVyZm9ybWFuY2UgdGhlCiAgICBhY3RvcnMsIHNpbmdlcnMsIG11c2ljaWFucywgZGFuY2VycywgYW5kIG90aGVyIHBlcnNvbnMgd2hvIGFjdCwgc2luZywKICAgIGRlbGl2ZXIsIGRlY2xhaW0sIHBsYXkgaW4sIGludGVycHJldCBvciBvdGhlcndpc2UgcGVyZm9ybSBsaXRlcmFyeSBvcgogICAgYXJ0aXN0aWMgd29ya3Mgb3IgZXhwcmVzc2lvbnMgb2YgZm9sa2xvcmU7IChpaSkgaW4gdGhlIGNhc2Ugb2YgYQogICAgcGhvbm9ncmFtIHRoZSBwcm9kdWNlciBiZWluZyB0aGUgcGVyc29uIG9yIGxlZ2FsIGVudGl0eSB3aG8gZmlyc3QKICAgIGZpeGVzIHRoZSBzb3VuZHMgb2YgYSBwZXJmb3JtYW5jZSBvciBvdGhlciBzb3VuZHM7IGFuZCwgKGlpaSkgaW4gdGhlCiAgICBjYXNlIG9mIGJyb2FkY2FzdHMsIHRoZSBvcmdhbml6YXRpb24gdGhhdCB0cmFuc21pdHMgdGhlIGJyb2FkY2FzdC4KICAgICJXb3JrIiBtZWFucyB0aGUgbGl0ZXJhcnkgYW5kL29yIGFydGlzdGljIHdvcmsgb2ZmZXJlZCB1bmRlciB0aGUgdGVybXMKICAgIG9mIHRoaXMgTGljZW5zZSBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIGFueSBwcm9kdWN0aW9uIGluIHRoZQogICAgbGl0ZXJhcnksIHNjaWVudGlmaWMgYW5kIGFydGlzdGljIGRvbWFpbiwgd2hhdGV2ZXIgbWF5IGJlIHRoZSBtb2RlIG9yCiAgICBmb3JtIG9mIGl0cyBleHByZXNzaW9uIGluY2x1ZGluZyBkaWdpdGFsIGZvcm0sIHN1Y2ggYXMgYSBib29rLAogICAgcGFtcGhsZXQgYW5kIG90aGVyIHdyaXRpbmc7IGEgbGVjdHVyZSwgYWRkcmVzcywgc2VybW9uIG9yIG90aGVyIHdvcmsKICAgIG9mIHRoZSBzYW1lIG5hdHVyZTsgYSBkcmFtYXRpYyBvciBkcmFtYXRpY28tbXVzaWNhbCB3b3JrOyBhCiAgICBjaG9yZW9ncmFwaGljIHdvcmsgb3IgZW50ZXJ0YWlubWVudCBpbiBkdW1iIHNob3c7IGEgbXVzaWNhbAogICAgY29tcG9zaXRpb24gd2l0aCBvciB3aXRob3V0IHdvcmRzOyBhIGNpbmVtYXRvZ3JhcGhpYyB3b3JrIHRvIHdoaWNoIGFyZQogICAgYXNzaW1pbGF0ZWQgd29ya3MgZXhwcmVzc2VkIGJ5IGEgcHJvY2VzcyBhbmFsb2dvdXMgdG8gY2luZW1hdG9ncmFwaHk7CiAgICBhIHdvcmsgb2YgZHJhd2luZywgcGFpbnRpbmcsIGFyY2hpdGVjdHVyZSwgc2N1bHB0dXJlLCBlbmdyYXZpbmcgb3IKICAgIGxpdGhvZ3JhcGh5OyBhIHBob3RvZ3JhcGhpYyB3b3JrIHRvIHdoaWNoIGFyZSBhc3NpbWlsYXRlZCB3b3JrcwogICAgZXhwcmVzc2VkIGJ5IGEgcHJvY2VzcyBhbmFsb2dvdXMgdG8gcGhvdG9ncmFwaHk7IGEgd29yayBvZiBhcHBsaWVkCiAgICBhcnQ7IGFuIGlsbHVzdHJhdGlvbiwgbWFwLCBwbGFuLCBza2V0Y2ggb3IgdGhyZWUtZGltZW5zaW9uYWwgd29yawogICAgcmVsYXRpdmUgdG8gZ2VvZ3JhcGh5LCB0b3BvZ3JhcGh5LCBhcmNoaXRlY3R1cmUgb3Igc2NpZW5jZTsgYQogICAgcGVyZm9ybWFuY2U7IGEgYnJvYWRjYXN0OyBhIHBob25vZ3JhbTsgYSBjb21waWxhdGlvbiBvZiBkYXRhIHRvIHRoZQogICAgZXh0ZW50IGl0IGlzIHByb3RlY3RlZCBhcyBhIGNvcHlyaWdodGFibGUgd29yazsgb3IgYSB3b3JrIHBlcmZvcm1lZCBieQogICAgYSB2YXJpZXR5IG9yIGNpcmN1cyBwZXJmb3JtZXIgdG8gdGhlIGV4dGVudCBpdCBpcyBub3Qgb3RoZXJ3aXNlCiAgICBjb25zaWRlcmVkIGEgbGl0ZXJhcnkgb3IgYXJ0aXN0aWMgd29yay4gIllvdSIgbWVhbnMgYW4gaW5kaXZpZHVhbCBvcgogICAgZW50aXR5IGV4ZXJjaXNpbmcgcmlnaHRzIHVuZGVyIHRoaXMgTGljZW5zZSB3aG8gaGFzIG5vdCBwcmV2aW91c2x5CiAgICB2aW9sYXRlZCB0aGUgdGVybXMgb2YgdGhpcyBMaWNlbnNlIHdpdGggcmVzcGVjdCB0byB0aGUgV29yaywgb3Igd2hvCiAgICBoYXMgcmVjZWl2ZWQgZXhwcmVzcyBwZXJtaXNzaW9uIGZyb20gdGhlIExpY2Vuc29yIHRvIGV4ZXJjaXNlIHJpZ2h0cwogICAgdW5kZXIgdGhpcyBMaWNlbnNlIGRlc3BpdGUgYSBwcmV2aW91cyB2aW9sYXRpb24uICJQdWJsaWNseSBQZXJmb3JtIgogICAgbWVhbnMgdG8gcGVyZm9ybSBwdWJsaWMgcmVjaXRhdGlvbnMgb2YgdGhlIFdvcmsgYW5kIHRvIGNvbW11bmljYXRlIHRvCiAgICB0aGUgcHVibGljIHRob3NlIHB1YmxpYyByZWNpdGF0aW9ucywgYnkgYW55IG1lYW5zIG9yIHByb2Nlc3MsCiAgICBpbmNsdWRpbmcgYnkgd2lyZSBvciB3aXJlbGVzcyBtZWFucyBvciBwdWJsaWMgZGlnaXRhbCBwZXJmb3JtYW5jZXM7IHRvCiAgICBtYWtlIGF2YWlsYWJsZSB0byB0aGUgcHVibGljIFdvcmtzIGluIHN1Y2ggYSB3YXkgdGhhdCBtZW1iZXJzIG9mIHRoZQogICAgcHVibGljIG1heSBhY2Nlc3MgdGhlc2UgV29ya3MgZnJvbSBhIHBsYWNlIGFuZCBhdCBhIHBsYWNlIGluZGl2aWR1YWxseQogICAgY2hvc2VuIGJ5IHRoZW07IHRvIHBlcmZvcm0gdGhlIFdvcmsgdG8gdGhlIHB1YmxpYyBieSBhbnkgbWVhbnMgb3IKICAgIHByb2Nlc3MgYW5kIHRoZSBjb21tdW5pY2F0aW9uIHRvIHRoZSBwdWJsaWMgb2YgdGhlIHBlcmZvcm1hbmNlcyBvZiB0aGUKICAgIFdvcmssIGluY2x1ZGluZyBieSBwdWJsaWMgZGlnaXRhbCBwZXJmb3JtYW5jZTsgdG8gYnJvYWRjYXN0IGFuZAogICAgcmVicm9hZGNhc3QgdGhlIFdvcmsgYnkgYW55IG1lYW5zIGluY2x1ZGluZyBzaWducywgc291bmRzIG9yIGltYWdlcy4KICAgICJSZXByb2R1Y2UiIG1lYW5zIHRvIG1ha2UgY29waWVzIG9mIHRoZSBXb3JrIGJ5IGFueSBtZWFucyBpbmNsdWRpbmcKICAgIHdpdGhvdXQgbGltaXRhdGlvbiBieSBzb3VuZCBvciB2aXN1YWwgcmVjb3JkaW5ncyBhbmQgdGhlIHJpZ2h0IG9mCiAgICBmaXhhdGlvbiBhbmQgcmVwcm9kdWNpbmcgZml4YXRpb25zIG9mIHRoZSBXb3JrLCBpbmNsdWRpbmcgc3RvcmFnZSBvZiBhCiAgICBwcm90ZWN0ZWQgcGVyZm9ybWFuY2Ugb3IgcGhvbm9ncmFtIGluIGRpZ2l0YWwgZm9ybSBvciBvdGhlciBlbGVjdHJvbmljCiAgICBtZWRpdW0uIDIuIEZhaXIgRGVhbGluZyBSaWdodHMuIE5vdGhpbmcgaW4gdGhpcyBMaWNlbnNlIGlzIGludGVuZGVkIHRvCiAgICByZWR1Y2UsIGxpbWl0LCBvciByZXN0cmljdCBhbnkgdXNlcyBmcmVlIGZyb20gY29weXJpZ2h0IG9yIHJpZ2h0cwogICAgYXJpc2luZyBmcm9tIGxpbWl0YXRpb25zIG9yIGV4Y2VwdGlvbnMgdGhhdCBhcmUgcHJvdmlkZWQgZm9yIGluCiAgICBjb25uZWN0aW9uIHdpdGggdGhlIGNvcHlyaWdodCBwcm90ZWN0aW9uIHVuZGVyIGNvcHlyaWdodCBsYXcgb3Igb3RoZXIKICAgIGFwcGxpY2FibGUgbGF3cy4KCiAgICAzLiBMaWNlbnNlIEdyYW50LiBTdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGlzIExpY2Vuc2UsCiAgICBMaWNlbnNvciBoZXJlYnkgZ3JhbnRzIFlvdSBhIHdvcmxkd2lkZSwgcm95YWx0eS1mcmVlLCBub24tZXhjbHVzaXZlLAogICAgcGVycGV0dWFsIChmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBhcHBsaWNhYmxlIGNvcHlyaWdodCkgbGljZW5zZSB0bwogICAgZXhlcmNpc2UgdGhlIHJpZ2h0cyBpbiB0aGUgV29yayBhcyBzdGF0ZWQgYmVsb3c6CgogICAgdG8gUmVwcm9kdWNlIHRoZSBXb3JrLCB0byBpbmNvcnBvcmF0ZSB0aGUgV29yayBpbnRvIG9uZSBvciBtb3JlCiAgICBDb2xsZWN0aW9ucywgYW5kIHRvIFJlcHJvZHVjZSB0aGUgV29yayBhcyBpbmNvcnBvcmF0ZWQgaW4gdGhlCiAgICBDb2xsZWN0aW9uczsgdG8gY3JlYXRlIGFuZCBSZXByb2R1Y2UgQWRhcHRhdGlvbnMgcHJvdmlkZWQgdGhhdCBhbnkKICAgIHN1Y2ggQWRhcHRhdGlvbiwgaW5jbHVkaW5nIGFueSB0cmFuc2xhdGlvbiBpbiBhbnkgbWVkaXVtLCB0YWtlcwogICAgcmVhc29uYWJsZSBzdGVwcyB0byBjbGVhcmx5IGxhYmVsLCBkZW1hcmNhdGUgb3Igb3RoZXJ3aXNlIGlkZW50aWZ5CiAgICB0aGF0IGNoYW5nZXMgd2VyZSBtYWRlIHRvIHRoZSBvcmlnaW5hbCBXb3JrLiBGb3IgZXhhbXBsZSwgYQogICAgdHJhbnNsYXRpb24gY291bGQgYmUgbWFya2VkICJUaGUgb3JpZ2luYWwgd29yayB3YXMgdHJhbnNsYXRlZCBmcm9tCiAgICBFbmdsaXNoIHRvIFNwYW5pc2gsIiBvciBhIG1vZGlmaWNhdGlvbiBjb3VsZCBpbmRpY2F0ZSAiVGhlIG9yaWdpbmFsCiAgICB3b3JrIGhhcyBiZWVuIG1vZGlmaWVkLiI7IHRvIERpc3RyaWJ1dGUgYW5kIFB1YmxpY2x5IFBlcmZvcm0gdGhlIFdvcmsKICAgIGluY2x1ZGluZyBhcyBpbmNvcnBvcmF0ZWQgaW4gQ29sbGVjdGlvbnM7IGFuZCwgdG8gRGlzdHJpYnV0ZSBhbmQKICAgIFB1YmxpY2x5IFBlcmZvcm0gQWRhcHRhdGlvbnMuIEZvciB0aGUgYXZvaWRhbmNlIG9mIGRvdWJ0OgoKICAgIE5vbi13YWl2YWJsZSBDb21wdWxzb3J5IExpY2Vuc2UgU2NoZW1lcy4gSW4gdGhvc2UganVyaXNkaWN0aW9ucyBpbgogICAgd2hpY2ggdGhlIHJpZ2h0IHRvIGNvbGxlY3Qgcm95YWx0aWVzIHRocm91Z2ggYW55IHN0YXR1dG9yeSBvcgogICAgY29tcHVsc29yeSBsaWNlbnNpbmcgc2NoZW1lIGNhbm5vdCBiZSB3YWl2ZWQsIHRoZSBMaWNlbnNvciByZXNlcnZlcwogICAgdGhlIGV4Y2x1c2l2ZSByaWdodCB0byBjb2xsZWN0IHN1Y2ggcm95YWx0aWVzIGZvciBhbnkgZXhlcmNpc2UgYnkgWW91CiAgICBvZiB0aGUgcmlnaHRzIGdyYW50ZWQgdW5kZXIgdGhpcyBMaWNlbnNlOyBXYWl2YWJsZSBDb21wdWxzb3J5IExpY2Vuc2UKICAgIFNjaGVtZXMuIEluIHRob3NlIGp1cmlzZGljdGlvbnMgaW4gd2hpY2ggdGhlIHJpZ2h0IHRvIGNvbGxlY3QKICAgIHJveWFsdGllcyB0aHJvdWdoIGFueSBzdGF0dXRvcnkgb3IgY29tcHVsc29yeSBsaWNlbnNpbmcgc2NoZW1lIGNhbiBiZQogICAgd2FpdmVkLCB0aGUgTGljZW5zb3Igd2FpdmVzIHRoZSBleGNsdXNpdmUgcmlnaHQgdG8gY29sbGVjdCBzdWNoCiAgICByb3lhbHRpZXMgZm9yIGFueSBleGVyY2lzZSBieSBZb3Ugb2YgdGhlIHJpZ2h0cyBncmFudGVkIHVuZGVyIHRoaXMKICAgIExpY2Vuc2U7IGFuZCwgVm9sdW50YXJ5IExpY2Vuc2UgU2NoZW1lcy4gVGhlIExpY2Vuc29yIHdhaXZlcyB0aGUgcmlnaHQKICAgIHRvIGNvbGxlY3Qgcm95YWx0aWVzLCB3aGV0aGVyIGluZGl2aWR1YWxseSBvciwgaW4gdGhlIGV2ZW50IHRoYXQgdGhlCiAgICBMaWNlbnNvciBpcyBhIG1lbWJlciBvZiBhIGNvbGxlY3Rpbmcgc29jaWV0eSB0aGF0IGFkbWluaXN0ZXJzCiAgICB2b2x1bnRhcnkgbGljZW5zaW5nIHNjaGVtZXMsIHZpYSB0aGF0IHNvY2lldHksIGZyb20gYW55IGV4ZXJjaXNlIGJ5CiAgICBZb3Ugb2YgdGhlIHJpZ2h0cyBncmFudGVkIHVuZGVyIHRoaXMgTGljZW5zZS4gVGhlIGFib3ZlIHJpZ2h0cyBtYXkgYmUKICAgIGV4ZXJjaXNlZCBpbiBhbGwgbWVkaWEgYW5kIGZvcm1hdHMgd2hldGhlciBub3cga25vd24gb3IgaGVyZWFmdGVyCiAgICBkZXZpc2VkLiBUaGUgYWJvdmUgcmlnaHRzIGluY2x1ZGUgdGhlIHJpZ2h0IHRvIG1ha2Ugc3VjaCBtb2RpZmljYXRpb25zCiAgICBhcyBhcmUgdGVjaG5pY2FsbHkgbmVjZXNzYXJ5IHRvIGV4ZXJjaXNlIHRoZSByaWdodHMgaW4gb3RoZXIgbWVkaWEgYW5kCiAgICBmb3JtYXRzLiBTdWJqZWN0IHRvIFNlY3Rpb24gOChmKSwgYWxsIHJpZ2h0cyBub3QgZXhwcmVzc2x5IGdyYW50ZWQgYnkKICAgIExpY2Vuc29yIGFyZSBoZXJlYnkgcmVzZXJ2ZWQuCgogICAgNC4gUmVzdHJpY3Rpb25zLiBUaGUgbGljZW5zZSBncmFudGVkIGluIFNlY3Rpb24gMyBhYm92ZSBpcyBleHByZXNzbHkKICAgIG1hZGUgc3ViamVjdCB0byBhbmQgbGltaXRlZCBieSB0aGUgZm9sbG93aW5nIHJlc3RyaWN0aW9uczoKCiAgICBZb3UgbWF5IERpc3RyaWJ1dGUgb3IgUHVibGljbHkgUGVyZm9ybSB0aGUgV29yayBvbmx5IHVuZGVyIHRoZSB0ZXJtcwogICAgb2YgdGhpcyBMaWNlbnNlLiBZb3UgbXVzdCBpbmNsdWRlIGEgY29weSBvZiwgb3IgdGhlIFVuaWZvcm0gUmVzb3VyY2UKICAgIElkZW50aWZpZXIgKFVSSSkgZm9yLCB0aGlzIExpY2Vuc2Ugd2l0aCBldmVyeSBjb3B5IG9mIHRoZSBXb3JrIFlvdQogICAgRGlzdHJpYnV0ZSBvciBQdWJsaWNseSBQZXJmb3JtLiBZb3UgbWF5IG5vdCBvZmZlciBvciBpbXBvc2UgYW55IHRlcm1zCiAgICBvbiB0aGUgV29yayB0aGF0IHJlc3RyaWN0IHRoZSB0ZXJtcyBvZiB0aGlzIExpY2Vuc2Ugb3IgdGhlIGFiaWxpdHkgb2YKICAgIHRoZSByZWNpcGllbnQgb2YgdGhlIFdvcmsgdG8gZXhlcmNpc2UgdGhlIHJpZ2h0cyBncmFudGVkIHRvIHRoYXQKICAgIHJlY2lwaWVudCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIExpY2Vuc2UuIFlvdSBtYXkgbm90IHN1YmxpY2Vuc2UgdGhlCiAgICBXb3JrLiBZb3UgbXVzdCBrZWVwIGludGFjdCBhbGwgbm90aWNlcyB0aGF0IHJlZmVyIHRvIHRoaXMgTGljZW5zZSBhbmQKICAgIHRvIHRoZSBkaXNjbGFpbWVyIG9mIHdhcnJhbnRpZXMgd2l0aCBldmVyeSBjb3B5IG9mIHRoZSBXb3JrIFlvdQogICAgRGlzdHJpYnV0ZSBvciBQdWJsaWNseSBQZXJmb3JtLiBXaGVuIFlvdSBEaXN0cmlidXRlIG9yIFB1YmxpY2x5CiAgICBQZXJmb3JtIHRoZSBXb3JrLCBZb3UgbWF5IG5vdCBpbXBvc2UgYW55IGVmZmVjdGl2ZSB0ZWNobm9sb2dpY2FsCiAgICBtZWFzdXJlcyBvbiB0aGUgV29yayB0aGF0IHJlc3RyaWN0IHRoZSBhYmlsaXR5IG9mIGEgcmVjaXBpZW50IG9mIHRoZQogICAgV29yayBmcm9tIFlvdSB0byBleGVyY2lzZSB0aGUgcmlnaHRzIGdyYW50ZWQgdG8gdGhhdCByZWNpcGllbnQgdW5kZXIKICAgIHRoZSB0ZXJtcyBvZiB0aGUgTGljZW5zZS4gVGhpcyBTZWN0aW9uIDQoYSkgYXBwbGllcyB0byB0aGUgV29yayBhcwogICAgaW5jb3Jwb3JhdGVkIGluIGEgQ29sbGVjdGlvbiwgYnV0IHRoaXMgZG9lcyBub3QgcmVxdWlyZSB0aGUgQ29sbGVjdGlvbgogICAgYXBhcnQgZnJvbSB0aGUgV29yayBpdHNlbGYgdG8gYmUgbWFkZSBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGlzCiAgICBMaWNlbnNlLiBJZiBZb3UgY3JlYXRlIGEgQ29sbGVjdGlvbiwgdXBvbiBub3RpY2UgZnJvbSBhbnkgTGljZW5zb3IgWW91CiAgICBtdXN0LCB0byB0aGUgZXh0ZW50IHByYWN0aWNhYmxlLCByZW1vdmUgZnJvbSB0aGUgQ29sbGVjdGlvbiBhbnkgY3JlZGl0CiAgICBhcyByZXF1aXJlZCBieSBTZWN0aW9uIDQoYyksIGFzIHJlcXVlc3RlZC4gSWYgWW91IGNyZWF0ZSBhbgogICAgQWRhcHRhdGlvbiwgdXBvbiBub3RpY2UgZnJvbSBhbnkgTGljZW5zb3IgWW91IG11c3QsIHRvIHRoZSBleHRlbnQKICAgIHByYWN0aWNhYmxlLCByZW1vdmUgZnJvbSB0aGUgQWRhcHRhdGlvbiBhbnkgY3JlZGl0IGFzIHJlcXVpcmVkIGJ5CiAgICBTZWN0aW9uIDQoYyksIGFzIHJlcXVlc3RlZC4gWW91IG1heSBEaXN0cmlidXRlIG9yIFB1YmxpY2x5IFBlcmZvcm0gYW4KICAgIEFkYXB0YXRpb24gb25seSB1bmRlciB0aGUgdGVybXMgb2Y6IChpKSB0aGlzIExpY2Vuc2U7IChpaSkgYSBsYXRlcgogICAgdmVyc2lvbiBvZiB0aGlzIExpY2Vuc2Ugd2l0aCB0aGUgc2FtZSBMaWNlbnNlIEVsZW1lbnRzIGFzIHRoaXMKICAgIExpY2Vuc2U7IChpaWkpIGEgQ3JlYXRpdmUgQ29tbW9ucyBqdXJpc2RpY3Rpb24gbGljZW5zZSAoZWl0aGVyIHRoaXMgb3IKICAgIGEgbGF0ZXIgbGljZW5zZSB2ZXJzaW9uKSB0aGF0IGNvbnRhaW5zIHRoZSBzYW1lIExpY2Vuc2UgRWxlbWVudHMgYXMKICAgIHRoaXMgTGljZW5zZSAoZS5nLiwgQXR0cmlidXRpb24tU2hhcmVBbGlrZSAzLjAgVVMpKTsgKGl2KSBhIENyZWF0aXZlCiAgICBDb21tb25zIENvbXBhdGlibGUgTGljZW5zZS4gSWYgeW91IGxpY2Vuc2UgdGhlIEFkYXB0YXRpb24gdW5kZXIgb25lIG9mCiAgICB0aGUgbGljZW5zZXMgbWVudGlvbmVkIGluIChpdiksIHlvdSBtdXN0IGNvbXBseSB3aXRoIHRoZSB0ZXJtcyBvZiB0aGF0CiAgICBsaWNlbnNlLiBJZiB5b3UgbGljZW5zZSB0aGUgQWRhcHRhdGlvbiB1bmRlciB0aGUgdGVybXMgb2YgYW55IG9mIHRoZQogICAgbGljZW5zZXMgbWVudGlvbmVkIGluIChpKSwgKGlpKSBvciAoaWlpKSAodGhlICJBcHBsaWNhYmxlIExpY2Vuc2UiKSwKICAgIHlvdSBtdXN0IGNvbXBseSB3aXRoIHRoZSB0ZXJtcyBvZiB0aGUgQXBwbGljYWJsZSBMaWNlbnNlIGdlbmVyYWxseSBhbmQKICAgIHRoZSBmb2xsb3dpbmcgcHJvdmlzaW9uczogKEkpIFlvdSBtdXN0IGluY2x1ZGUgYSBjb3B5IG9mLCBvciB0aGUgVVJJCiAgICBmb3IsIHRoZSBBcHBsaWNhYmxlIExpY2Vuc2Ugd2l0aCBldmVyeSBjb3B5IG9mIGVhY2ggQWRhcHRhdGlvbiBZb3UKICAgIERpc3RyaWJ1dGUgb3IgUHVibGljbHkgUGVyZm9ybTsgKElJKSBZb3UgbWF5IG5vdCBvZmZlciBvciBpbXBvc2UgYW55CiAgICB0ZXJtcyBvbiB0aGUgQWRhcHRhdGlvbiB0aGF0IHJlc3RyaWN0IHRoZSB0ZXJtcyBvZiB0aGUgQXBwbGljYWJsZQogICAgTGljZW5zZSBvciB0aGUgYWJpbGl0eSBvZiB0aGUgcmVjaXBpZW50IG9mIHRoZSBBZGFwdGF0aW9uIHRvIGV4ZXJjaXNlCiAgICB0aGUgcmlnaHRzIGdyYW50ZWQgdG8gdGhhdCByZWNpcGllbnQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBBcHBsaWNhYmxlCiAgICBMaWNlbnNlOyAoSUlJKSBZb3UgbXVzdCBrZWVwIGludGFjdCBhbGwgbm90aWNlcyB0aGF0IHJlZmVyIHRvIHRoZQogICAgQXBwbGljYWJsZSBMaWNlbnNlIGFuZCB0byB0aGUgZGlzY2xhaW1lciBvZiB3YXJyYW50aWVzIHdpdGggZXZlcnkgY29weQogICAgb2YgdGhlIFdvcmsgYXMgaW5jbHVkZWQgaW4gdGhlIEFkYXB0YXRpb24gWW91IERpc3RyaWJ1dGUgb3IgUHVibGljbHkKICAgIFBlcmZvcm07IChJVikgd2hlbiBZb3UgRGlzdHJpYnV0ZSBvciBQdWJsaWNseSBQZXJmb3JtIHRoZSBBZGFwdGF0aW9uLAogICAgWW91IG1heSBub3QgaW1wb3NlIGFueSBlZmZlY3RpdmUgdGVjaG5vbG9naWNhbCBtZWFzdXJlcyBvbiB0aGUKICAgIEFkYXB0YXRpb24gdGhhdCByZXN0cmljdCB0aGUgYWJpbGl0eSBvZiBhIHJlY2lwaWVudCBvZiB0aGUgQWRhcHRhdGlvbgogICAgZnJvbSBZb3UgdG8gZXhlcmNpc2UgdGhlIHJpZ2h0cyBncmFudGVkIHRvIHRoYXQgcmVjaXBpZW50IHVuZGVyIHRoZQogICAgdGVybXMgb2YgdGhlIEFwcGxpY2FibGUgTGljZW5zZS4gVGhpcyBTZWN0aW9uIDQoYikgYXBwbGllcyB0byB0aGUKICAgIEFkYXB0YXRpb24gYXMgaW5jb3Jwb3JhdGVkIGluIGEgQ29sbGVjdGlvbiwgYnV0IHRoaXMgZG9lcyBub3QgcmVxdWlyZQogICAgdGhlIENvbGxlY3Rpb24gYXBhcnQgZnJvbSB0aGUgQWRhcHRhdGlvbiBpdHNlbGYgdG8gYmUgbWFkZSBzdWJqZWN0IHRvCiAgICB0aGUgdGVybXMgb2YgdGhlIEFwcGxpY2FibGUgTGljZW5zZS4gSWYgWW91IERpc3RyaWJ1dGUsIG9yIFB1YmxpY2x5CiAgICBQZXJmb3JtIHRoZSBXb3JrIG9yIGFueSBBZGFwdGF0aW9ucyBvciBDb2xsZWN0aW9ucywgWW91IG11c3QsIHVubGVzcyBhCiAgICByZXF1ZXN0IGhhcyBiZWVuIG1hZGUgcHVyc3VhbnQgdG8gU2VjdGlvbiA0KGEpLCBrZWVwIGludGFjdCBhbGwKICAgIGNvcHlyaWdodCBub3RpY2VzIGZvciB0aGUgV29yayBhbmQgcHJvdmlkZSwgcmVhc29uYWJsZSB0byB0aGUgbWVkaXVtCiAgICBvciBtZWFucyBZb3UgYXJlIHV0aWxpemluZzogKGkpIHRoZSBuYW1lIG9mIHRoZSBPcmlnaW5hbCBBdXRob3IgKG9yCiAgICBwc2V1ZG9ueW0sIGlmIGFwcGxpY2FibGUpIGlmIHN1cHBsaWVkLCBhbmQvb3IgaWYgdGhlIE9yaWdpbmFsIEF1dGhvcgogICAgYW5kL29yIExpY2Vuc29yIGRlc2lnbmF0ZSBhbm90aGVyIHBhcnR5IG9yIHBhcnRpZXMgKGUuZy4sIGEgc3BvbnNvcgogICAgaW5zdGl0dXRlLCBwdWJsaXNoaW5nIGVudGl0eSwgam91cm5hbCkgZm9yIGF0dHJpYnV0aW9uICgiQXR0cmlidXRpb24KICAgIFBhcnRpZXMiKSBpbiBMaWNlbnNvcidzIGNvcHlyaWdodCBub3RpY2UsIHRlcm1zIG9mIHNlcnZpY2Ugb3IgYnkgb3RoZXIKICAgIHJlYXNvbmFibGUgbWVhbnMsIHRoZSBuYW1lIG9mIHN1Y2ggcGFydHkgb3IgcGFydGllczsgKGlpKSB0aGUgdGl0bGUgb2YKICAgIHRoZSBXb3JrIGlmIHN1cHBsaWVkOyAoaWlpKSB0byB0aGUgZXh0ZW50IHJlYXNvbmFibHkgcHJhY3RpY2FibGUsIHRoZQogICAgVVJJLCBpZiBhbnksIHRoYXQgTGljZW5zb3Igc3BlY2lmaWVzIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCB0aGUgV29yaywKICAgIHVubGVzcyBzdWNoIFVSSSBkb2VzIG5vdCByZWZlciB0byB0aGUgY29weXJpZ2h0IG5vdGljZSBvciBsaWNlbnNpbmcKICAgIGluZm9ybWF0aW9uIGZvciB0aGUgV29yazsgYW5kIChpdikgLCBjb25zaXN0ZW50IHdpdGggU3NlY3Rpb24gMyhiKSwgaW4KICAgIHRoZSBjYXNlIG9mIGFuIEFkYXB0YXRpb24sIGEgY3JlZGl0IGlkZW50aWZ5aW5nIHRoZSB1c2Ugb2YgdGhlIFdvcmsgaW4KICAgIHRoZSBBZGFwdGF0aW9uIChlLmcuLCAiRnJlbmNoIHRyYW5zbGF0aW9uIG9mIHRoZSBXb3JrIGJ5IE9yaWdpbmFsCiAgICBBdXRob3IsIiBvciAiU2NyZWVucGxheSBiYXNlZCBvbiBvcmlnaW5hbCBXb3JrIGJ5IE9yaWdpbmFsIEF1dGhvciIpLgogICAgVGhlIGNyZWRpdCByZXF1aXJlZCBieSB0aGlzIFNlY3Rpb24gNChjKSBtYXkgYmUgaW1wbGVtZW50ZWQgaW4gYW55CiAgICByZWFzb25hYmxlIG1hbm5lcjsgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgaW4gdGhlIGNhc2Ugb2YgYSBBZGFwdGF0aW9uCiAgICBvciBDb2xsZWN0aW9uLCBhdCBhIG1pbmltdW0gc3VjaCBjcmVkaXQgd2lsbCBhcHBlYXIsIGlmIGEgY3JlZGl0IGZvcgogICAgYWxsIGNvbnRyaWJ1dGluZyBhdXRob3JzIG9mIHRoZSBBZGFwdGF0aW9uIG9yIENvbGxlY3Rpb24gYXBwZWFycywgdGhlbgogICAgYXMgcGFydCBvZiB0aGVzZSBjcmVkaXRzIGFuZCBpbiBhIG1hbm5lciBhdCBsZWFzdCBhcyBwcm9taW5lbnQgYXMgdGhlCiAgICBjcmVkaXRzIGZvciB0aGUgb3RoZXIgY29udHJpYnV0aW5nIGF1dGhvcnMuIEZvciB0aGUgYXZvaWRhbmNlIG9mCiAgICBkb3VidCwgWW91IG1heSBvbmx5IHVzZSB0aGUgY3JlZGl0IHJlcXVpcmVkIGJ5IHRoaXMgU2VjdGlvbiBmb3IgdGhlCiAgICBwdXJwb3NlIG9mIGF0dHJpYnV0aW9uIGluIHRoZSBtYW5uZXIgc2V0IG91dCBhYm92ZSBhbmQsIGJ5IGV4ZXJjaXNpbmcKICAgIFlvdXIgcmlnaHRzIHVuZGVyIHRoaXMgTGljZW5zZSwgWW91IG1heSBub3QgaW1wbGljaXRseSBvciBleHBsaWNpdGx5CiAgICBhc3NlcnQgb3IgaW1wbHkgYW55IGNvbm5lY3Rpb24gd2l0aCwgc3BvbnNvcnNoaXAgb3IgZW5kb3JzZW1lbnQgYnkgdGhlCiAgICBPcmlnaW5hbCBBdXRob3IsIExpY2Vuc29yIGFuZC9vciBBdHRyaWJ1dGlvbiBQYXJ0aWVzLCBhcyBhcHByb3ByaWF0ZSwKICAgIG9mIFlvdSBvciBZb3VyIHVzZSBvZiB0aGUgV29yaywgd2l0aG91dCB0aGUgc2VwYXJhdGUsIGV4cHJlc3MgcHJpb3IKICAgIHdyaXR0ZW4gcGVybWlzc2lvbiBvZiB0aGUgT3JpZ2luYWwgQXV0aG9yLCBMaWNlbnNvciBhbmQvb3IgQXR0cmlidXRpb24KICAgIFBhcnRpZXMuIEV4Y2VwdCBhcyBvdGhlcndpc2UgYWdyZWVkIGluIHdyaXRpbmcgYnkgdGhlIExpY2Vuc29yIG9yIGFzCiAgICBtYXkgYmUgb3RoZXJ3aXNlIHBlcm1pdHRlZCBieSBhcHBsaWNhYmxlIGxhdywgaWYgWW91IFJlcHJvZHVjZSwKICAgIERpc3RyaWJ1dGUgb3IgUHVibGljbHkgUGVyZm9ybSB0aGUgV29yayBlaXRoZXIgYnkgaXRzZWxmIG9yIGFzIHBhcnQgb2YKICAgIGFueSBBZGFwdGF0aW9ucyBvciBDb2xsZWN0aW9ucywgWW91IG11c3Qgbm90IGRpc3RvcnQsIG11dGlsYXRlLCBtb2RpZnkKICAgIG9yIHRha2Ugb3RoZXIgZGVyb2dhdG9yeSBhY3Rpb24gaW4gcmVsYXRpb24gdG8gdGhlIFdvcmsgd2hpY2ggd291bGQgYmUKICAgIHByZWp1ZGljaWFsIHRvIHRoZSBPcmlnaW5hbCBBdXRob3IncyBob25vciBvciByZXB1dGF0aW9uLiBMaWNlbnNvcgogICAgYWdyZWVzIHRoYXQgaW4gdGhvc2UganVyaXNkaWN0aW9ucyAoZS5nLiBKYXBhbiksIGluIHdoaWNoIGFueSBleGVyY2lzZQogICAgb2YgdGhlIHJpZ2h0IGdyYW50ZWQgaW4gU2VjdGlvbiAzKGIpIG9mIHRoaXMgTGljZW5zZSAodGhlIHJpZ2h0IHRvCiAgICBtYWtlIEFkYXB0YXRpb25zKSB3b3VsZCBiZSBkZWVtZWQgdG8gYmUgYSBkaXN0b3J0aW9uLCBtdXRpbGF0aW9uLAogICAgbW9kaWZpY2F0aW9uIG9yIG90aGVyIGRlcm9nYXRvcnkgYWN0aW9uIHByZWp1ZGljaWFsIHRvIHRoZSBPcmlnaW5hbAogICAgQXV0aG9yJ3MgaG9ub3IgYW5kIHJlcHV0YXRpb24sIHRoZSBMaWNlbnNvciB3aWxsIHdhaXZlIG9yIG5vdCBhc3NlcnQsCiAgICBhcyBhcHByb3ByaWF0ZSwgdGhpcyBTZWN0aW9uLCB0byB0aGUgZnVsbGVzdCBleHRlbnQgcGVybWl0dGVkIGJ5IHRoZQogICAgYXBwbGljYWJsZSBuYXRpb25hbCBsYXcsIHRvIGVuYWJsZSBZb3UgdG8gcmVhc29uYWJseSBleGVyY2lzZSBZb3VyCiAgICByaWdodCB1bmRlciBTZWN0aW9uIDMoYikgb2YgdGhpcyBMaWNlbnNlIChyaWdodCB0byBtYWtlIEFkYXB0YXRpb25zKQogICAgYnV0IG5vdCBvdGhlcndpc2UuIDUuIFJlcHJlc2VudGF0aW9ucywgV2FycmFudGllcyBhbmQgRGlzY2xhaW1lcgoKICAgIFVOTEVTUyBPVEhFUldJU0UgTVVUVUFMTFkgQUdSRUVEIFRPIEJZIFRIRSBQQVJUSUVTIElOIFdSSVRJTkcsCiAgICBMSUNFTlNPUiBPRkZFUlMgVEhFIFdPUksgQVMtSVMgQU5EIE1BS0VTIE5PIFJFUFJFU0VOVEFUSU9OUyBPUgogICAgV0FSUkFOVElFUyBPRiBBTlkgS0lORCBDT05DRVJOSU5HIFRIRSBXT1JLLCBFWFBSRVNTLCBJTVBMSUVELAogICAgU1RBVFVUT1JZIE9SIE9USEVSV0lTRSwgSU5DTFVESU5HLCBXSVRIT1VUIExJTUlUQVRJT04sIFdBUlJBTlRJRVMgT0YKICAgIFRJVExFLCBNRVJDSEFOVElCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLAogICAgTk9OSU5GUklOR0VNRU5ULCBPUiBUSEUgQUJTRU5DRSBPRiBMQVRFTlQgT1IgT1RIRVIgREVGRUNUUywgQUNDVVJBQ1ksCiAgICBPUiBUSEUgUFJFU0VOQ0UgT0YgQUJTRU5DRSBPRiBFUlJPUlMsIFdIRVRIRVIgT1IgTk9UIERJU0NPVkVSQUJMRS4KICAgIFNPTUUgSlVSSVNESUNUSU9OUyBETyBOT1QgQUxMT1cgVEhFIEVYQ0xVU0lPTiBPRiBJTVBMSUVEIFdBUlJBTlRJRVMsCiAgICBTTyBTVUNIIEVYQ0xVU0lPTiBNQVkgTk9UIEFQUExZIFRPIFlPVS4KCiAgICA2LiBMaW1pdGF0aW9uIG9uIExpYWJpbGl0eS4gRVhDRVBUIFRPIFRIRSBFWFRFTlQgUkVRVUlSRUQgQlkKICAgIEFQUExJQ0FCTEUgTEFXLCBJTiBOTyBFVkVOVCBXSUxMIExJQ0VOU09SIEJFIExJQUJMRSBUTyBZT1UgT04gQU5ZCiAgICBMRUdBTCBUSEVPUlkgRk9SIEFOWSBTUEVDSUFMLCBJTkNJREVOVEFMLCBDT05TRVFVRU5USUFMLCBQVU5JVElWRSBPUgogICAgRVhFTVBMQVJZIERBTUFHRVMgQVJJU0lORyBPVVQgT0YgVEhJUyBMSUNFTlNFIE9SIFRIRSBVU0UgT0YgVEhFIFdPUkssCiAgICBFVkVOIElGIExJQ0VOU09SIEhBUyBCRUVOIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFUy4KCiAgICA3LiBUZXJtaW5hdGlvbgoKICAgIFRoaXMgTGljZW5zZSBhbmQgdGhlIHJpZ2h0cyBncmFudGVkIGhlcmV1bmRlciB3aWxsIHRlcm1pbmF0ZQogICAgYXV0b21hdGljYWxseSB1cG9uIGFueSBicmVhY2ggYnkgWW91IG9mIHRoZSB0ZXJtcyBvZiB0aGlzIExpY2Vuc2UuCiAgICBJbmRpdmlkdWFscyBvciBlbnRpdGllcyB3aG8gaGF2ZSByZWNlaXZlZCBBZGFwdGF0aW9ucyBvciBDb2xsZWN0aW9ucwogICAgZnJvbSBZb3UgdW5kZXIgdGhpcyBMaWNlbnNlLCBob3dldmVyLCB3aWxsIG5vdCBoYXZlIHRoZWlyIGxpY2Vuc2VzCiAgICB0ZXJtaW5hdGVkIHByb3ZpZGVkIHN1Y2ggaW5kaXZpZHVhbHMgb3IgZW50aXRpZXMgcmVtYWluIGluIGZ1bGwKICAgIGNvbXBsaWFuY2Ugd2l0aCB0aG9zZSBsaWNlbnNlcy4gU2VjdGlvbnMgMSwgMiwgNSwgNiwgNywgYW5kIDggd2lsbAogICAgc3Vydml2ZSBhbnkgdGVybWluYXRpb24gb2YgdGhpcyBMaWNlbnNlLiBTdWJqZWN0IHRvIHRoZSBhYm92ZSB0ZXJtcwogICAgYW5kIGNvbmRpdGlvbnMsIHRoZSBsaWNlbnNlIGdyYW50ZWQgaGVyZSBpcyBwZXJwZXR1YWwgKGZvciB0aGUKICAgIGR1cmF0aW9uIG9mIHRoZSBhcHBsaWNhYmxlIGNvcHlyaWdodCBpbiB0aGUgV29yaykuIE5vdHdpdGhzdGFuZGluZyB0aGUKICAgIGFib3ZlLCBMaWNlbnNvciByZXNlcnZlcyB0aGUgcmlnaHQgdG8gcmVsZWFzZSB0aGUgV29yayB1bmRlciBkaWZmZXJlbnQKICAgIGxpY2Vuc2UgdGVybXMgb3IgdG8gc3RvcCBkaXN0cmlidXRpbmcgdGhlIFdvcmsgYXQgYW55IHRpbWU7IHByb3ZpZGVkLAogICAgaG93ZXZlciB0aGF0IGFueSBzdWNoIGVsZWN0aW9uIHdpbGwgbm90IHNlcnZlIHRvIHdpdGhkcmF3IHRoaXMgTGljZW5zZQogICAgKG9yIGFueSBvdGhlciBsaWNlbnNlIHRoYXQgaGFzIGJlZW4sIG9yIGlzIHJlcXVpcmVkIHRvIGJlLCBncmFudGVkCiAgICB1bmRlciB0aGUgdGVybXMgb2YgdGhpcyBMaWNlbnNlKSwgYW5kIHRoaXMgTGljZW5zZSB3aWxsIGNvbnRpbnVlIGluCiAgICBmdWxsIGZvcmNlIGFuZCBlZmZlY3QgdW5sZXNzIHRlcm1pbmF0ZWQgYXMgc3RhdGVkIGFib3ZlLiA4LgogICAgTWlzY2VsbGFuZW91cwoKICAgIEVhY2ggdGltZSBZb3UgRGlzdHJpYnV0ZSBvciBQdWJsaWNseSBQZXJmb3JtIHRoZSBXb3JrIG9yIGEgQ29sbGVjdGlvbiwKICAgIHRoZSBMaWNlbnNvciBvZmZlcnMgdG8gdGhlIHJlY2lwaWVudCBhIGxpY2Vuc2UgdG8gdGhlIFdvcmsgb24gdGhlIHNhbWUKICAgIHRlcm1zIGFuZCBjb25kaXRpb25zIGFzIHRoZSBsaWNlbnNlIGdyYW50ZWQgdG8gWW91IHVuZGVyIHRoaXMgTGljZW5zZS4KICAgIEVhY2ggdGltZSBZb3UgRGlzdHJpYnV0ZSBvciBQdWJsaWNseSBQZXJmb3JtIGFuIEFkYXB0YXRpb24sIExpY2Vuc29yCiAgICBvZmZlcnMgdG8gdGhlIHJlY2lwaWVudCBhIGxpY2Vuc2UgdG8gdGhlIG9yaWdpbmFsIFdvcmsgb24gdGhlIHNhbWUKICAgIHRlcm1zIGFuZCBjb25kaXRpb25zIGFzIHRoZSBsaWNlbnNlIGdyYW50ZWQgdG8gWW91IHVuZGVyIHRoaXMgTGljZW5zZS4KICAgIElmIGFueSBwcm92aXNpb24gb2YgdGhpcyBMaWNlbnNlIGlzIGludmFsaWQgb3IgdW5lbmZvcmNlYWJsZSB1bmRlcgogICAgYXBwbGljYWJsZSBsYXcsIGl0IHNoYWxsIG5vdCBhZmZlY3QgdGhlIHZhbGlkaXR5IG9yIGVuZm9yY2VhYmlsaXR5IG9mCiAgICB0aGUgcmVtYWluZGVyIG9mIHRoZSB0ZXJtcyBvZiB0aGlzIExpY2Vuc2UsIGFuZCB3aXRob3V0IGZ1cnRoZXIgYWN0aW9uCiAgICBieSB0aGUgcGFydGllcyB0byB0aGlzIGFncmVlbWVudCwgc3VjaCBwcm92aXNpb24gc2hhbGwgYmUgcmVmb3JtZWQgdG8KICAgIHRoZSBtaW5pbXVtIGV4dGVudCBuZWNlc3NhcnkgdG8gbWFrZSBzdWNoIHByb3Zpc2lvbiB2YWxpZCBhbmQKICAgIGVuZm9yY2VhYmxlLiBObyB0ZXJtIG9yIHByb3Zpc2lvbiBvZiB0aGlzIExpY2Vuc2Ugc2hhbGwgYmUgZGVlbWVkCiAgICB3YWl2ZWQgYW5kIG5vIGJyZWFjaCBjb25zZW50ZWQgdG8gdW5sZXNzIHN1Y2ggd2FpdmVyIG9yIGNvbnNlbnQgc2hhbGwKICAgIGJlIGluIHdyaXRpbmcgYW5kIHNpZ25lZCBieSB0aGUgcGFydHkgdG8gYmUgY2hhcmdlZCB3aXRoIHN1Y2ggd2FpdmVyCiAgICBvciBjb25zZW50LiBUaGlzIExpY2Vuc2UgY29uc3RpdHV0ZXMgdGhlIGVudGlyZSBhZ3JlZW1lbnQgYmV0d2VlbiB0aGUKICAgIHBhcnRpZXMgd2l0aCByZXNwZWN0IHRvIHRoZSBXb3JrIGxpY2Vuc2VkIGhlcmUuIFRoZXJlIGFyZSBubwogICAgdW5kZXJzdGFuZGluZ3MsIGFncmVlbWVudHMgb3IgcmVwcmVzZW50YXRpb25zIHdpdGggcmVzcGVjdCB0byB0aGUgV29yawogICAgbm90IHNwZWNpZmllZCBoZXJlLiBMaWNlbnNvciBzaGFsbCBub3QgYmUgYm91bmQgYnkgYW55IGFkZGl0aW9uYWwKICAgIHByb3Zpc2lvbnMgdGhhdCBtYXkgYXBwZWFyIGluIGFueSBjb21tdW5pY2F0aW9uIGZyb20gWW91LiBUaGlzIExpY2Vuc2UKICAgIG1heSBub3QgYmUgbW9kaWZpZWQgd2l0aG91dCB0aGUgbXV0dWFsIHdyaXR0ZW4gYWdyZWVtZW50IG9mIHRoZQogICAgTGljZW5zb3IgYW5kIFlvdS4gVGhlIHJpZ2h0cyBncmFudGVkIHVuZGVyLCBhbmQgdGhlIHN1YmplY3QgbWF0dGVyCiAgICByZWZlcmVuY2VkLCBpbiB0aGlzIExpY2Vuc2Ugd2VyZSBkcmFmdGVkIHV0aWxpemluZyB0aGUgdGVybWlub2xvZ3kgb2YKICAgIHRoZSBCZXJuZSBDb252ZW50aW9uIGZvciB0aGUgUHJvdGVjdGlvbiBvZiBMaXRlcmFyeSBhbmQgQXJ0aXN0aWMgV29ya3MKICAgIChhcyBhbWVuZGVkIG9uIFNlcHRlbWJlciAyOCwgMTk3OSksIHRoZSBSb21lIENvbnZlbnRpb24gb2YgMTk2MSwgdGhlCiAgICBXSVBPIENvcHlyaWdodCBUcmVhdHkgb2YgMTk5NiwgdGhlIFdJUE8gUGVyZm9ybWFuY2VzIGFuZCBQaG9ub2dyYW1zCiAgICBUcmVhdHkgb2YgMTk5NiBhbmQgdGhlIFVuaXZlcnNhbCBDb3B5cmlnaHQgQ29udmVudGlvbiAoYXMgcmV2aXNlZCBvbgogICAgSnVseSAyNCwgMTk3MSkuIFRoZXNlIHJpZ2h0cyBhbmQgc3ViamVjdCBtYXR0ZXIgdGFrZSBlZmZlY3QgaW4gdGhlCiAgICByZWxldmFudCBqdXJpc2RpY3Rpb24gaW4gd2hpY2ggdGhlIExpY2Vuc2UgdGVybXMgYXJlIHNvdWdodCB0byBiZQogICAgZW5mb3JjZWQgYWNjb3JkaW5nIHRvIHRoZSBjb3JyZXNwb25kaW5nIHByb3Zpc2lvbnMgb2YgdGhlCiAgICBpbXBsZW1lbnRhdGlvbiBvZiB0aG9zZSB0cmVhdHkgcHJvdmlzaW9ucyBpbiB0aGUgYXBwbGljYWJsZSBuYXRpb25hbAogICAgbGF3LiBJZiB0aGUgc3RhbmRhcmQgc3VpdGUgb2YgcmlnaHRzIGdyYW50ZWQgdW5kZXIgYXBwbGljYWJsZQogICAgY29weXJpZ2h0IGxhdyBpbmNsdWRlcyBhZGRpdGlvbmFsIHJpZ2h0cyBub3QgZ3JhbnRlZCB1bmRlciB0aGlzCiAgICBMaWNlbnNlLCBzdWNoIGFkZGl0aW9uYWwgcmlnaHRzIGFyZSBkZWVtZWQgdG8gYmUgaW5jbHVkZWQgaW4gdGhlCiAgICBMaWNlbnNlOyB0aGlzIExpY2Vuc2UgaXMgbm90IGludGVuZGVkIHRvIHJlc3RyaWN0IHRoZSBsaWNlbnNlIG9mIGFueQogICAgcmlnaHRzIHVuZGVyIGFwcGxpY2FibGUgbGF3LiBDcmVhdGl2ZSBDb21tb25zIE5vdGljZQoKICAgIENyZWF0aXZlIENvbW1vbnMgaXMgbm90IGEgcGFydHkgdG8gdGhpcyBMaWNlbnNlLCBhbmQgbWFrZXMgbm8gd2FycmFudHkKICAgIHdoYXRzb2V2ZXIgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBXb3JrLiBDcmVhdGl2ZSBDb21tb25zIHdpbGwgbm90IGJlCiAgICBsaWFibGUgdG8gWW91IG9yIGFueSBwYXJ0eSBvbiBhbnkgbGVnYWwgdGhlb3J5IGZvciBhbnkgZGFtYWdlcwogICAgd2hhdHNvZXZlciwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiBhbnkgZ2VuZXJhbCwgc3BlY2lhbCwKICAgIGluY2lkZW50YWwgb3IgY29uc2VxdWVudGlhbCBkYW1hZ2VzIGFyaXNpbmcgaW4gY29ubmVjdGlvbiB0byB0aGlzCiAgICBsaWNlbnNlLiBOb3R3aXRoc3RhbmRpbmcgdGhlIGZvcmVnb2luZyB0d28gKDIpIHNlbnRlbmNlcywgaWYgQ3JlYXRpdmUKICAgIENvbW1vbnMgaGFzIGV4cHJlc3NseSBpZGVudGlmaWVkIGl0c2VsZiBhcyB0aGUgTGljZW5zb3IgaGVyZXVuZGVyLCBpdAogICAgc2hhbGwgaGF2ZSBhbGwgcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyBvZiBMaWNlbnNvci4KCiAgICBFeGNlcHQgZm9yIHRoZSBsaW1pdGVkIHB1cnBvc2Ugb2YgaW5kaWNhdGluZyB0byB0aGUgcHVibGljIHRoYXQgdGhlCiAgICBXb3JrIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBDQ1BMLCBDcmVhdGl2ZSBDb21tb25zIGRvZXMgbm90IGF1dGhvcml6ZQogICAgdGhlIHVzZSBieSBlaXRoZXIgcGFydHkgb2YgdGhlIHRyYWRlbWFyayAiQ3JlYXRpdmUgQ29tbW9ucyIgb3IgYW55CiAgICByZWxhdGVkIHRyYWRlbWFyayBvciBsb2dvIG9mIENyZWF0aXZlIENvbW1vbnMgd2l0aG91dCB0aGUgcHJpb3IKICAgIHdyaXR0ZW4gY29uc2VudCBvZiBDcmVhdGl2ZSBDb21tb25zLiBBbnkgcGVybWl0dGVkIHVzZSB3aWxsIGJlIGluCiAgICBjb21wbGlhbmNlIHdpdGggQ3JlYXRpdmUgQ29tbW9ucycgdGhlbi1jdXJyZW50IHRyYWRlbWFyayB1c2FnZQogICAgZ3VpZGVsaW5lcywgYXMgbWF5IGJlIHB1Ymxpc2hlZCBvbiBpdHMgd2Vic2l0ZSBvciBvdGhlcndpc2UgbWFkZQogICAgYXZhaWxhYmxlIHVwb24gcmVxdWVzdCBmcm9tIHRpbWUgdG8gdGltZS4gRm9yIHRoZSBhdm9pZGFuY2Ugb2YgZG91YnQsCiAgICB0aGlzIHRyYWRlbWFyayByZXN0cmljdGlvbiBkb2VzIG5vdCBmb3JtIHBhcnQgb2YgdGhlIExpY2Vuc2UuCgogICAgQ3JlYXRpdmUgQ29tbW9ucyBtYXkgYmUgY29udGFjdGVkIGF0IGh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnLy4KICAgICovCn0KIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGRvY0Jsb2NrIjtOO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";