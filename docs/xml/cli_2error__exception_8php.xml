<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="cli_2error__exception_8php" kind="file" language="PHP">
    <compoundname>error_exception.php</compoundname>
    <sectiondef kind="var">
      <memberdef kind="variable" id="cli_2error__exception_8php_1acf48db609a946d13953d8060363fd1d3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>$last</definition>
        <argsstring></argsstring>
        <name>$last</name>
        <initializer>= $exception</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/DevFiles/PHP_Projects/listrik_serkom/app/Views/errors/cli/error_exception.php" line="11" column="1" bodyfile="C:/DevFiles/PHP_Projects/listrik_serkom/app/Views/errors/cli/error_exception.php" bodystart="11" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">&lt;?php</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">use<sp/>CodeIgniter\CLI\CLI;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>Exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">CLI::write(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>.<sp/>$exception::class<sp/>.<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;light_gray&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;red&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7"><highlight class="normal">CLI::write($message);</highlight></codeline>
<codeline lineno="8"><highlight class="normal">CLI::write(</highlight><highlight class="stringliteral">&apos;at<sp/>&apos;</highlight><highlight class="normal"><sp/>.<sp/>CLI::color(clean_path($exception-&gt;getFile())<sp/>.<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>.<sp/>$exception-&gt;getLine(),<sp/></highlight><highlight class="stringliteral">&apos;green&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9"><highlight class="normal">CLI::newLine();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">$last<sp/>=<sp/>$exception;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>($prevException<sp/>=<sp/>$last-&gt;getPrevious())<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>$last<sp/>=<sp/>$prevException;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>CLI::write(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Caused<sp/>by:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>CLI::write(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>[&apos;</highlight><highlight class="normal"><sp/>.<sp/>$prevException::class<sp/>.<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;red&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>CLI::write(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>&apos;</highlight><highlight class="normal"><sp/>.<sp/>$prevException-&gt;getMessage());</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>CLI::write(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>at<sp/>&apos;</highlight><highlight class="normal"><sp/>.<sp/>CLI::color(clean_path($prevException-&gt;getFile())<sp/>.<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>.<sp/>$prevException-&gt;getLine(),<sp/></highlight><highlight class="stringliteral">&apos;green&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>CLI::newLine();</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>backtrace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(defined(</highlight><highlight class="stringliteral">&apos;SHOW_DEBUG_BACKTRACE&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>SHOW_DEBUG_BACKTRACE)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>$backtraces<sp/>=<sp/>$last-&gt;getTrace();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>($backtraces)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLI::write(</highlight><highlight class="stringliteral">&apos;Backtrace:&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;green&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($backtraces<sp/>as<sp/>$i<sp/>=&gt;<sp/>$error)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$padFile<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>4<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$padClass<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>7<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>str_pad($i<sp/>+<sp/>1,<sp/>3,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>STR_PAD_LEFT);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isset($error[</highlight><highlight class="stringliteral">&apos;file&apos;</highlight><highlight class="normal">]))<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$filepath<sp/>=<sp/>clean_path($error[</highlight><highlight class="stringliteral">&apos;file&apos;</highlight><highlight class="normal">])<sp/>.<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>.<sp/>$error[</highlight><highlight class="stringliteral">&apos;line&apos;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLI::write($c<sp/>.<sp/>$padFile<sp/>.<sp/>CLI::color($filepath,<sp/></highlight><highlight class="stringliteral">&apos;yellow&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLI::write($c<sp/>.<sp/>$padFile<sp/>.<sp/>CLI::color(</highlight><highlight class="stringliteral">&apos;[internal<sp/>function]&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;yellow&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$function<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isset($error[</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">]))<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$type<sp/>=<sp/>($error[</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">]<sp/>===<sp/></highlight><highlight class="stringliteral">&apos;-&gt;&apos;</highlight><highlight class="normal">)<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;()&apos;</highlight><highlight class="normal"><sp/>.<sp/>$error[</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">]<sp/>:<sp/>$error[</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$function<sp/>.=<sp/>$padClass<sp/>.<sp/>$error[</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">]<sp/>.<sp/>$type<sp/>.<sp/>$error[</highlight><highlight class="stringliteral">&apos;function&apos;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>elseif<sp/>(!<sp/>isset($error[</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">])<sp/>&amp;&amp;<sp/>isset($error[</highlight><highlight class="stringliteral">&apos;function&apos;</highlight><highlight class="normal">]))<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$function<sp/>.=<sp/>$padClass<sp/>.<sp/>$error[</highlight><highlight class="stringliteral">&apos;function&apos;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$args<sp/>=<sp/>implode(</highlight><highlight class="stringliteral">&apos;,<sp/>&apos;</highlight><highlight class="normal">,<sp/>array_map(</highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>fn<sp/>($value)<sp/>=&gt;<sp/>match<sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_object($value)<sp/>=&gt;<sp/></highlight><highlight class="stringliteral">&apos;Object(&apos;</highlight><highlight class="normal"><sp/>.<sp/>$value::class<sp/>.<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_array($value)<sp/><sp/>=&gt;<sp/>count($value)<sp/>?<sp/></highlight><highlight class="stringliteral">&apos;[...]&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&apos;[]&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$value<sp/>===<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/><sp/><sp/>=&gt;<sp/></highlight><highlight class="stringliteral">&apos;null&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>lowercased<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>var_export($value,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>array_values($error[</highlight><highlight class="stringliteral">&apos;args&apos;</highlight><highlight class="normal">]<sp/>??<sp/>[])));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$function<sp/>.=<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal"><sp/>.<sp/>$args<sp/>.<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLI::write($function);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLI::newLine();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/DevFiles/PHP_Projects/listrik_serkom/app/Views/errors/cli/error_exception.php"/>
  </compounddef>
</doxygen>
